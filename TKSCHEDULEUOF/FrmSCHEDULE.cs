using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.IO;
using System.Data.SqlClient;
using System.Configuration;
using FastReport;
using FastReport.Data;
using System.Threading;
using System.Xml;
using System.Xml.Linq;
using System.Xml;
using System.Xml.Linq;
using TKITDLL;
using TKSCHEDULEUOF.ServiceReference1;
using System.Text.RegularExpressions;
using HtmlAgilityPack;

namespace TKSCHEDULEUOF
{
    public partial class FrmSCHEDULE : Form
    {
        //測試ID = "";
        //正式ID =""
        //測試DB DBNAME = "UOFTEST";
        //正式DB DBNAME = "UOF";
        //string COPID = "0f2fd9bc-b645-4aa5-b3d2-3ecfed7848ab";
        string COPID;
        //string COPCHANGEID = "8c637ad2-adcf-48ef-b665-1860eba83566";
        string COPCHANGEID;

        //string PURID = "cbf3035c-2b72-4416-b4b3-534ea8763460";
        string PURID;
        string DBNAME = "UOF";

        string OLDTASK_ID = null;
        string NEWTASK_ID = null;
        string ATTACH_ID = null;
        string COPTCUDF01 = "N";

        SqlConnection sqlConn = new SqlConnection();
        SqlCommand sqlComm = new SqlCommand();
        string connectionString;
        StringBuilder sbSql = new StringBuilder();
        StringBuilder sbSqlQuery = new StringBuilder();
        SqlDataAdapter adapter1 = new SqlDataAdapter();
        SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
        SqlDataAdapter adapter2 = new SqlDataAdapter();
        SqlCommandBuilder sqlCmdBuilder2 = new SqlCommandBuilder();
        SqlDataAdapter adapter3 = new SqlDataAdapter();
        SqlCommandBuilder sqlCmdBuilder3 = new SqlCommandBuilder();
        SqlDataAdapter adapter4 = new SqlDataAdapter();
        SqlCommandBuilder sqlCmdBuilder4 = new SqlCommandBuilder();
        SqlDataAdapter adapter5 = new SqlDataAdapter();
        SqlCommandBuilder sqlCmdBuilder5 = new SqlCommandBuilder();
        SqlDataAdapter adapter6 = new SqlDataAdapter();
        SqlCommandBuilder sqlCmdBuilder6 = new SqlCommandBuilder();
        SqlDataAdapter adapter7 = new SqlDataAdapter();
        SqlCommandBuilder sqlCmdBuilder7 = new SqlCommandBuilder();
        SqlDataAdapter adapter8 = new SqlDataAdapter();
        SqlCommandBuilder sqlCmdBuilder8 = new SqlCommandBuilder();

        SqlTransaction tran;
        SqlCommand cmd = new SqlCommand();
        int result;
        DataSet ds1 = new DataSet();
        DataSet ds2 = new DataSet();
        DataSet ds3 = new DataSet();
        DataSet ds4 = new DataSet();
        DataSet ds5 = new DataSet();
        DataSet ds6 = new DataSet();
        DataSet ds7 = new DataSet();
        DataSet ds8 = new DataSet();

        /// <summary>
        /// 製一線桶數 BASELIMITHRSBAR1
        /// 製二線桶數 BASELIMITHRSBAR2
        /// 包裝線稼動率時數 BASELIMITHRS9
        /// 製一線稼動率時數 BASELIMITHRS1
        /// 製二線稼動率時數 BASELIMITHRS2
        /// 手工線稼動率時數 BASELIMITHRS3
        /// </summary>
        decimal BASELIMITHRSBAR1 =0;
        decimal BASELIMITHRSBAR2 = 0;
        decimal BASELIMITHRS1 = 0;
        decimal BASELIMITHRS2 = 0;
        decimal BASELIMITHRS3 = 0;
        decimal BASELIMITHRS9 = 0;

        public FrmSCHEDULE()
        {
            InitializeComponent();

            timer1.Enabled = true;
            timer1.Interval = 1000*60 ;
            timer1.Start();

            timer2.Enabled = true;
            timer2.Interval = 1000 * 60;
            timer2.Start();

            timer3.Enabled = true;
            timer3.Interval = 1000 * 60;
            timer3.Start();
        }

        private void timer1_Tick(object sender, EventArgs e)
        {
            label2.Text = DateTime.Now.ToString("yyyy/MM/dd HH:mm:ss");

            string RUNTIME = DateTime.Now.ToString("HHmm");
            string HHmm = "0900";

            // DayOfWeek 0 開始 (表示星期日) 到 6 (表示星期六)
            string RUNDATE = DateTime.Now.DayOfWeek.ToString("d");//tmp2 = 4 
            string date = "1";


            if (RUNTIME.Equals(HHmm))
            {

                BASELIMITHRSBAR1 = SEARCHBASELIMITHRS("製一線桶數");
                BASELIMITHRSBAR1 = Math.Round(BASELIMITHRSBAR1, 0);
                BASELIMITHRSBAR2 = SEARCHBASELIMITHRS("製二線桶數");
                BASELIMITHRSBAR2 = Math.Round(BASELIMITHRSBAR2, 0);

                BASELIMITHRS1 = SEARCHBASELIMITHRS("製一線稼動率時數");
                BASELIMITHRS2 = SEARCHBASELIMITHRS("製二線稼動率時數");
                BASELIMITHRS3 = SEARCHBASELIMITHRS("手工線稼動率時數");
                BASELIMITHRS9 = SEARCHBASELIMITHRS("包裝線稼動率時數");

                ADDTOUOFTB_EIP_SCH_MEMO_MOC(DateTime.Now.ToString("yyyyMMdd"));
                ADDTOUOFTB_EIP_SCH_MEMO_PUR(DateTime.Now.ToString("yyyyMMdd"));
                ADDTOUOFTB_EIP_SCH_MEMO_COP(DateTime.Now.ToString("yyyyMMdd"));
                UPDATEtb_COMPANYSTATUS1();
                UPDATEtb_COMPANYSTATUS2();
                UPDATEtb_COMPANYOWNER_ID();
                ADDtb_COMPANY();
            }
        }

        private void timer2_Tick(object sender, EventArgs e)
        {
            // ADD_TK_MOC_REPORTMOCBOMPROCESS_REPORTMOCBOMORIPROCESS(); 將ERP的品號匯入到TKMOC的生產說明中
            try
            {
                ADD_TK_MOC_REPORTMOCBOMPROCESS_REPORTMOCBOMORIPROCESS();
            }
            catch { }
            //ADD_TK_ZINVMBBAKING ERP烘培品號轉入簽核
            try
            {
                ADD_TK_ZINVMBBAKING();
            }
            catch { }
            //ADD_TKPUR_PURVERSIONSNUMS 更新版費
            try
            {
                ADD_TKPUR_PURVERSIONSNUMS();
            }
            catch { }
            //ADD_TKPUR_PURMODELSNUMS() 更新模具費
            try
            {
                ADD_TKPUR_PURMODELSNUMS();
            }
            catch { }

            //UOF簽核後，產生活動代號到暫存的[TK].[dbo].[Z_POSSET]，再由[TK].[dbo].[Z_POSSET]去更新POS機資料
            try
            {
                NEW_POSET();
            }
            catch { }
           
            //請購變更單，UOF核準後，自動判斷是否有採購單，如果有就產生採購變購單
            try
            {
                NEWPURTEPURTF_ERP();
            }
            catch { }           
            //ERP客戶轉UOF表單-1001客戶基本資料表
            try
            {
                ADD_UOF_COPMA_1001(); 
            }
            catch { }
            //轉入1006委外送驗申請單
            try
            {
                NEWUOFQC1006();
            }
            catch { }
          
            //更新銷貨代收貨款 
            try
            {
                UPDATE_TK_COPTGTG113();
            }
            catch { }
            //更新 工程品號基本資料檔
            try
            {
                UPDATE_TK_BOMMI();
            }
            catch { }

            //官網訂單，依TC054 收貨部門，更改TC010=3大超商的總倉地址 、TC011=指定收貨的門市地址 
            try
            {
                COPTC_TC010_TC011_UPDATE();
            }
            catch { }
           
            //轉入  行銷廣告的活動成效記錄表
            try
            {
                ADD_TBPROMOTIONNFEE();
            }
            catch { }
           
            //轉入ERP的品到EBOM中
            try
            {
                NEW_BOMMI();
            }
            catch { }

            //轉入EBOM中
            try
            {
                NEW_BOMMJ_BOMMK();
            }
            catch { }

           
            //轉入BOM表
            try
            {
                NEW_BOMMC_BOMMD();
            }
            catch { }
           
            //轉入10.行企類表單 1002.產品設計申請
            try
            {
                NEW_TKRESEARCH_TK_UOF_DESIGN_1002();
            }
            catch { }

           
            //轉入13.研發類表單:1002.設計需求內容清單
            try
            {
                NEW_TKRESEARCH_TK_UOF_RESEARCH_1002();
            }
            catch { }

            //暫停不轉入總務的外掛
            //改轉入UOF表單 1005.雜項採購單中 
            //NEWBUYITEM();

            //把UOF的1003.雜項請購單，在核成後，轉到UOF的 	1005.雜項採購單
            try
            {
                ADD_UOF_FORM_GRAFFIRS_1005();
            }
            catch { }
            

            //把UOF的1005.雜項採購單 ，在核成後，轉到 [TKGAFFAIRS].[dbo].[BUYITEMREPORTS] 當報表
            try
            {
                ADD_TKGAFFAIRS_BUYITEMREPORTS();
            }
            catch { }
           


            //品保1002轉到1001
            try
            {
                ADD_TO_UOF_QC1001();
            }
            catch { }
            

            //MOCI02.製令單 
            try
            {
                ADDUOFMOCTAMOCTB();
            }
            catch { }
           

            //ASTI02.資產資料建立作業
            try
            {

            }
            catch { }
            ADDUOFASTMBASTMC();

            ////ERP報價單
            //try
            //{
            //    ADDCOPMACOPMBCOPMC();
            //}
            //catch { }
           

            //ERP請購單
            try
            {
                ADDTOUOFOURTAB();
                ADDTOUOFOURTAB();
                ADDTOUOFOURTAB();
            }
            catch { }
           

            //門市督導單
            try
            {
                ADDTKMKdboTBSTORESCHECK();

            }
            catch { }


            //20230721 暫停
            ////心得訓練單
            //try
            //{
            //    CHECKADDTOUOFFORMEDUCATION();
            //}
            //catch { }

            //20230721 暫停
            ////出差報告單 
            //try
            //{
            //    CHECKADDTOUOFFORBUSINESSTRIPS();
            //}
            //catch { }


            //1002.客訴異常處理單
            try
            {
                NEWTBUOFQC1002();
            }
            catch { }
            

            //採購單
            try
            {
                NEWPURTCPURTD();
            }
            catch { }
           

            //採購變更單
            try
            {
                NEWPURTEPURTF();
            }
            catch { }
           

            //採購核價單
            try
            {
                NEWPURTLPURTMPURTN();
            }
            catch { }
           

            //轉入品保檢驗
            try
            {
                ADDTKQCQCPURTH();
            }
            catch { }
           

            //轉品保UOF驗收表單
            try
            {
                NEWPURTGPURTH();
            }
            catch { }
            

            //轉BOM表變更單
            try
            {
                NEWBOMTABOMTBBOMTC();
            }
            catch { }
           

            //轉入品保的進貨檢驗單
            try
            {
                ADDTKQCUOFQCPURTGPURTH();
            }
            catch { }
          

            //A11A客供入料單同進貨單跑進貨驗收流程
            try
            {
                ADDUOFQCINVTAINVTB();
            }
            catch { }

            //try
            //{
            //    ADDCOPTECOPTF();
            //    ADDCOPTECOPTF();
            //}
            //catch { }

      

            //UPDATE_TB_WKF_TASK_TASK_RESULT();

        }

        //每天執行1次
        private void timer3_Tick(object sender, EventArgs e)
        {

        }

        #region FUNCTION

        //
        public Decimal SEARCHBASELIMITHRS(string ID)
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sbSql.Clear();
                sbSqlQuery.Clear();


                sbSql.AppendFormat(@" 
                                    SELECT  [ID],[LIMITHRS] FROM [TKMOC].[dbo].[BASELIMITHRS] WHERE [ID]='{0}'
                                    ", ID);

                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");


                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    return Convert.ToDecimal(ds1.Tables["ds1"].Rows[0]["LIMITHRS"].ToString());
                }
                else
                {
                    return 0;
                }

            }
            catch
            {
                return 0;
            }
            finally
            {
                sqlConn.Close();
            }
        }

        public string SEARCHFORM_UOF_VERSION_ID(string FORM_NAME)
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sbSql.Clear();
                sbSqlQuery.Clear();


                sbSql.AppendFormat(@" 
                                   SELECT TOP 1 RTRIM(LTRIM(TB_WKF_FORM_VERSION.FORM_VERSION_ID)) FORM_VERSION_ID,TB_WKF_FORM_VERSION.FORM_ID,TB_WKF_FORM_VERSION.VERSION,TB_WKF_FORM_VERSION.ISSUE_CTL
                                    ,TB_WKF_FORM.FORM_NAME
                                    FROM [UOF].dbo.TB_WKF_FORM_VERSION,[UOF].dbo.TB_WKF_FORM
                                    WHERE 1=1
                                    AND TB_WKF_FORM_VERSION.FORM_ID=TB_WKF_FORM.FORM_ID
                                    AND TB_WKF_FORM_VERSION.ISSUE_CTL=1
                                    AND FORM_NAME='{0}'
                                    ORDER BY TB_WKF_FORM_VERSION.FORM_ID,TB_WKF_FORM_VERSION.VERSION DESC

                                    ", FORM_NAME);

                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");


                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    return ds1.Tables["ds1"].Rows[0]["FORM_VERSION_ID"].ToString();
                }
                else
                {
                    return "";
                }

            }
            catch
            {
                return "";
            }
            finally
            {
                sqlConn.Close();
            }
        }


        //public string SEARCHFORM_VERSION_ID(string FORM_NAME)
        //{
        //    try
        //    {
        //        //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
        //        //sqlConn = new SqlConnection(connectionString);

        //        //20210902密
        //        Class1 TKID = new Class1();//用new 建立類別實體
        //        SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

        //        //資料庫使用者密碼解密
        //        sqlsb.Password = TKID.Decryption(sqlsb.Password);
        //        sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

        //        String connectionString;
        //        sqlConn = new SqlConnection(sqlsb.ConnectionString);

        //        sbSql.Clear();
        //        sbSqlQuery.Clear();


        //        sbSql.AppendFormat(@" 
        //                            SELECT 
        //                            RTRIM(LTRIM([FORM_VERSION_ID])) AS FORM_VERSION_ID
        //                            ,[FORM_NAME]
        //                            FROM [TKIT].[dbo].[UOF_FORM_VERSION_ID]
        //                            WHERE [FORM_NAME]='{0}'
        //                            ", FORM_NAME);

        //        adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

        //        sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
        //        sqlConn.Open();
        //        ds1.Clear();
        //        adapter1.Fill(ds1, "ds1");


        //        if (ds1.Tables["ds1"].Rows.Count >= 1)
        //        {
        //            return ds1.Tables["ds1"].Rows[0]["FORM_VERSION_ID"].ToString();
        //        }
        //        else
        //        {
        //            return "";
        //        }

        //    }
        //    catch
        //    {
        //        return "";
        //    }
        //    finally
        //    {
        //        sqlConn.Close();
        //    }
        //}

        public void ADDTOUOFTB_EIP_SCH_MEMO_MOC(string Sday)
        {

            DataSet ds = new DataSet();
            ds = SEARCHMANULINE(Sday);
            Thread.Sleep(1000);
            ds2 = SEARCHMANULINE2(Sday);
            Thread.Sleep(1000);
            ds3 = SEARCHMANULINE3(Sday);
            Thread.Sleep(1000);
            ds4 = SEARCHMANULINE4(Sday);

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sqlConn.Close();
                sqlConn.Open();
                tran = sqlConn.BeginTransaction();

                sbSql.Clear();



                //[CREATE_USER]='7774b96c-6762-45ef-b9d1-fcd718854e9f'，包裝線 MANU90
                //[CREATE_USER]='5ce0f554-8b80-4aed-afea-fcd224cecb81'，製一線 MANU10
                //[CREATE_USER]='0c98530a-b467-4cd4-a411-7279f1e04d0d'，製二線 MANU20
                //[CREATE_USER]='88789ece-41d1-4b48-94f1-6ffab05b05f4'，手工線 MANU30
                //將資料從TKMOC的MOCMANULINE計算出工時，再COPY到UOF的TB_EIP_SCH_MEMO
                //先刪除再新增

                sbSql.AppendFormat(" DELETE [UOF].[dbo].[TB_EIP_SCH_MEMO] WHERE CONVERT(NVARCHAR,[START_TIME],112)>='{0}' AND [CREATE_USER]='7774b96c-6762-45ef-b9d1-fcd718854e9f'", Sday);
                sbSql.AppendFormat(" DELETE [UOF].[dbo].[TB_EIP_SCH_MEMO] WHERE CONVERT(NVARCHAR,[START_TIME],112)>='{0}' AND [CREATE_USER]='5ce0f554-8b80-4aed-afea-fcd224cecb81'", Sday);
                sbSql.AppendFormat(" DELETE [UOF].[dbo].[TB_EIP_SCH_MEMO] WHERE CONVERT(NVARCHAR,[START_TIME],112)>='{0}' AND [CREATE_USER]='0c98530a-b467-4cd4-a411-7279f1e04d0d'", Sday);
                sbSql.AppendFormat(" DELETE [UOF].[dbo].[TB_EIP_SCH_MEMO] WHERE CONVERT(NVARCHAR,[START_TIME],112)>='{0}' AND [CREATE_USER]='88789ece-41d1-4b48-94f1-6ffab05b05f4'", Sday);
                sbSql.AppendFormat(" ");

                if (ds.Tables[0].Rows.Count > 0)
                {
                    foreach (DataRow dr in ds.Tables[0].Rows)
                    {
                        sbSql.AppendFormat(" INSERT INTO [UOF].[dbo].[TB_EIP_SCH_MEMO]");
                        sbSql.AppendFormat(" ([CREATE_TIME],[CREATE_USER],[DESCRIPTION],[END_TIME],[MEMO_GUID],[PERSONAL_TYPE],[REPEAT_GUID],[START_TIME],[SUBJECT],[REMINDER_GUID],[ALL_DAY],[OWNER],[UID],[ICS_GUID])");
                        sbSql.AppendFormat(" VALUES");
                        sbSql.AppendFormat(" ('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}','{13}')", dr["CREATE_TIME"].ToString(), dr["CREATE_USER"].ToString(), dr["DESCRIPTION"].ToString(), dr["END_TIME"].ToString(), dr["MEMO_GUID"].ToString(), dr["PERSONAL_TYPE"].ToString(), dr["REPEAT_GUID"].ToString(), dr["START_TIME"].ToString(), dr["SUBJECT"].ToString(), dr["REMINDER_GUID"].ToString(), dr["ALL_DAY"].ToString(), dr["OWNER"].ToString(), dr["UID"].ToString(), dr["ICS_GUID"].ToString());
                        sbSql.AppendFormat(" ");
                    }
                }

                if (ds2.Tables[0].Rows.Count > 0)
                {
                    foreach (DataRow dr in ds2.Tables[0].Rows)
                    {
                        sbSql.AppendFormat(" INSERT INTO [UOF].[dbo].[TB_EIP_SCH_MEMO]");
                        sbSql.AppendFormat(" ([CREATE_TIME],[CREATE_USER],[DESCRIPTION],[END_TIME],[MEMO_GUID],[PERSONAL_TYPE],[REPEAT_GUID],[START_TIME],[SUBJECT],[REMINDER_GUID],[ALL_DAY],[OWNER],[UID],[ICS_GUID])");
                        sbSql.AppendFormat(" VALUES");
                        sbSql.AppendFormat(" ('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}','{13}')", dr["CREATE_TIME"].ToString(), dr["CREATE_USER"].ToString(), dr["DESCRIPTION"].ToString(), dr["END_TIME"].ToString(), dr["MEMO_GUID"].ToString(), dr["PERSONAL_TYPE"].ToString(), dr["REPEAT_GUID"].ToString(), dr["START_TIME"].ToString(), dr["SUBJECT"].ToString(), dr["REMINDER_GUID"].ToString(), dr["ALL_DAY"].ToString(), dr["OWNER"].ToString(), dr["UID"].ToString(), dr["ICS_GUID"].ToString());
                        sbSql.AppendFormat(" ");
                    }
                }

                if (ds3.Tables[0].Rows.Count > 0)
                {
                    foreach (DataRow dr in ds3.Tables[0].Rows)
                    {
                        sbSql.AppendFormat(" INSERT INTO [UOF].[dbo].[TB_EIP_SCH_MEMO]");
                        sbSql.AppendFormat(" ([CREATE_TIME],[CREATE_USER],[DESCRIPTION],[END_TIME],[MEMO_GUID],[PERSONAL_TYPE],[REPEAT_GUID],[START_TIME],[SUBJECT],[REMINDER_GUID],[ALL_DAY],[OWNER],[UID],[ICS_GUID])");
                        sbSql.AppendFormat(" VALUES");
                        sbSql.AppendFormat(" ('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}','{13}')", dr["CREATE_TIME"].ToString(), dr["CREATE_USER"].ToString(), dr["DESCRIPTION"].ToString(), dr["END_TIME"].ToString(), dr["MEMO_GUID"].ToString(), dr["PERSONAL_TYPE"].ToString(), dr["REPEAT_GUID"].ToString(), dr["START_TIME"].ToString(), dr["SUBJECT"].ToString(), dr["REMINDER_GUID"].ToString(), dr["ALL_DAY"].ToString(), dr["OWNER"].ToString(), dr["UID"].ToString(), dr["ICS_GUID"].ToString());
                        sbSql.AppendFormat(" ");
                    }
                }

                if (ds4.Tables[0].Rows.Count > 0)
                {
                    foreach (DataRow dr in ds4.Tables[0].Rows)
                    {
                        sbSql.AppendFormat(" INSERT INTO [UOF].[dbo].[TB_EIP_SCH_MEMO]");
                        sbSql.AppendFormat(" ([CREATE_TIME],[CREATE_USER],[DESCRIPTION],[END_TIME],[MEMO_GUID],[PERSONAL_TYPE],[REPEAT_GUID],[START_TIME],[SUBJECT],[REMINDER_GUID],[ALL_DAY],[OWNER],[UID],[ICS_GUID])");
                        sbSql.AppendFormat(" VALUES");
                        sbSql.AppendFormat(" ('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}','{13}')", dr["CREATE_TIME"].ToString(), dr["CREATE_USER"].ToString(), dr["DESCRIPTION"].ToString(), dr["END_TIME"].ToString(), dr["MEMO_GUID"].ToString(), dr["PERSONAL_TYPE"].ToString(), dr["REPEAT_GUID"].ToString(), dr["START_TIME"].ToString(), dr["SUBJECT"].ToString(), dr["REMINDER_GUID"].ToString(), dr["ALL_DAY"].ToString(), dr["OWNER"].ToString(), dr["UID"].ToString(), dr["ICS_GUID"].ToString());
                        sbSql.AppendFormat(" ");
                    }
                }




                cmd.Connection = sqlConn;
                cmd.CommandTimeout = 60;
                cmd.CommandText = sbSql.ToString();
                cmd.Transaction = tran;
                result = cmd.ExecuteNonQuery();

                if (result == 0)
                {
                    tran.Rollback();    //交易取消
                }
                else
                {
                    tran.Commit();      //執行交易  
                    //Console.WriteLine("ADDTOUOFTB_EIP_SCH_MEMO_MOC OK");

                }

            }
            catch
            {

            }

            finally
            {
                sqlConn.Close();
            }
        }

        //製一線、製二線的桶數
        public DataSet SEARCHMANULINE(string Sday)
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sbSql.Clear();
                sbSqlQuery.Clear();


                sbSql.AppendFormat(@" 
                                    SELECT [CREATE_TIME],[CREATE_USER],[DESCRIPTION],[END_TIME],[MEMO_GUID],[PERSONAL_TYPE],[REPEAT_GUID],[START_TIME],[SUBJECT],[REMINDER_GUID],[ALL_DAY],[OWNER],[UID],[ICS_GUID]
                                    FROM (
                                    SELECT CONVERT(varchar(100),GETDATE(),21) AS [CREATE_TIME],'0c98530a-b467-4cd4-a411-7279f1e04d0d' AS [CREATE_USER],[MOCMANULINE].[MANU]+'-'+CONVERT(NVARCHAR,CONVERT(DECIMAL(14,2),SUM([BAR])))+'桶數/每日可做{1}桶 ' AS [DESCRIPTION],CONVERT(NVARCHAR,[MANUDATE],112) AS [END_TIME],NEWID() AS [MEMO_GUID],'Display' AS [PERSONAL_TYPE],NULL AS [REPEAT_GUID],CONVERT(varchar(100),DATEADD(second,1,[MANUDATE]),21) AS [START_TIME],[MOCMANULINE].[MANU]+'---'+CONVERT(NVARCHAR,CONVERT(DECIMAL(14,2),SUM([BAR])))+'桶數/每日可做{1}桶 ' AS [SUBJECT],NULL AS [REMINDER_GUID],'1' AS [ALL_DAY],'0c98530a-b467-4cd4-a411-7279f1e04d0d' AS [OWNER],NULL AS [UID],NULL AS [ICS_GUID]
                                    FROM [TKMOC].[dbo].[MOCMANULINE],[TK].dbo.INVMB
                                    LEFT JOIN [TKMOC].[dbo].[PREINVMBMANU] ON [PREINVMBMANU].MB001=INVMB.MB001 AND [PREINVMBMANU].MANU LIKE '%製一線%'
                                    WHERE INVMB.MB001=MOCMANULINE.MB001 
                                    AND CONVERT(NVARCHAR,[MANUDATE],112) >='{0}'
                                    AND [MOCMANULINE]. [MANU]='製一線'
                                    AND [MOCMANULINE].[MB001] NOT IN (SELECT MB001 FROM  [TKMOC].[dbo].[MOCMANULINELIMITBARCOUNT])      
                                    GROUP BY [MOCMANULINE].[MANU],[MANUDATE]
                                    UNION
                                    SELECT CONVERT(varchar(100),GETDATE(),21) AS [CREATE_TIME],'5ce0f554-8b80-4aed-afea-fcd224cecb81' AS [CREATE_USER],[MOCMANULINE].[MANU]+'-'+CONVERT(NVARCHAR,CONVERT(DECIMAL(14,2),SUM([BAR])))+'桶數/每日可做{2}桶 ' AS [DESCRIPTION],CONVERT(NVARCHAR,[MANUDATE],112) AS [END_TIME],NEWID() AS [MEMO_GUID],'Display' AS [PERSONAL_TYPE],NULL AS [REPEAT_GUID],CONVERT(varchar(100),DATEADD(second,1,[MANUDATE]),21) AS [START_TIME],[MOCMANULINE].[MANU]+'---'+CONVERT(NVARCHAR,CONVERT(DECIMAL(14,2),SUM([BAR])))+'桶數/每日可做{2}桶 ' AS [SUBJECT],NULL AS [REMINDER_GUID],'1' AS [ALL_DAY],'5ce0f554-8b80-4aed-afea-fcd224cecb81' AS [OWNER],NULL AS [UID],NULL AS [ICS_GUID]
                                    FROM [TKMOC].[dbo].[MOCMANULINE],[TK].dbo.INVMB
                                    LEFT JOIN [TKMOC].[dbo].[PREINVMBMANU] ON [PREINVMBMANU].MB001=INVMB.MB001 AND [PREINVMBMANU].MANU LIKE '%製二線%'
                                    WHERE INVMB.MB001=MOCMANULINE.MB001   
                                    AND CONVERT(NVARCHAR,[MANUDATE],112) >='{0}'
                                    AND [MOCMANULINE]. [MANU]='製二線'
                                    AND [MOCMANULINE].[MB001] NOT IN (SELECT MB001 FROM  [TKMOC].[dbo].[MOCMANULINELIMITBARCOUNT])
                                    GROUP BY [MOCMANULINE].[MANU],[MANUDATE]
                                    ) AS TEMP
                                    ORDER BY [START_TIME],[SUBJECT]
                                    ", DateTime.Now.ToString("yyyyMMdd"), BASELIMITHRSBAR1, BASELIMITHRSBAR2);

                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");



                if (ds1.Tables["ds1"].Rows.Count == 0)
                {
                    return ds1;
                }
                else
                {
                    if (ds1.Tables["ds1"].Rows.Count >= 1)
                    {
                        return ds1;
                    }

                    return ds1;
                }

            }
            catch
            {
                return ds1;
            }
            finally
            {
                sqlConn.Close();
            }
        }
        //包裝線、製一線、製二線、手工線的總工時
        public DataSet SEARCHMANULINE2(string Sday)
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sbSql.Clear();
                sbSqlQuery.Clear();

                sbSql.AppendFormat(@" 
                                     SELECT [CREATE_TIME],[CREATE_USER],[DESCRIPTION],[END_TIME],[MEMO_GUID],[PERSONAL_TYPE],[REPEAT_GUID],[START_TIME],[SUBJECT],[REMINDER_GUID],[ALL_DAY],[OWNER],[UID],[ICS_GUID]
                                     FROM (
                                     SELECT CONVERT(varchar(100),GETDATE(),21) AS [CREATE_TIME],'7774b96c-6762-45ef-b9d1-fcd718854e9f' AS [CREATE_USER],[MOCMANULINE].[MANU]+'-總工時-'+CONVERT(nvarchar,SUM(CONVERT(DECIMAL(12,2),ISNULL(ROUND(([PACKAGE]/NULLIF([PREINVMBMANU].TIMES,1)),0),0))))+'小時 ' AS [DESCRIPTION],CONVERT(NVARCHAR,[MANUDATE],112) AS [END_TIME],NEWID() AS [MEMO_GUID],'Display' AS [PERSONAL_TYPE],NULL AS [REPEAT_GUID],CONVERT(varchar(100),DATEADD(second,2,[MANUDATE]),21) AS [START_TIME],[MOCMANULINE].[MANU]+'--總工時-'+CONVERT(nvarchar,SUM(CONVERT(DECIMAL(12,2),ISNULL(ROUND(([PACKAGE]/NULLIF([PREINVMBMANU].TIMES,1)),0),0))))+'小時 ' AS [SUBJECT],NULL AS [REMINDER_GUID],'1' AS [ALL_DAY],'7774b96c-6762-45ef-b9d1-fcd718854e9f' AS [OWNER],NULL AS [UID],NULL AS [ICS_GUID]
                                     FROM [TKMOC].[dbo].[MOCMANULINE],[TK].dbo.INVMB
                                     LEFT JOIN [TKMOC].[dbo].[PREINVMBMANU] ON [PREINVMBMANU].MB001=INVMB.MB001 AND [PREINVMBMANU].MANU LIKE '%包裝%'
                                     WHERE INVMB.MB001=MOCMANULINE.MB001   
                                     AND CONVERT(NVARCHAR,[MANUDATE],112) >='{0}' 
                                     AND [MOCMANULINE]. [MANU]='包裝線'
                                     GROUP BY [MOCMANULINE].[MANU],[MANUDATE]                
                                     UNION
                                     SELECT CONVERT(varchar(100),GETDATE(),21) AS [CREATE_TIME],'0c98530a-b467-4cd4-a411-7279f1e04d0d' AS [CREATE_USER],[MOCMANULINE].[MANU]+'-總工時-'+CONVERT(nvarchar,SUM(CONVERT(DECIMAL(12,2),ISNULL(ROUND(([NUM]/NULLIF([PREINVMBMANU].TIMES,1)),0),0))))+'小時 '  AS [DESCRIPTION],CONVERT(NVARCHAR,[MANUDATE],112) AS [END_TIME],NEWID() AS [MEMO_GUID],'Display' AS [PERSONAL_TYPE],NULL AS [REPEAT_GUID],CONVERT(varchar(100),DATEADD(second,2,[MANUDATE]),21)  AS [START_TIME],[MOCMANULINE].[MANU]+'--總工時-'+CONVERT(nvarchar,SUM(CONVERT(DECIMAL(12,2),ISNULL(ROUND(([NUM]/NULLIF([PREINVMBMANU].TIMES,1)),0),0))))+'小時 ' AS [SUBJECT],NULL AS [REMINDER_GUID],'1' AS [ALL_DAY],'0c98530a-b467-4cd4-a411-7279f1e04d0d' AS [OWNER],NULL AS [UID],NULL AS [ICS_GUID]
                                     FROM [TKMOC].[dbo].[MOCMANULINE],[TK].dbo.INVMB
                                     LEFT JOIN [TKMOC].[dbo].[PREINVMBMANU] ON [PREINVMBMANU].MB001=INVMB.MB001 AND [PREINVMBMANU].MANU LIKE '%製一線%'
                                     WHERE INVMB.MB001=MOCMANULINE.MB001 
                                     AND CONVERT(NVARCHAR,[MANUDATE],112) >='{0}' 
                                     AND [MOCMANULINE]. [MANU]='製一線'
                                     GROUP BY [MOCMANULINE].[MANU],[MANUDATE]
                                     UNION
                                     SELECT CONVERT(varchar(100),GETDATE(),21) AS [CREATE_TIME],'5ce0f554-8b80-4aed-afea-fcd224cecb81' AS [CREATE_USER],[MOCMANULINE].[MANU]+'-總工時-'+CONVERT(nvarchar,SUM(CONVERT(DECIMAL(12,2),ISNULL(ROUND(([NUM]/NULLIF([PREINVMBMANU].TIMES,1)),0),0))))+'小時 ' AS [DESCRIPTION],CONVERT(NVARCHAR,[MANUDATE],112) AS [END_TIME],NEWID() AS [MEMO_GUID],'Display' AS [PERSONAL_TYPE],NULL AS [REPEAT_GUID],CONVERT(varchar(100),DATEADD(second,2,[MANUDATE]),21)  AS [START_TIME],[MOCMANULINE].[MANU]+'--總工時-'+CONVERT(nvarchar,SUM(CONVERT(DECIMAL(12,2),ISNULL(ROUND(([NUM]/NULLIF([PREINVMBMANU].TIMES,1)),0),0))))+'小時 ' AS [SUBJECT],NULL AS [REMINDER_GUID],'1' AS [ALL_DAY],'5ce0f554-8b80-4aed-afea-fcd224cecb81' AS [OWNER],NULL AS [UID],NULL AS [ICS_GUID]
                                     FROM [TKMOC].[dbo].[MOCMANULINE],[TK].dbo.INVMB
                                     LEFT JOIN [TKMOC].[dbo].[PREINVMBMANU] ON [PREINVMBMANU].MB001=INVMB.MB001 AND [PREINVMBMANU].MANU LIKE '%製二線%'
                                     WHERE INVMB.MB001=MOCMANULINE.MB001   
                                     AND CONVERT(NVARCHAR,[MANUDATE],112) >='{0}' 
                                     AND [MOCMANULINE]. [MANU]='製二線'
                                     GROUP BY [MOCMANULINE].[MANU],[MANUDATE]
                                     UNION               
                                     SELECT CONVERT(varchar(100),GETDATE(),21) AS [CREATE_TIME],'88789ece-41d1-4b48-94f1-6ffab05b05f4' AS [CREATE_USER],[MOCMANULINE].[MANU]+'-總工時-'+CONVERT(nvarchar,SUM(CONVERT(DECIMAL(12,2),ISNULL(ROUND(([NUM]/NULLIF([PREINVMBMANU].TIMES,1)),0),0))))+'小時 ' AS [DESCRIPTION],CONVERT(NVARCHAR,[MANUDATE],112) AS [END_TIME],NEWID() AS [MEMO_GUID],'Display' AS [PERSONAL_TYPE],NULL AS [REPEAT_GUID],CONVERT(varchar(100),DATEADD(second,2,[MANUDATE]),21)   AS [START_TIME],[MOCMANULINE].[MANU]+'--總工時-'+CONVERT(nvarchar,SUM(CONVERT(DECIMAL(12,2),ISNULL(ROUND(([NUM]/NULLIF([PREINVMBMANU].TIMES,1)),0),0))))+'小時 ' AS [SUBJECT],NULL AS [REMINDER_GUID],'1' AS [ALL_DAY],'88789ece-41d1-4b48-94f1-6ffab05b05f4' AS [OWNER],NULL AS [UID],NULL AS [ICS_GUID]
                                     FROM [TKMOC].[dbo].[MOCMANULINE],[TK].dbo.INVMB
                                     LEFT JOIN [TKMOC].[dbo].[PREINVMBMANU] ON [PREINVMBMANU].MB001=INVMB.MB001 AND [PREINVMBMANU].MANU LIKE '%手工線%'
                                     WHERE INVMB.MB001=MOCMANULINE.MB001 
                                     AND CONVERT(NVARCHAR,[MANUDATE],112) >='{0}' 
                                     AND [MOCMANULINE]. [MANU]='手工線'
                                     GROUP BY [MOCMANULINE].[MANU],[MANUDATE]              
                                     ) AS TEMP
                                     ORDER BY [START_TIME],[SUBJECT]
                                    ", DateTime.Now.ToString("yyyyMMdd"));

                adapter2 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder2 = new SqlCommandBuilder(adapter2);
                sqlConn.Open();
                ds2.Clear();
                adapter2.Fill(ds2, "ds2");



                if (ds2.Tables["ds2"].Rows.Count == 0)
                {
                    return ds2;
                }
                else
                {
                    if (ds1.Tables["ds2"].Rows.Count >= 1)
                    {
                        return ds2;
                    }

                    return ds2;
                }

            }
            catch
            {
                return ds2;
            }
            finally
            {
                sqlConn.Close();
            }
        }

        //包裝線、製一線、製二線、手工線的稼動率
        public DataSet SEARCHMANULINE3(string Sday)
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sbSql.Clear();
                sbSqlQuery.Clear();

               
                sbSql.AppendFormat(@" 
                                 SELECT [CREATE_TIME],[CREATE_USER],[DESCRIPTION],[END_TIME],[MEMO_GUID],[PERSONAL_TYPE],[REPEAT_GUID],[START_TIME],[SUBJECT],[REMINDER_GUID],[ALL_DAY],[OWNER],[UID],[ICS_GUID]
                                 FROM (               
                                 SELECT CONVERT(varchar(100),GETDATE(),21) AS [CREATE_TIME],'7774b96c-6762-45ef-b9d1-fcd718854e9f' AS [CREATE_USER],[MOCMANULINE].[MANU]+'-稼動率-'+CONVERT(nvarchar,CONVERT(DECIMAL(12,2),SUM(ISNULL(ROUND(([PACKAGE]/NULLIF([PREINVMBMANU].TIMES,1)),0),0))/{4}*100))+'%' AS [DESCRIPTION],CONVERT(NVARCHAR,[MANUDATE],112) AS [END_TIME],NEWID() AS [MEMO_GUID],'Display' AS [PERSONAL_TYPE],NULL AS [REPEAT_GUID],CONVERT(varchar(100),DATEADD(second,3,[MANUDATE]),21) AS [START_TIME],[MOCMANULINE].[MANU]+'-稼動率-'+CONVERT(nvarchar,CONVERT(DECIMAL(12,2),SUM(ISNULL(ROUND(([PACKAGE]/NULLIF([PREINVMBMANU].TIMES,1)),0),0))/{4}*100))+'%' AS [SUBJECT],NULL AS [REMINDER_GUID],'1' AS [ALL_DAY],'7774b96c-6762-45ef-b9d1-fcd718854e9f' AS [OWNER],NULL AS [UID],NULL AS [ICS_GUID]
                                 FROM [TKMOC].[dbo].[MOCMANULINE],[TK].dbo.INVMB
                                 LEFT JOIN [TKMOC].[dbo].[PREINVMBMANU] ON [PREINVMBMANU].MB001=INVMB.MB001 AND [PREINVMBMANU].MANU LIKE '%包裝%'
                                 WHERE INVMB.MB001=MOCMANULINE.MB001   
                                 AND CONVERT(NVARCHAR,[MANUDATE],112) >='{0}' 
                                 AND [MOCMANULINE]. [MANU]='包裝線'
                                 GROUP BY [MOCMANULINE].[MANU],[MANUDATE]
                                 UNION
                                 SELECT CONVERT(varchar(100),GETDATE(),21) AS [CREATE_TIME],'0c98530a-b467-4cd4-a411-7279f1e04d0d' AS [CREATE_USER],[MOCMANULINE].[MANU]+'-稼動率-'+CONVERT(nvarchar,CONVERT(DECIMAL(12,2),SUM(ISNULL(ROUND(([NUM]/NULLIF([PREINVMBMANU].TIMES,1)),0),0))/{1}*100))+'%' AS [DESCRIPTION],CONVERT(NVARCHAR,[MANUDATE],112) AS [END_TIME],NEWID() AS [MEMO_GUID],'Display' AS [PERSONAL_TYPE],NULL AS [REPEAT_GUID],CONVERT(varchar(100),DATEADD(second,3,[MANUDATE]),21) AS [START_TIME],[MOCMANULINE].[MANU]+'-稼動率-'+CONVERT(nvarchar,CONVERT(DECIMAL(12,2),SUM(ISNULL(ROUND(([NUM]/NULLIF([PREINVMBMANU].TIMES,1)),0),0))/{1}*100))+'%' AS [SUBJECT],NULL AS [REMINDER_GUID],'1' AS [ALL_DAY],'0c98530a-b467-4cd4-a411-7279f1e04d0d' AS [OWNER],NULL AS [UID],NULL AS [ICS_GUID]
                                 FROM [TKMOC].[dbo].[MOCMANULINE],[TK].dbo.INVMB
                                 LEFT JOIN [TKMOC].[dbo].[PREINVMBMANU] ON [PREINVMBMANU].MB001=INVMB.MB001 AND [PREINVMBMANU].MANU LIKE '%製一線%'
                                 WHERE INVMB.MB001=MOCMANULINE.MB001 
                                 AND CONVERT(NVARCHAR,[MANUDATE],112) >='{0}' 
                                 AND [MOCMANULINE]. [MANU]='製一線'
                                 GROUP BY [MOCMANULINE].[MANU],[MANUDATE] 
                                 UNION
                                 SELECT CONVERT(varchar(100),GETDATE(),21) AS [CREATE_TIME],'5ce0f554-8b80-4aed-afea-fcd224cecb81' AS [CREATE_USER],[MOCMANULINE].[MANU]+'-稼動率-'+CONVERT(nvarchar,CONVERT(DECIMAL(12,2),SUM(ISNULL(ROUND(([NUM]/NULLIF([PREINVMBMANU].TIMES,1)),0),0))/{2}*100))+'%' AS [DESCRIPTION],CONVERT(NVARCHAR,[MANUDATE],112) AS [END_TIME],NEWID() AS [MEMO_GUID],'Display' AS [PERSONAL_TYPE],NULL AS [REPEAT_GUID],CONVERT(varchar(100),DATEADD(second,3,[MANUDATE]),21) AS [START_TIME],[MOCMANULINE].[MANU]+'-稼動率-'+CONVERT(nvarchar,CONVERT(DECIMAL(12,2),SUM(ISNULL(ROUND(([NUM]/NULLIF([PREINVMBMANU].TIMES,1)),0),0))/{2}*100))+'%' AS [SUBJECT],NULL AS [REMINDER_GUID],'1' AS [ALL_DAY],'5ce0f554-8b80-4aed-afea-fcd224cecb81' AS [OWNER],NULL AS [UID],NULL AS [ICS_GUID]
                                 FROM [TKMOC].[dbo].[MOCMANULINE],[TK].dbo.INVMB
                                 LEFT JOIN [TKMOC].[dbo].[PREINVMBMANU] ON [PREINVMBMANU].MB001=INVMB.MB001 AND [PREINVMBMANU].MANU LIKE '%製二線%'
                                 WHERE INVMB.MB001=MOCMANULINE.MB001   
                                 AND CONVERT(NVARCHAR,[MANUDATE],112) >='{0}' 
                                 AND [MOCMANULINE]. [MANU]='製二線'
                                 GROUP BY [MOCMANULINE].[MANU],[MANUDATE]
                                 UNION                
                                 SELECT CONVERT(varchar(100),GETDATE(),21) AS [CREATE_TIME],'88789ece-41d1-4b48-94f1-6ffab05b05f4' AS [CREATE_USER],[MOCMANULINE].[MANU]+'-稼動率-'+CONVERT(nvarchar,CONVERT(DECIMAL(12,2),SUM(ISNULL(ROUND(([NUM]/NULLIF([PREINVMBMANU].TIMES,1)),0),0))/{3}*100))+'%' AS [DESCRIPTION],CONVERT(NVARCHAR,[MANUDATE],112) AS [END_TIME],NEWID() AS [MEMO_GUID],'Display' AS [PERSONAL_TYPE],NULL AS [REPEAT_GUID],CONVERT(varchar(100),DATEADD(second,3,[MANUDATE]),21) AS [START_TIME],[MOCMANULINE].[MANU]+'-稼動率-'+CONVERT(nvarchar,CONVERT(DECIMAL(12,2),SUM(ISNULL(ROUND(([NUM]/NULLIF([PREINVMBMANU].TIMES,1)),0),0))/{3}*100))+'%' AS [SUBJECT],NULL AS [REMINDER_GUID],'1' AS [ALL_DAY],'88789ece-41d1-4b48-94f1-6ffab05b05f4' AS [OWNER],NULL AS [UID],NULL AS [ICS_GUID]
                                 FROM [TKMOC].[dbo].[MOCMANULINE],[TK].dbo.INVMB
                                 LEFT JOIN [TKMOC].[dbo].[PREINVMBMANU] ON [PREINVMBMANU].MB001=INVMB.MB001 AND [PREINVMBMANU].MANU LIKE '%手工線%'
                                 WHERE INVMB.MB001=MOCMANULINE.MB001 
                                 AND CONVERT(NVARCHAR,[MANUDATE],112) >='{0}' 
                                 AND [MOCMANULINE]. [MANU]='手工線'
                                 GROUP BY [MOCMANULINE].[MANU],[MANUDATE]                
                                 ) AS TEMP
                                 ORDER BY [START_TIME],[SUBJECT]
                                 ", DateTime.Now.ToString("yyyyMMdd"), BASELIMITHRS1, BASELIMITHRS2, BASELIMITHRS3, BASELIMITHRS9);

                adapter3 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder3 = new SqlCommandBuilder(adapter3);
                sqlConn.Open();
                ds3.Clear();
                adapter3.Fill(ds3, "ds3");



                if (ds3.Tables["ds3"].Rows.Count == 0)
                {
                    return ds3;
                }
                else
                {
                    if (ds3.Tables["ds3"].Rows.Count >= 1)
                    {
                        return ds3;
                    }

                    return ds3;
                }

            }
            catch
            {
                return ds3;
            }
            finally
            {
                sqlConn.Close();
            }
        }

        //包裝線、製一線、製二線、手工線的明細
        public DataSet SEARCHMANULINE4(string Sday)
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sbSql.Clear();
                sbSqlQuery.Clear();

                sbSql.AppendFormat(" SELECT [CREATE_TIME],[CREATE_USER],[DESCRIPTION],[END_TIME],[MEMO_GUID],[PERSONAL_TYPE],[REPEAT_GUID],[START_TIME],[SUBJECT],[REMINDER_GUID],[ALL_DAY],[OWNER],[UID],[ICS_GUID]");
                sbSql.AppendFormat(" FROM (");
                sbSql.AppendFormat(" SELECT CONVERT(varchar(100),GETDATE(),21) AS [CREATE_TIME],'7774b96c-6762-45ef-b9d1-fcd718854e9f' AS [CREATE_USER],[MOCMANULINE].[MANU]+[MOCMANULINE].[COPTD001]+'-'+[MOCMANULINE].[COPTD002]+'-'+[MOCMANULINE].[COPTD003]+'-'+INVMB.[MB002]+' '+CONVERT(NVARCHAR,CONVERT(INT,ROUND([MOCMANULINE].[BOX],0)))+' 箱 '+CONVERT(NVARCHAR,CONVERT(INT,[MOCMANULINE].[PACKAGE]))+INVMB.MB004+'-'+CONVERT(nvarchar,CONVERT(DECIMAL(12,2),ISNULL(ROUND(([PACKAGE]/NULLIF([PREINVMBMANU].TIMES,1)),0),0)))+'小時' AS [DESCRIPTION],CONVERT(NVARCHAR,[MANUDATE],112) AS [END_TIME],NEWID() AS [MEMO_GUID],'Display' AS [PERSONAL_TYPE],NULL AS [REPEAT_GUID],CONVERT(NVARCHAR,[MANUDATE],112)+' '+CONVERT(varchar(100),GETDATE(),14) AS [START_TIME],[MOCMANULINE].[MANU]+[MOCMANULINE].[COPTD001]+'-'+[MOCMANULINE].[COPTD002]+'-'+[MOCMANULINE].[COPTD003]+'-'+INVMB.[MB002]+' '+CONVERT(NVARCHAR,CONVERT(INT,ROUND([MOCMANULINE].[BOX],0)))+' 箱 '+CONVERT(NVARCHAR,CONVERT(INT,[MOCMANULINE].[PACKAGE]))+INVMB.MB004+'-'+CONVERT(nvarchar,CONVERT(DECIMAL(12,2),ISNULL(ROUND(([PACKAGE]/NULLIF([PREINVMBMANU].TIMES,1)),0),0)))+'小時' AS [SUBJECT],NULL AS [REMINDER_GUID],'1' AS [ALL_DAY],'7774b96c-6762-45ef-b9d1-fcd718854e9f' AS [OWNER],NULL AS [UID],NULL AS [ICS_GUID]");
                sbSql.AppendFormat(" FROM [TKMOC].[dbo].[MOCMANULINE],[TK].dbo.INVMB");
                sbSql.AppendFormat(" LEFT JOIN [TKMOC].[dbo].[PREINVMBMANU] ON [PREINVMBMANU].MB001=INVMB.MB001 AND [PREINVMBMANU].MANU LIKE '%包裝%'");
                sbSql.AppendFormat(" WHERE INVMB.MB001=MOCMANULINE.MB001 ");
                sbSql.AppendFormat(" AND CONVERT(NVARCHAR,[MANUDATE],112) >='{0}' ", DateTime.Now.ToString("yyyyMMdd"));
                sbSql.AppendFormat(" AND [MOCMANULINE]. [MANU]='包裝線'");
                sbSql.AppendFormat(" UNION");                
                sbSql.AppendFormat(" SELECT CONVERT(varchar(100),GETDATE(),21) AS [CREATE_TIME],'0c98530a-b467-4cd4-a411-7279f1e04d0d' AS [CREATE_USER],[MOCMANULINE].[MANU]+[MOCMANULINE].[COPTD001]+'-'+[MOCMANULINE].[COPTD002]+'-'+[MOCMANULINE].[COPTD003]+'-'+INVMB.[MB002]+' '+CONVERT(NVARCHAR,CONVERT(INT,[MOCMANULINE].[NUM]))+INVMB.MB004+'-'+CONVERT(NVARCHAR,CONVERT(DECIMAL(14,2),[BAR]))+'桶數-'+CONVERT(nvarchar,CONVERT(DECIMAL(12,2),ISNULL(ROUND(([NUM]/NULLIF([PREINVMBMANU].TIMES,1)),0),0)))+'小時' AS [DESCRIPTION],CONVERT(NVARCHAR,[MANUDATE],112) AS [END_TIME],NEWID() AS [MEMO_GUID],'Display' AS [PERSONAL_TYPE],NULL AS [REPEAT_GUID],CONVERT(NVARCHAR,[MANUDATE],112)+' '+CONVERT(varchar(100),GETDATE(),14) AS [START_TIME],[MOCMANULINE].[MANU]+[MOCMANULINE].[COPTD001]+'-'+[MOCMANULINE].[COPTD002]+'-'+[MOCMANULINE].[COPTD003]+'-'+INVMB.[MB002]+' '+CONVERT(NVARCHAR,CONVERT(INT,[MOCMANULINE].[NUM]))+INVMB.MB004+'-'+CONVERT(NVARCHAR,CONVERT(DECIMAL(14,2),[BAR]))+'桶數-'+CONVERT(nvarchar,CONVERT(DECIMAL(12,2),ISNULL(ROUND(([NUM]/NULLIF([PREINVMBMANU].TIMES,1)),0),0)))+'小時' AS [SUBJECT],NULL AS [REMINDER_GUID],'1' AS [ALL_DAY],'0c98530a-b467-4cd4-a411-7279f1e04d0d' AS [OWNER],NULL AS [UID],NULL AS [ICS_GUID]");
                sbSql.AppendFormat(" FROM [TKMOC].[dbo].[MOCMANULINE],[TK].dbo.INVMB");
                sbSql.AppendFormat(" LEFT JOIN [TKMOC].[dbo].[PREINVMBMANU] ON [PREINVMBMANU].MB001=INVMB.MB001 AND [PREINVMBMANU].MANU LIKE '%製一線%'");
                sbSql.AppendFormat(" WHERE INVMB.MB001=MOCMANULINE.MB001 ");
                sbSql.AppendFormat(" AND CONVERT(NVARCHAR,[MANUDATE],112) >='{0}' ", DateTime.Now.ToString("yyyyMMdd"));
                sbSql.AppendFormat(" AND [MOCMANULINE]. [MANU]='製一線'");
                sbSql.AppendFormat(" UNION");
                sbSql.AppendFormat(" SELECT CONVERT(varchar(100),GETDATE(),21) AS [CREATE_TIME],'5ce0f554-8b80-4aed-afea-fcd224cecb81' AS [CREATE_USER],[MOCMANULINE].[MANU]+[MOCMANULINE].[COPTD001]+'-'+[MOCMANULINE].[COPTD002]+'-'+[MOCMANULINE].[COPTD003]+'-'+INVMB.[MB002]+' '+CONVERT(NVARCHAR,CONVERT(INT,[MOCMANULINE].[NUM]))+INVMB.MB004+'-'+CONVERT(NVARCHAR,CONVERT(DECIMAL(14,2),[BAR]))+'桶數-'+CONVERT(nvarchar,CONVERT(DECIMAL(12,2),ISNULL(ROUND(([NUM]/NULLIF([PREINVMBMANU].TIMES,1)),0),0)))+'小時' AS [DESCRIPTION],CONVERT(NVARCHAR,[MANUDATE],112) AS [END_TIME],NEWID() AS [MEMO_GUID],'Display' AS [PERSONAL_TYPE],NULL AS [REPEAT_GUID],CONVERT(NVARCHAR,[MANUDATE],112)+' '+CONVERT(varchar(100),GETDATE(),14) AS [START_TIME],[MOCMANULINE].[MANU]+[MOCMANULINE].[COPTD001]+'-'+[MOCMANULINE].[COPTD002]+'-'+[MOCMANULINE].[COPTD003]+'-'+INVMB.[MB002]+' '+CONVERT(NVARCHAR,CONVERT(INT,[MOCMANULINE].[NUM]))+INVMB.MB004+'-'+CONVERT(NVARCHAR,CONVERT(DECIMAL(14,2),[BAR]))+'桶數-'+CONVERT(nvarchar,CONVERT(DECIMAL(12,2),ISNULL(ROUND(([NUM]/NULLIF([PREINVMBMANU].TIMES,1)),0),0)))+'小時' AS [SUBJECT],NULL AS [REMINDER_GUID],'1' AS [ALL_DAY],'5ce0f554-8b80-4aed-afea-fcd224cecb81' AS [OWNER],NULL AS [UID],NULL AS [ICS_GUID]");
                sbSql.AppendFormat(" FROM [TKMOC].[dbo].[MOCMANULINE],[TK].dbo.INVMB");
                sbSql.AppendFormat(" LEFT JOIN [TKMOC].[dbo].[PREINVMBMANU] ON [PREINVMBMANU].MB001=INVMB.MB001 AND [PREINVMBMANU].MANU LIKE '%製二線%'");
                sbSql.AppendFormat(" WHERE INVMB.MB001=MOCMANULINE.MB001 ");
                sbSql.AppendFormat(" AND CONVERT(NVARCHAR,[MANUDATE],112) >='{0}' ", DateTime.Now.ToString("yyyyMMdd"));
                sbSql.AppendFormat(" AND [MOCMANULINE]. [MANU]='製二線'");               
                sbSql.AppendFormat(" UNION");
                sbSql.AppendFormat(" SELECT CONVERT(varchar(100),GETDATE(),21) AS [CREATE_TIME],'88789ece-41d1-4b48-94f1-6ffab05b05f4' AS [CREATE_USER],[MOCMANULINE].[MANU]+[MOCMANULINE].[COPTD001]+'-'+[MOCMANULINE].[COPTD002]+'-'+[MOCMANULINE].[COPTD003]+'-'+INVMB.[MB002]+' '+CONVERT(NVARCHAR,CONVERT(INT,[MOCMANULINE].[NUM]))+INVMB.MB004+'-'+CONVERT(nvarchar,CONVERT(DECIMAL(12,2),ISNULL(ROUND(([NUM]/NULLIF([PREINVMBMANU].TIMES,1)),0),0)))+'小時' AS [DESCRIPTION],CONVERT(NVARCHAR,[MANUDATE],112) AS [END_TIME],NEWID() AS [MEMO_GUID],'Display' AS [PERSONAL_TYPE],NULL AS [REPEAT_GUID],CONVERT(NVARCHAR,[MANUDATE],112)+' '+CONVERT(varchar(100),GETDATE(),14) AS [START_TIME],[MOCMANULINE].[MANU]+[MOCMANULINE].[COPTD001]+'-'+[MOCMANULINE].[COPTD002]+'-'+[MOCMANULINE].[COPTD003]+'-'+INVMB.[MB002]+' '+CONVERT(NVARCHAR,CONVERT(INT,[MOCMANULINE].[NUM]))+INVMB.MB004+'-'+CONVERT(nvarchar,CONVERT(DECIMAL(12,2),ISNULL(ROUND(([NUM]/NULLIF([PREINVMBMANU].TIMES,1)),0),0)))+'小時' AS [SUBJECT],NULL AS [REMINDER_GUID],'1' AS [ALL_DAY],'88789ece-41d1-4b48-94f1-6ffab05b05f4' AS [OWNER],NULL AS [UID],NULL AS [ICS_GUID]");
                sbSql.AppendFormat(" FROM [TKMOC].[dbo].[MOCMANULINE],[TK].dbo.INVMB");
                sbSql.AppendFormat(" LEFT JOIN [TKMOC].[dbo].[PREINVMBMANU] ON [PREINVMBMANU].MB001=INVMB.MB001 AND [PREINVMBMANU].MANU LIKE '%手工線%'");
                sbSql.AppendFormat(" WHERE INVMB.MB001=MOCMANULINE.MB001   ");
                sbSql.AppendFormat(" AND CONVERT(NVARCHAR,[MANUDATE],112) >='{0}' ", DateTime.Now.ToString("yyyyMMdd"));
                sbSql.AppendFormat(" AND [MOCMANULINE]. [MANU]='手工線'");
                sbSql.AppendFormat(" UNION");
                sbSql.AppendFormat(" SELECT CONVERT(varchar(100),GETDATE(),21) AS [CREATE_TIME],'88789ece-41d1-4b48-94f1-6ffab05b05f4' AS [CREATE_USER],'手工線'+TA001+'-'+TA002+TA034+CONVERT(NVARCHAR,CONVERT(INT,TA015))+TA007 AS [DESCRIPTION],CONVERT(NVARCHAR,TA003,112) AS [END_TIME],NEWID() AS [MEMO_GUID],'Display' AS [PERSONAL_TYPE],NULL AS [REPEAT_GUID],CONVERT(NVARCHAR,TA003,112)+' '+CONVERT(varchar(100),GETDATE(),14) AS [START_TIME],'手工線'+TA001+'-'+TA002+TA034+CONVERT(NVARCHAR,CONVERT(INT,TA015))+TA007 AS [SUBJECT],NULL AS [REMINDER_GUID],'1' AS [ALL_DAY],'88789ece-41d1-4b48-94f1-6ffab05b05f4' AS [OWNER],NULL AS [UID],NULL AS [ICS_GUID]");
                sbSql.AppendFormat(" FROM [TK].dbo.MOCTA");
                sbSql.AppendFormat(" WHERE  TA021='04'");
                sbSql.AppendFormat(" AND TA003>='{0}'", DateTime.Now.ToString("yyyyMMdd"));
                sbSql.AppendFormat(" ) AS TEMP");
                sbSql.AppendFormat(" ORDER BY [START_TIME],[SUBJECT]");
                sbSql.AppendFormat(" ");
                sbSql.AppendFormat(" ");

                adapter4 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder4 = new SqlCommandBuilder(adapter4);
                sqlConn.Open();
                ds4.Clear();
                adapter4.Fill(ds4, "ds4");



                if (ds4.Tables["ds4"].Rows.Count == 0)
                {
                    return ds4;
                }
                else
                {
                    if (ds4.Tables["ds4"].Rows.Count >= 1)
                    {
                        return ds4;
                    }

                    return ds4;
                }

            }
            catch
            {
                return ds4;
            }
            finally
            {
                sqlConn.Close();
            }
        }

        public void ADDTOUOFTB_EIP_SCH_MEMO_PUR(string Sday)
        {

            DataSet ds5 = new DataSet();
            ds5 = SEARCHMANULINE5(Sday);
          

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sqlConn.Close();
                sqlConn.Open();
                tran = sqlConn.BeginTransaction();

                sbSql.Clear();
        
                //先刪除再新增

                sbSql.AppendFormat(" DELETE [UOF].[dbo].[TB_EIP_SCH_MEMO] WHERE CONVERT(NVARCHAR,[START_TIME],112)>='{0}' AND [CREATE_USER]='701e642b-c4d5-43ce-8289-c7dffb7ba016'", Sday);
                sbSql.AppendFormat(" ");

                if (ds5.Tables[0].Rows.Count > 0)
                {
                    foreach (DataRow dr in ds5.Tables[0].Rows)
                    {
                        sbSql.AppendFormat(" INSERT INTO [UOF].[dbo].[TB_EIP_SCH_MEMO]");
                        sbSql.AppendFormat(" ([CREATE_TIME],[CREATE_USER],[DESCRIPTION],[END_TIME],[MEMO_GUID],[PERSONAL_TYPE],[REPEAT_GUID],[START_TIME],[SUBJECT],[REMINDER_GUID],[ALL_DAY],[OWNER],[UID],[ICS_GUID])");
                        sbSql.AppendFormat(" VALUES");
                        sbSql.AppendFormat(" ('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}','{13}')", dr["CREATE_TIME"].ToString(), dr["CREATE_USER"].ToString(), dr["DESCRIPTION"].ToString(), dr["END_TIME"].ToString(), dr["MEMO_GUID"].ToString(), dr["PERSONAL_TYPE"].ToString(), dr["REPEAT_GUID"].ToString(), dr["START_TIME"].ToString(), dr["SUBJECT"].ToString(), dr["REMINDER_GUID"].ToString(), dr["ALL_DAY"].ToString(), dr["OWNER"].ToString(), dr["UID"].ToString(), dr["ICS_GUID"].ToString());
                        sbSql.AppendFormat(" ");
                    }
                }

             




                cmd.Connection = sqlConn;
                cmd.CommandTimeout = 60;
                cmd.CommandText = sbSql.ToString();
                cmd.Transaction = tran;
                result = cmd.ExecuteNonQuery();

                if (result == 0)
                {
                    tran.Rollback();    //交易取消
                }
                else
                {
                    tran.Commit();      //執行交易  
                    //Console.WriteLine("ADDTOUOFTB_EIP_SCH_MEMO_MOC OK");

                }

            }
            catch
            {

            }

            finally
            {
                sqlConn.Close();
            }
        }

        //採購明細
        public DataSet SEARCHMANULINE5(string Sday)
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sbSql.Clear();
                sbSqlQuery.Clear();

                sbSql.AppendFormat(" SELECT CONVERT(varchar(100),GETDATE(),21) AS [CREATE_TIME],'701e642b-c4d5-43ce-8289-c7dffb7ba016' AS [CREATE_USER],TD005+'-'+CONVERT(NVARCHAR,(TD008-TD015))+' '+TD009 AS [DESCRIPTION],CONVERT(NVARCHAR,[TD012],112) AS [END_TIME],NEWID() AS [MEMO_GUID],'Display' AS [PERSONAL_TYPE],NULL AS [REPEAT_GUID],CONVERT(NVARCHAR,[TD012],112) AS [START_TIME],TD005+'-'+CONVERT(NVARCHAR,(TD008-TD015))+' '+TD009  AS [SUBJECT],NULL AS [REMINDER_GUID],'1' AS [ALL_DAY],'701e642b-c4d5-43ce-8289-c7dffb7ba016' AS [OWNER],NULL AS [UID],NULL AS [ICS_GUID]");
                sbSql.AppendFormat(" FROM [TK].[dbo].[PURTD],[TK].dbo.INVMB");
                sbSql.AppendFormat(" WHERE TD004=MB001");
                sbSql.AppendFormat(" AND TD016 IN ('N')");
                sbSql.AppendFormat(" AND (TD004 LIKE '1%' OR TD004 LIKE '2%')");
                sbSql.AppendFormat(" AND TD012>='{0}'",Sday);
                sbSql.AppendFormat(" ORDER BY TD012");
                sbSql.AppendFormat(" ");

                adapter5 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder5= new SqlCommandBuilder(adapter5);
                sqlConn.Open();
                ds5.Clear();
                adapter5.Fill(ds5, "ds5");



                if (ds5.Tables["ds5"].Rows.Count == 0)
                {
                    return ds5;
                }
                else
                {
                    if (ds5.Tables["ds5"].Rows.Count >= 1)
                    {
                        return ds5;
                    }

                    return ds5;
                }

            }
            catch
            {
                return ds5;
            }
            finally
            {
                sqlConn.Close();
            }
        }

        public void ADDTOUOFTB_EIP_SCH_MEMO_COP(string Sday)
        {

            DataSet ds6 = new DataSet();
            DataSet ds7 = new DataSet();
            DataSet ds8 = new DataSet();
            ds6 = SEARCHMANULINE6(Sday);
            ds7 = SEARCHMANULINE7(Sday);
            ds8 = SEARCHMANULINE8(Sday);



            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sqlConn.Close();
                sqlConn.Open();
                tran = sqlConn.BeginTransaction();

                sbSql.Clear();

                //先刪除再新增

                sbSql.AppendFormat(" DELETE [UOF].[dbo].[TB_EIP_SCH_MEMO] WHERE CONVERT(NVARCHAR,[START_TIME],112)>='{0}' AND [CREATE_USER]='4eda2bfc-bf4b-4df2-a39c-1cc46e68598a'", Sday);
                sbSql.AppendFormat(" DELETE [UOF].[dbo].[TB_EIP_SCH_MEMO] WHERE CONVERT(NVARCHAR,[START_TIME],112)>='{0}' AND [CREATE_USER]='8e841f56-0a77-4b5c-9c7e-1fd05b089900'", Sday);
                sbSql.AppendFormat(" DELETE [UOF].[dbo].[TB_EIP_SCH_MEMO] WHERE CONVERT(NVARCHAR,[START_TIME],112)>='{0}' AND [CREATE_USER]='e6a83ac9-5ab4-4c5b-af50-1936a694ffe8'", Sday);
                sbSql.AppendFormat(" ");

                if (ds6.Tables[0].Rows.Count > 0)
                {
                    foreach (DataRow dr in ds6.Tables[0].Rows)
                    {
                        sbSql.AppendFormat(" INSERT INTO [UOF].[dbo].[TB_EIP_SCH_MEMO]");
                        sbSql.AppendFormat(" ([CREATE_TIME],[CREATE_USER],[DESCRIPTION],[END_TIME],[MEMO_GUID],[PERSONAL_TYPE],[REPEAT_GUID],[START_TIME],[SUBJECT],[REMINDER_GUID],[ALL_DAY],[OWNER],[UID],[ICS_GUID])");
                        sbSql.AppendFormat(" VALUES");
                        sbSql.AppendFormat(" ('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}','{13}')", dr["CREATE_TIME"].ToString(), dr["CREATE_USER"].ToString(), dr["DESCRIPTION"].ToString(), dr["END_TIME"].ToString(), dr["MEMO_GUID"].ToString(), dr["PERSONAL_TYPE"].ToString(), dr["REPEAT_GUID"].ToString(), dr["START_TIME"].ToString(), dr["SUBJECT"].ToString(), dr["REMINDER_GUID"].ToString(), dr["ALL_DAY"].ToString(), dr["OWNER"].ToString(), dr["UID"].ToString(), dr["ICS_GUID"].ToString());
                        sbSql.AppendFormat(" ");
                    }
                }
                if (ds7.Tables[0].Rows.Count > 0)
                {
                    foreach (DataRow dr in ds7.Tables[0].Rows)
                    {
                        sbSql.AppendFormat(" INSERT INTO [UOF].[dbo].[TB_EIP_SCH_MEMO]");
                        sbSql.AppendFormat(" ([CREATE_TIME],[CREATE_USER],[DESCRIPTION],[END_TIME],[MEMO_GUID],[PERSONAL_TYPE],[REPEAT_GUID],[START_TIME],[SUBJECT],[REMINDER_GUID],[ALL_DAY],[OWNER],[UID],[ICS_GUID])");
                        sbSql.AppendFormat(" VALUES");
                        sbSql.AppendFormat(" ('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}','{13}')", dr["CREATE_TIME"].ToString(), dr["CREATE_USER"].ToString(), dr["DESCRIPTION"].ToString(), dr["END_TIME"].ToString(), dr["MEMO_GUID"].ToString(), dr["PERSONAL_TYPE"].ToString(), dr["REPEAT_GUID"].ToString(), dr["START_TIME"].ToString(), dr["SUBJECT"].ToString(), dr["REMINDER_GUID"].ToString(), dr["ALL_DAY"].ToString(), dr["OWNER"].ToString(), dr["UID"].ToString(), dr["ICS_GUID"].ToString());
                        sbSql.AppendFormat(" ");
                    }
                }
                if (ds8.Tables[0].Rows.Count > 0)
                {
                    foreach (DataRow dr in ds8.Tables[0].Rows)
                    {
                        sbSql.AppendFormat(" INSERT INTO [UOF].[dbo].[TB_EIP_SCH_MEMO]");
                        sbSql.AppendFormat(" ([CREATE_TIME],[CREATE_USER],[DESCRIPTION],[END_TIME],[MEMO_GUID],[PERSONAL_TYPE],[REPEAT_GUID],[START_TIME],[SUBJECT],[REMINDER_GUID],[ALL_DAY],[OWNER],[UID],[ICS_GUID])");
                        sbSql.AppendFormat(" VALUES");
                        sbSql.AppendFormat(" ('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}','{13}')", dr["CREATE_TIME"].ToString(), dr["CREATE_USER"].ToString(), dr["DESCRIPTION"].ToString(), dr["END_TIME"].ToString(), dr["MEMO_GUID"].ToString(), dr["PERSONAL_TYPE"].ToString(), dr["REPEAT_GUID"].ToString(), dr["START_TIME"].ToString(), dr["SUBJECT"].ToString(), dr["REMINDER_GUID"].ToString(), dr["ALL_DAY"].ToString(), dr["OWNER"].ToString(), dr["UID"].ToString(), dr["ICS_GUID"].ToString());
                        sbSql.AppendFormat(" ");
                    }
                }






                cmd.Connection = sqlConn;
                cmd.CommandTimeout = 60;
                cmd.CommandText = sbSql.ToString();
                cmd.Transaction = tran;
                result = cmd.ExecuteNonQuery();

                if (result == 0)
                {
                    tran.Rollback();    //交易取消
                }
                else
                {
                    tran.Commit();      //執行交易  
                    //Console.WriteLine("ADDTOUOFTB_EIP_SCH_MEMO_MOC OK");

                }

            }
            catch
            {

            }

            finally
            {
                sqlConn.Close();
            }
        }

        //訂單-國內
        public DataSet SEARCHMANULINE6(string Sday)
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sbSql.Clear();
                sbSqlQuery.Clear();

                sbSql.AppendFormat(" SELECT CONVERT(varchar(100),GETDATE(),21) AS [CREATE_TIME],'4eda2bfc-bf4b-4df2-a39c-1cc46e68598a' AS [CREATE_USER],TC053+'-'+TD005+'-'+CONVERT(NVARCHAR,CONVERT(INT,(TD008-TD009)))+' ('+TD010+') 贈品'+CONVERT(NVARCHAR,CONVERT(INT,(TD024-TD025)))+' ('+TD010+')' AS [DESCRIPTION],CONVERT(NVARCHAR,[TD013],112) AS [END_TIME],NEWID() AS [MEMO_GUID],'Display' AS [PERSONAL_TYPE],NULL AS [REPEAT_GUID],CONVERT(NVARCHAR,[TD013],112) AS [START_TIME],TC053+'-'+TD005+'-'+CONVERT(NVARCHAR,CONVERT(INT,(TD008-TD009)))+' ('+TD010+') 贈品'+CONVERT(NVARCHAR,CONVERT(INT,(TD024-TD025)))+' ('+TD010+')' AS [SUBJECT],NULL AS [REMINDER_GUID],'1' AS [ALL_DAY],'4eda2bfc-bf4b-4df2-a39c-1cc46e68598a' AS [OWNER],NULL AS [UID],NULL AS [ICS_GUID]");
                sbSql.AppendFormat(" FROM [TK].[dbo].[COPTC],[TK].[dbo].[COPTD],[TK].dbo.INVMB");
                sbSql.AppendFormat(" WHERE TC001=TD001 AND TC002=TD002");
                sbSql.AppendFormat(" AND TD004=MB001");
                sbSql.AppendFormat(" AND TD016 IN ('N')");
                sbSql.AppendFormat(" AND TD001 IN ('A221','A223','A227','A229')");
                sbSql.AppendFormat(" AND TD013>='{0}'",Sday);
                sbSql.AppendFormat(" ORDER BY TD013,TC001,TC002");
                sbSql.AppendFormat(" ");
                sbSql.AppendFormat(" ");

                adapter6 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder6 = new SqlCommandBuilder(adapter6);
                sqlConn.Open();
                ds6.Clear();
                adapter6.Fill(ds6, "ds6");



                if (ds6.Tables["ds6"].Rows.Count == 0)
                {
                    return ds6;
                }
                else
                {
                    if (ds6.Tables["ds6"].Rows.Count >= 1)
                    {
                        return ds6;
                    }

                    return ds6;
                }

            }
            catch
            {
                return ds6;
            }
            finally
            {
                sqlConn.Close();
            }
        }

        public DataSet SEARCHMANULINE7(string Sday)
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sbSql.Clear();
                sbSqlQuery.Clear();

                sbSql.AppendFormat(" SELECT CONVERT(varchar(100),GETDATE(),21) AS [CREATE_TIME],'8e841f56-0a77-4b5c-9c7e-1fd05b089900' AS [CREATE_USER],TC053+'-'+TD005+'-'+CONVERT(NVARCHAR,CONVERT(INT,(TD008-TD009)))+' ('+TD010+') 贈品'+CONVERT(NVARCHAR,CONVERT(INT,(TD024-TD025)))+' ('+TD010+')' AS [DESCRIPTION],CONVERT(NVARCHAR,[TD013],112) AS [END_TIME],NEWID() AS [MEMO_GUID],'Display' AS [PERSONAL_TYPE],NULL AS [REPEAT_GUID],CONVERT(NVARCHAR,[TD013],112) AS [START_TIME],TC053+'-'+TD005+'-'+CONVERT(NVARCHAR,CONVERT(INT,(TD008-TD009)))+' ('+TD010+') 贈品'+CONVERT(NVARCHAR,CONVERT(INT,(TD024-TD025)))+' ('+TD010+')' AS [SUBJECT],NULL AS [REMINDER_GUID],'1' AS [ALL_DAY],'8e841f56-0a77-4b5c-9c7e-1fd05b089900' AS [OWNER],NULL AS [UID],NULL AS [ICS_GUID]");
                sbSql.AppendFormat(" FROM [TK].[dbo].[COPTC],[TK].[dbo].[COPTD],[TK].dbo.INVMB");
                sbSql.AppendFormat(" WHERE TC001=TD001 AND TC002=TD002");
                sbSql.AppendFormat(" AND TD004=MB001");
                sbSql.AppendFormat(" AND TD016 IN ('N')");
                sbSql.AppendFormat(" AND TD001 IN ('A222','A227')");
                sbSql.AppendFormat(" AND TD013>='{0}'", Sday);
                sbSql.AppendFormat(" ORDER BY TD013,TC001,TC002");
                sbSql.AppendFormat(" ");
                sbSql.AppendFormat(" ");

                adapter7 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder7 = new SqlCommandBuilder(adapter7);
                sqlConn.Open();
                ds7.Clear();
                adapter7.Fill(ds7, "ds7");



                if (ds7.Tables["ds7"].Rows.Count == 0)
                {
                    return ds7;
                }
                else
                {
                    if (ds7.Tables["ds7"].Rows.Count >= 1)
                    {
                        return ds7;
                    }

                    return ds7;
                }

            }
            catch
            {
                return ds7;
            }
            finally
            {
                sqlConn.Close();
            }
        }

        public DataSet SEARCHMANULINE8(string Sday)
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sbSql.Clear();
                sbSqlQuery.Clear();

                sbSql.AppendFormat(" SELECT CONVERT(varchar(100),GETDATE(),21) AS [CREATE_TIME],'e6a83ac9-5ab4-4c5b-af50-1936a694ffe8' AS [CREATE_USER],TC053+'-'+TD005+'-'+CONVERT(NVARCHAR,CONVERT(INT,(TD008-TD009)))+' ('+TD010+') 贈品'+CONVERT(NVARCHAR,CONVERT(INT,(TD024-TD025)))+' ('+TD010+')' AS [DESCRIPTION],CONVERT(NVARCHAR,[TD013],112) AS [END_TIME],NEWID() AS [MEMO_GUID],'Display' AS [PERSONAL_TYPE],NULL AS [REPEAT_GUID],CONVERT(NVARCHAR,[TD013],112) AS [START_TIME],TC053+'-'+TD005+'-'+CONVERT(NVARCHAR,CONVERT(INT,(TD008-TD009)))+' ('+TD010+') 贈品'+CONVERT(NVARCHAR,CONVERT(INT,(TD024-TD025)))+' ('+TD010+')' AS [SUBJECT],NULL AS [REMINDER_GUID],'1' AS [ALL_DAY],'e6a83ac9-5ab4-4c5b-af50-1936a694ffe8' AS [OWNER],NULL AS [UID],NULL AS [ICS_GUID]");
                sbSql.AppendFormat(" FROM [TK].[dbo].[COPTC],[TK].[dbo].[COPTD],[TK].dbo.INVMB");
                sbSql.AppendFormat(" WHERE TC001=TD001 AND TC002=TD002");
                sbSql.AppendFormat(" AND TD004=MB001");
                sbSql.AppendFormat(" AND TD016 IN ('N')");
                sbSql.AppendFormat(" AND TD001 IN ('A224','A225','A226','A228')");
                sbSql.AppendFormat(" AND TD013>='{0}'", Sday);
                sbSql.AppendFormat(" ORDER BY TD013,TC001,TC002");
                sbSql.AppendFormat(" ");
                sbSql.AppendFormat(" ");

                adapter8 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder8 = new SqlCommandBuilder(adapter8);
                sqlConn.Open();
                ds8.Clear();
                adapter8.Fill(ds8, "ds8");



                if (ds8.Tables["ds8"].Rows.Count == 0)
                {
                    return ds8;
                }
                else
                {
                    if (ds8.Tables["ds8"].Rows.Count >= 1)
                    {
                        return ds8;
                    }

                    return ds8;
                }

            }
            catch
            {
                return ds8;
            }
            finally
            {
                sqlConn.Close();
            }
        }

        public void UPDATEtb_COMPANYSTATUS1()
        {
            DataSet dsCOMPA = new DataSet();
            dsCOMPA = SERACHCOMPA();

            if (dsCOMPA.Tables[0].Rows.Count > 0)
            {
                try
                {
                    //connectionString = ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString;
                    //sqlConn = new SqlConnection(connectionString);

                    //20210902密
                    Class1 TKID = new Class1();//用new 建立類別實體
                    SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

                    //資料庫使用者密碼解密
                    sqlsb.Password = TKID.Decryption(sqlsb.Password);
                    sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                    String connectionString;
                    sqlConn = new SqlConnection(sqlsb.ConnectionString);

                    sqlConn.Close();
                    sqlConn.Open();
                    tran = sqlConn.BeginTransaction();

                    sbSql.Clear();

                    //更新          
                    foreach (DataRow dr in dsCOMPA.Tables[0].Rows)
                    {
                        sbSql.AppendFormat(@" UPDATE [HJ_BM_DB].[dbo].[tb_COMPANY]");
                        sbSql.AppendFormat(@" SET [STATUS]='1'");
                        sbSql.AppendFormat(@" WHERE [ERPNO]='{0}' ", dr["MA001"].ToString());
                        sbSql.AppendFormat(@" ");
                    }

                    sbSql.AppendFormat(@" ");

                    cmd.Connection = sqlConn;
                    cmd.CommandTimeout = 60;
                    cmd.CommandText = sbSql.ToString();
                    cmd.Transaction = tran;
                    result = cmd.ExecuteNonQuery();

                    if (result == 0)
                    {
                        tran.Rollback();    //交易取消
                    }
                    else
                    {
                        tran.Commit();      //執行交易  

                    }

                }
                catch
                {

                }

                finally
                {
                    sqlConn.Close();
                }
            }

        }

        public DataSet SERACHCOMPA()
        {
            DataSet ds = new DataSet();
            SqlDataAdapter adapter = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder = new SqlCommandBuilder();
            SqlTransaction tran;
            SqlCommand cmd = new SqlCommand();

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sbSql.Clear();
                sbSqlQuery.Clear();

                //找出在ERP是被停用的客戶，但是在UOF沒有被停用
                sbSql.AppendFormat(" SELECT MA001");
                sbSql.AppendFormat(" FROM [TK].dbo.COPMA");
                sbSql.AppendFormat(" WHERE ISNULL(UDF01,'')<>'Y'");
                sbSql.AppendFormat(" AND MA001 IN (SELECT [ERPNO] FROM [192.168.1.223].[HJ_BM_DB].[dbo].[tb_COMPANY] WHERE ISNULL([ERPNO],'')<>''  )");
                sbSql.AppendFormat(" AND MA001 IN (SELECT [ERPNO] FROM [192.168.1.223].[HJ_BM_DB].[dbo].[tb_COMPANY] WHERE ISNULL([ERPNO],'')<>'' AND [STATUS]='2' )");
                sbSql.AppendFormat(" ");
                sbSql.AppendFormat(" ");

                adapter = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder = new SqlCommandBuilder(adapter);
                sqlConn.Open();
                ds.Clear();
                adapter.Fill(ds, "ds");



                if (ds.Tables["ds"].Rows.Count == 0)
                {
                    return ds;
                }
                else
                {
                    if (ds.Tables["ds"].Rows.Count >= 1)
                    {
                        return ds;
                    }

                    return ds;
                }

            }
            catch
            {
                return ds;
            }
            finally
            {
                sqlConn.Close();
            }

        }

        public void UPDATEtb_COMPANYSTATUS2()
        {
            DataSet dsCOMPASTOP = new DataSet();
            dsCOMPASTOP=SERACHCOMPASTOP();

            if (dsCOMPASTOP.Tables[0].Rows.Count>0)
            {
                try
                {
                    //connectionString = ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString;
                    //sqlConn = new SqlConnection(connectionString);

                    //20210902密
                    Class1 TKID = new Class1();//用new 建立類別實體
                    SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

                    //資料庫使用者密碼解密
                    sqlsb.Password = TKID.Decryption(sqlsb.Password);
                    sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                    String connectionString;
                    sqlConn = new SqlConnection(sqlsb.ConnectionString);

                    sqlConn.Close();
                    sqlConn.Open();
                    tran = sqlConn.BeginTransaction();

                    sbSql.Clear();

                    //更新          
                    foreach (DataRow dr in dsCOMPASTOP.Tables[0].Rows)
                    {
                        sbSql.AppendFormat(@" UPDATE [HJ_BM_DB].[dbo].[tb_COMPANY]");
                        sbSql.AppendFormat(@" SET [STATUS]='2'");
                        sbSql.AppendFormat(@" WHERE [ERPNO]='{0}' ", dr["MA001"].ToString());
                        sbSql.AppendFormat(@" ");
                    }

                    sbSql.AppendFormat(@" ");

                    cmd.Connection = sqlConn;
                    cmd.CommandTimeout = 60;
                    cmd.CommandText = sbSql.ToString();
                    cmd.Transaction = tran;
                    result = cmd.ExecuteNonQuery();

                    if (result == 0)
                    {
                        tran.Rollback();    //交易取消
                    }
                    else
                    {
                        tran.Commit();      //執行交易  

                    }

                }
                catch
                {

                }

                finally
                {
                    sqlConn.Close();
                }
            }

        }

        public DataSet SERACHCOMPASTOP()
        {
            DataSet ds = new DataSet();
            SqlDataAdapter adapter = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder = new SqlCommandBuilder();
            SqlTransaction tran;
            SqlCommand cmd = new SqlCommand();

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sbSql.Clear();
                sbSqlQuery.Clear();

                //找出在ERP是被停用的客戶，但是在UOF沒有被停用
                sbSql.AppendFormat(" SELECT MA001");
                sbSql.AppendFormat(" FROM [TK].dbo.COPMA");
                sbSql.AppendFormat(" WHERE UDF01='Y'");
                sbSql.AppendFormat(" AND MA001 IN (SELECT [ERPNO] FROM [192.168.1.223].[HJ_BM_DB].[dbo].[tb_COMPANY] WHERE ISNULL([ERPNO],'')<>''  )");
                sbSql.AppendFormat(" AND MA001 IN (SELECT [ERPNO] FROM [192.168.1.223].[HJ_BM_DB].[dbo].[tb_COMPANY] WHERE ISNULL([ERPNO],'')<>'' AND [STATUS]='1' )");
                sbSql.AppendFormat(" ");
                sbSql.AppendFormat(" ");

                adapter = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder = new SqlCommandBuilder(adapter);
                sqlConn.Open();
                ds.Clear();
                adapter.Fill(ds, "ds");



                if (ds.Tables["ds"].Rows.Count == 0)
                {
                    return ds;
                }
                else
                {
                    if (ds.Tables["ds"].Rows.Count >= 1)
                    {
                        return ds;
                    }

                    return ds;
                }

            }
            catch
            {
                return ds;
            }
            finally
            {
                sqlConn.Close();
            }

        }

        public void ADDtb_COMPANY()
        {
            DataSet dsCOPMA = new DataSet();
            dsCOPMA = SERACHdsCOPMA();

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sqlConn.Close();
                sqlConn.Open();
                tran = sqlConn.BeginTransaction();

                sbSql.Clear();

                //更新          
                foreach (DataRow dr in dsCOPMA.Tables[0].Rows)
                {                   
                    sbSql.AppendFormat(@" 
                                        INSERT INTO [HJ_BM_DB].[dbo].[tb_COMPANY]
                                        ([COMPANY_NAME],[ERPNO],[TAX_NUMBER],[PHONE],[FAX],[COUNTRY],[CITY],[TOWN],[ADDRESS],[OVERSEAS_ADDR]
                                        ,[EMAIL],[WEBSITE],[FACEBOOK],[INDUSTRY],[TURNOVER],[WORKER_NUMBER],[EST_DATE],[PARENT_ID],[UPDATE_DATETIME],[CREATE_DATETIME]
                                        ,[CREATE_USER_ID],[UPDATE_USER_ID],[NOTE],[OWNER_ID],[LAST_CONTACT_DATE],[STATUS])
                                        VALUES
                                        ('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}'
                                        ,'{10}','{11}','{12}','{13}','{14}','{15}','{16}',{17},'{18}','{19}'
                                        ,'{20}','{21}','{22}','{23}','{24}','{25}')
                                        ", dr["COMPANY_NAME"].ToString(), dr["ERPNO"].ToString(), dr["TAX_NUMBER"].ToString(), dr["PHONE"].ToString(), dr["FAX"].ToString(), dr["COUNTRY"].ToString(), dr["CITY"].ToString(), dr["TOWN"].ToString(), dr["ADDRESS"].ToString(), dr["OVERSEAS_ADDR"].ToString()
                                        , dr["EMAIL"].ToString(), dr["WEBSITE"].ToString(), dr["FACEBOOK"].ToString(), dr["INDUSTRY"].ToString(), dr["TURNOVER"].ToString(), dr["WORKER_NUMBER"].ToString(), dr["EST_DATE"].ToString(),"NULL", dr["UPDATE_DATETIME"].ToString(), dr["CREATE_DATETIME"].ToString()
                                        , dr["CREATE_USER_ID"].ToString(), dr["UPDATE_USER_ID"].ToString(), dr["NOTE"].ToString(), dr["OWNER_ID"].ToString(), dr["LAST_CONTACT_DATE"].ToString(), dr["STATUS"].ToString());
                }
                sbSql.AppendFormat(@" ");

                cmd.Connection = sqlConn;
                cmd.CommandTimeout = 60;
                cmd.CommandText = sbSql.ToString();
                cmd.Transaction = tran;
                result = cmd.ExecuteNonQuery();

                if (result == 0)
                {
                    tran.Rollback();    //交易取消
                }
                else
                {
                    tran.Commit();      //執行交易  
                    

                }

            }
            catch
            {

            }

            finally
            {
                sqlConn.Close();
            }
        }

        public void UPDATEtb_COMPANYOWNER_ID()
        {
            //DataSet dsCOMPAMA016 = new DataSet();
            //dsCOMPAMA016 = SERACHCOMPAMA016();

            //try
            //{
            //    connectionString = ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString;
            //    sqlConn = new SqlConnection(connectionString);

            //    sqlConn.Close();
            //    sqlConn.Open();
            //    tran = sqlConn.BeginTransaction();

            //    sbSql.Clear();

            //    //更新          
            //    foreach (DataRow dr in dsCOMPAMA016.Tables[0].Rows)
            //    {
            //        sbSql.AppendFormat(@" UPDATE [HJ_BM_DB].[dbo].[tb_COMPANY]");
            //        sbSql.AppendFormat(@" SET [OWNER_ID]='{0}'", dr["USER_ID"].ToString());
            //        sbSql.AppendFormat(@" WHERE [ERPNO]='{0}' ", dr["ERPNO"].ToString());
            //        sbSql.AppendFormat(@" ");
            //    }
            //    sbSql.AppendFormat(@" ");

            //    cmd.Connection = sqlConn;
            //    cmd.CommandTimeout = 60;
            //    cmd.CommandText = sbSql.ToString();
            //    cmd.Transaction = tran;
            //    result = cmd.ExecuteNonQuery();

            //    if (result == 0)
            //    {
            //        tran.Rollback();    //交易取消
            //    }
            //    else
            //    {
            //        tran.Commit();      //執行交易  

            //    }

            //}
            //catch
            //{

            //}

            //finally
            //{
            //    sqlConn.Close();
            //}
        }

        public DataSet SERACHCOMPAMA016()
        {
            DataSet ds = new DataSet();
            SqlDataAdapter adapter = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder = new SqlCommandBuilder();
            SqlTransaction tran;
            SqlCommand cmd = new SqlCommand();

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sbSql.Clear();
                sbSqlQuery.Clear();

                //找出在ERP是被停用的客戶，但是在UOF沒有被停用
                sbSql.AppendFormat(" SELECT [ERPNO],[OWNER_ID],MA001,MA016,[USER_ACCOUNT],[USER_ID]");
                sbSql.AppendFormat(" FROM [192.168.1.223].[HJ_BM_DB].[dbo].[tb_COMPANY],[TK].dbo.COPMA");
                sbSql.AppendFormat(" LEFT JOIN [192.168.1.223].[HJ_BM_DB].[dbo].[tb_USER] ON [tb_USER].[USER_ACCOUNT]=COPMA.MA016");
                sbSql.AppendFormat(" WHERE MA001=[ERPNO] ");
                sbSql.AppendFormat(" AND ISNULL(MA016,'')<>''");
                sbSql.AppendFormat(" AND [OWNER_ID]<>[USER_ID]");
                sbSql.AppendFormat(" ");
                sbSql.AppendFormat(" ");

                adapter = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder = new SqlCommandBuilder(adapter);
                sqlConn.Open();
                ds.Clear();
                adapter.Fill(ds, "ds");



                if (ds.Tables["ds"].Rows.Count == 0)
                {
                    return ds;
                }
                else
                {
                    if (ds.Tables["ds"].Rows.Count >= 1)
                    {
                        return ds;
                    }

                    return ds;
                }

            }
            catch
            {
                return ds;
            }
            finally
            {
                sqlConn.Close();
            }
        }

        public DataSet SERACHdsCOPMA()
        {
            DataSet ds = new DataSet();
            SqlDataAdapter adapter = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder = new SqlCommandBuilder();
            SqlTransaction tran;
            SqlCommand cmd = new SqlCommand();

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sbSql.Clear();
                sbSqlQuery.Clear();

                //               
                sbSql.AppendFormat(@" 
                                    SELECT 
                                    MA002 [COMPANY_NAME]
                                    ,MA001 [ERPNO]
                                    ,MA010 [TAX_NUMBER]
                                    ,MA006 [PHONE]
                                    ,MA008 [FAX]
                                    ,'Taiwan (台灣)' [COUNTRY]
                                    ,'' [CITY]
                                    ,'' [TOWN]
                                    ,'' [ADDRESS]
                                    ,'' [OVERSEAS_ADDR]
                                    ,MA009 [EMAIL]
                                    ,'' [WEBSITE]
                                    ,'' [FACEBOOK]
                                    ,'' [INDUSTRY]
                                    ,'0' [TURNOVER]
                                    ,'0' [WORKER_NUMBER]
                                    ,'' [EST_DATE]
                                    ,'' [PARENT_ID]
                                    ,CONVERT(nvarchar,GETDATE(),111)  [UPDATE_DATETIME]
                                    ,CONVERT(nvarchar,GETDATE(),111)  [CREATE_DATETIME]
                                    ,[USER_ID]  [CREATE_USER_ID]
                                    ,[USER_ID]  [UPDATE_USER_ID]
                                    ,''[NOTE]
                                    ,[USER_ID] [OWNER_ID]
                                    ,'' [LAST_CONTACT_DATE]
                                    ,'1' [STATUS]
                                    FROM [TK].dbo.COPMA
                                    LEFT JOIN [192.168.1.223].[HJ_BM_DB].[dbo].[tb_USER] ON [tb_USER].[USER_ACCOUNT]=MA016
                                    WHERE MA001 NOT IN (SELECT [ERPNO] FROM [192.168.1.223].[HJ_BM_DB].[dbo].[tb_COMPANY] WHERE ISNULL([ERPNO] ,'')<>'')
                                    AND MA001 NOT LIKE '1%'
                                    AND MA001 NOT LIKE '299%'
                                    AND MA001 NOT LIKE '399%'
                                    AND MA001 NOT LIKE '4%'
                                    AND MA001 NOT LIKE '5%'
                                    AND MA001 NOT LIKE '6%'
                                    AND MA001 NOT LIKE '7%'
                                    AND MA001 NOT LIKE '910%'
                                    AND MA001 NOT LIKE '990%'
                                    ");

                adapter = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder = new SqlCommandBuilder(adapter);
                sqlConn.Open();
                ds.Clear();
                adapter.Fill(ds, "ds");



                if (ds.Tables["ds"].Rows.Count == 0)
                {
                    return ds;
                }
                else
                {
                    if (ds.Tables["ds"].Rows.Count >= 1)
                    {
                        return ds;
                    }

                    return ds;
                }

            }
            catch
            {
                return ds;
            }
            finally
            {
                sqlConn.Close();
            }
        }

        public void ADDTB_WKF_EXTERNAL_TASK(string TA001, string TA002)
        {
            DataTable DT = SEARCHPURTAPURTB(TA001, TA002);
            DataTable DTUPFDEP = SEARCHUOFDEP(DT.Rows[0]["TA012"].ToString());

            string account = DT.Rows[0]["TA012"].ToString();         
            string jobTitleId = DT.Rows[0]["TITLE_ID"].ToString();
            string fillerName = DT.Rows[0]["MV002"].ToString();
            string fillerUserGuid = DT.Rows[0]["USER_GUID"].ToString();
            string DEPNAME = DTUPFDEP.Rows[0]["DEPNAME"].ToString();
            string DEPNO = DTUPFDEP.Rows[0]["DEPNO"].ToString();
            string groupId = DTUPFDEP.Rows[0]["GROUP_ID"].ToString();

            if (DTUPFDEP.Rows.Count>=1)
            {
                foreach(DataRow DR in DTUPFDEP.Rows)
                {
                    if(DR["GROUP_CODE"].ToString().Equals(DT.Rows[0]["TA004"].ToString()))
                    {
                        groupId = DR["GROUP_ID"].ToString();
                        DEPNAME = DR["DEPNAME"].ToString();
                        DEPNO = DR["DEPNO"].ToString();
                        
                    }
                }

            }
           

          

            string EXTERNAL_FORM_NBR = DT.Rows[0]["TA001"].ToString().Trim() + DT.Rows[0]["TA002"].ToString().Trim() ;

            int rowscounts = 0;

            XmlDocument xmlDoc = new XmlDocument();
            //建立根節點
            XmlElement Form = xmlDoc.CreateElement("Form");

            //正式的id
            PURID = SEARCHFORM_UOF_VERSION_ID("PUR10.請購單申請");

            if (!string.IsNullOrEmpty(PURID))
            {
                Form.SetAttribute("formVersionId", PURID);
            }
           

            Form.SetAttribute("urgentLevel", "2");
            //加入節點底下
            xmlDoc.AppendChild(Form);

            ////建立節點Applicant
            XmlElement Applicant = xmlDoc.CreateElement("Applicant");
            Applicant.SetAttribute("account", account);
            Applicant.SetAttribute("groupId", groupId);
            Applicant.SetAttribute("jobTitleId", jobTitleId);
            //加入節點底下
            Form.AppendChild(Applicant);

            //建立節點 Comment
            XmlElement Comment = xmlDoc.CreateElement("Comment");
            Comment.InnerText = "申請者意見";
            //加入至節點底下
            Applicant.AppendChild(Comment);

            //建立節點 FormFieldValue
            XmlElement FormFieldValue = xmlDoc.CreateElement("FormFieldValue");
            //加入至節點底下
            Form.AppendChild(FormFieldValue);

            //建立節點FieldItem
            //ID 表單編號	
            XmlElement FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "ID");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //QC	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "QC");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["QC"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //DEPNO 變更版本	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "DEPNO");
            FieldItem.SetAttribute("fieldValue", DEPNAME);
            FieldItem.SetAttribute("realValue", DEPNO);
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TA001 表單編號	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA001");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA001"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TA002 表單編號	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA002");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA002"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TA003 表單編號	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA003");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA003"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TA012 表單編號	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA012");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA012"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //MV002 姓名	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "MV002");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["MV002"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TA006 單頭備註	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA006");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA006"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TB 表單編號	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TB");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點 DataGrid
            XmlElement DataGrid = xmlDoc.CreateElement("DataGrid");
            //DataGrid 加入至 TB 節點底下
            XmlNode TB = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='TB']");
            TB.AppendChild(DataGrid);

           
            foreach (DataRow od in DT.Rows)
            {
                // 新增 Row
                XmlElement Row = xmlDoc.CreateElement("Row");
                Row.SetAttribute("order", (rowscounts).ToString());

                //Row	TB004
                XmlElement Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB004");
                Cell.SetAttribute("fieldValue", od["TB004"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB005
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB005");
                Cell.SetAttribute("fieldValue", od["TB005"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB006
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB006");
                Cell.SetAttribute("fieldValue", od["TB006"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB007
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB007");
                Cell.SetAttribute("fieldValue", od["TB007"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB009
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB009");
                Cell.SetAttribute("fieldValue", od["TB009"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	SUMLA011 可用庫存數量
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "SUMLA011");
                Cell.SetAttribute("fieldValue", od["SUMLA011"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB011
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB011");
                Cell.SetAttribute("fieldValue", od["TB011"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB010
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB010");
                Cell.SetAttribute("fieldValue", od["TB010"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	MA002
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "MA002");
                Cell.SetAttribute("fieldValue", od["MA002"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB012
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB012");
                Cell.SetAttribute("fieldValue", od["TB012"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	LASTTB
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "LASTTB");
                Cell.SetAttribute("fieldValue", od["LASTTB"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	LASTTB
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "LASTTH");
                Cell.SetAttribute("fieldValue", od["LASTTH"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                rowscounts = rowscounts + 1;

                XmlNode DataGridS = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='TB']/DataGrid");
                DataGridS.AppendChild(Row);

            }

            ////用ADDTACK，直接啟動起單
            //ADDTACK(Form);

            //ADD TO DB
            ////string connectionString = ConfigurationManager.ConnectionStrings["dbUOF"].ToString();

            //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
            //sqlConn = new SqlConnection(connectionString);

            //20210902密
            Class1 TKID = new Class1();//用new 建立類別實體
            SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

            //資料庫使用者密碼解密
            sqlsb.Password = TKID.Decryption(sqlsb.Password);
            sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

            String connectionString;
            sqlConn = new SqlConnection(sqlsb.ConnectionString);
            connectionString = sqlConn.ConnectionString.ToString();

            StringBuilder queryString = new StringBuilder();




            queryString.AppendFormat(@" INSERT INTO [{0}].dbo.TB_WKF_EXTERNAL_TASK
                                         (EXTERNAL_TASK_ID,FORM_INFO,STATUS,EXTERNAL_FORM_NBR)
                                        VALUES (NEWID(),@XML,2,'{1}')
                                        ", DBNAME, EXTERNAL_FORM_NBR);

            try
            {
                using (SqlConnection connection = new SqlConnection(connectionString))
                {

                    SqlCommand command = new SqlCommand(queryString.ToString(), connection);
                    command.Parameters.Add("@XML", SqlDbType.NVarChar).Value = Form.OuterXml;

                    command.Connection.Open();

                    int count = command.ExecuteNonQuery();

                    connection.Close();
                    connection.Dispose();

                }
            }
            catch
            {

            }
            finally
            {

            }





        }

        public void ADDTACK(XmlElement Form)
        {
            //Ede.Uof.WKF.Utility.TaskUtilityUCO taskUCO = new Ede.Uof.WKF.Utility.TaskUtilityUCO();

            //string result = taskUCO.WebService_CreateTask(Form.OuterXml);

            //XElement resultXE = XElement.Parse(result);

            //string status = "";
            //string formNBR = "";
            //string error = "";

            //if (resultXE.Element("Status").Value == "1")
            //{
            //    status = "起單成功!";
            //    formNBR = resultXE.Element("FormNumber").Value;
            //    NEWTASK_ID = formNBR;

            //    //Logger.Write("TEST", status + formNBR);

            //}
            //else
            //{
            //    status = "起單失敗!";
            //    error = resultXE.Element("Exception").Element("Message").Value;

            //    //Logger.Write("TEST", status + error + "\r\n" + Form.OuterXml);

            //    throw new Exception(status + error + "\r\n" + Form.OuterXml);

            //}
        }


        public DataTable SEARCHPURTAPURTB(string TA001,string TA002)
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);


                sbSql.Clear();
                sbSqlQuery.Clear();

                //庫存數量看LA009 IN ('20004','20006','20008','20019','20020'

                sbSql.AppendFormat(@"  
                                   SELECT CREATOR,TA001,TA002,TA003,TA004,TA012,TB004,TB005,TB006,TB007,TB009,TB011,TA006,TB012,MV002,UDF03 QC
                                    ,USER_GUID,NAME
                                    ,(SELECT TOP 1 GROUP_ID FROM [192.168.1.223].[{0}].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'GROUP_ID'
                                    ,(SELECT TOP 1 TITLE_ID FROM [192.168.1.223].[{0}].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'TITLE_ID'
                                    ,TB010,MA002,SUMLA011
                                    ,(
                                    SELECT TOP 1 '請購日:'+TA003+' ，請購單:'+TB001+TB002+TB003+' ，請購數量:'+CONVERT(NVARCHAR,TB009)+' '+TB007+' ，廠商:'+MA002+' ，請購人:'+MV002
                                    FROM [TK].dbo.PURTA,[TK].dbo.PURTB,[TK].dbo.PURMA,[TK].dbo.CMSMV
                                    WHERE TA001=TB001 AND TA002=TB002
                                    AND TB010=MA001
                                    AND TA012=MV001
                                    AND TA007 NOT IN ('V')
                                    AND TB004=TEMP.TB004
                                    AND TA001+TA002<>TEMP.TA001+TEMP.TA002
                                    ORDER BY TA003 DESC
                                    ) AS 'LASTTB'
                                    ,(
                                    SELECT TOP 1 '進貨日:'+TG003+' ，進貨單:'+TH001+TH002+TH003+' ，進貨數量:'+CONVERT(NVARCHAR,TH007)+' '+TH008+' ，廠商:'+MA002
                                    FROM [TK].dbo.PURTG,[TK].dbo.PURTH,[TK].dbo.PURMA
                                    WHERE TG001=TH001 AND TG002=TH002
                                    AND TG005=MA001
                                    AND TG013 IN ('Y')
                                    AND TH004=TEMP.TB004
                                    ORDER BY TG003 DESC
                                    ) AS 'LASTTH'
                                    FROM 
                                    (
                                    SELECT PURTA.CREATOR,TA001,TA002,TA003,TA004,TA012,TB004,TB005,TB006,TB007,TB009,TB011,TA006,TB012,TB010,PURTA.UDF03
                                    ,[TB_EB_USER].USER_GUID,NAME
                                    ,(SELECT TOP 1 MV002 FROM [TK].dbo.CMSMV WHERE MV001=TA012) AS 'MV002'
                                    ,(SELECT TOP 1 MA002 FROM [TK].dbo.PURMA WHERE MA001=TB010) AS 'MA002'
                                    ,(SELECT ISNULL(SUM(LA005*LA011),0) FROM [TK].dbo.INVLA WITH(NOLOCK) WHERE LA001=TB004 AND LA009 IN ('20004','20006','20008','20019','20020')) AS SUMLA011
                                    FROM [TK].dbo.PURTB,[TK].dbo.PURTA
                                    LEFT JOIN [192.168.1.223].[{0}].[dbo].[TB_EB_USER] ON [TB_EB_USER].ACCOUNT= TA012 COLLATE Chinese_Taiwan_Stroke_BIN
                                    WHERE TA001=TB001 AND TA002=TB002
                                    AND TA001='{1}' AND TA002='{2}'
                                    ) AS TEMP
                              
                                    ", DBNAME, TA001, TA002);


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    return ds1.Tables["ds1"];

                }
                else
                {
                    return null;
                }

            }
            catch
            {
                return null;
            }
            finally
            {
                sqlConn.Close();
            }
        }


        public void ADDTOUOFOURTAB()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp22"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                DataSet ds1 = new DataSet();
                SqlDataAdapter adapter1 = new SqlDataAdapter();
                SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();

                sbSql.Clear();
                sbSqlQuery.Clear();


                sbSql.AppendFormat(@" 
                                    SELECT TA001,TA002,UDF01
                                    FROM [TK].dbo.PURTA
                                    WHERE TA007='N' AND (UDF01 IN ('Y','y') )
                                    ORDER BY TA001,TA002
                                    ");

                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");


                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    foreach (DataRow dr in ds1.Tables["ds1"].Rows)
                    {
                        ADDTB_WKF_EXTERNAL_TASK(dr["TA001"].ToString().Trim(), dr["TA002"].ToString().Trim());
                    }
                        

                    //ADDTB_WKF_EXTERNAL_TASK("A311", "20210415007");
                }
                else
                {

                }

            }
            catch
            {

            }
            finally
            {
                sqlConn.Close();
            }

            UPDATEPURTAUDF01();
        }

        public void UPDATEPURTAUDF01()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sqlConn.Close();
                sqlConn.Open();
                tran = sqlConn.BeginTransaction();

                sbSql.Clear();
                              
                sbSql.AppendFormat(@"
                                    UPDATE  [TK].dbo.PURTA  
                                    SET UDF01 = 'UOF',TA016='N'
                                    WHERE TA007 = 'N' AND (UDF01 IN ('Y','y') )
                                    ");

                cmd.Connection = sqlConn;
                cmd.CommandTimeout = 60;
                cmd.CommandText = sbSql.ToString();
                cmd.Transaction = tran;
                result = cmd.ExecuteNonQuery();

                if (result == 0)
                {
                    tran.Rollback();    //交易取消
                }
                else
                {
                    tran.Commit();      //執行交易  
                }

            }
            catch
            {

            }

            finally
            {
                sqlConn.Close();
            }
        }

        public DataTable SEARCHUOFDEP(string ACCOUNT)
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sbSql.Clear();
                sbSqlQuery.Clear();

                sbSql.AppendFormat(@"  
                                    SELECT 
                                    [GROUP_NAME] AS 'DEPNAME'
                                    ,[TB_EB_EMPL_DEP].[GROUP_ID]+','+[GROUP_NAME]+',False' AS 'DEPNO'
                                    ,[TB_EB_USER].[USER_GUID]
                                    ,[ACCOUNT]
                                    ,[NAME]
                                    ,[TB_EB_EMPL_DEP].[GROUP_ID]
                                    ,[TITLE_ID]     
                                    ,[GROUP_NAME]
                                    ,[GROUP_CODE]
                                    ,[TB_EB_EMPL_DEP].ORDERS
                                    FROM [192.168.1.223].[{0}].[dbo].[TB_EB_USER],[192.168.1.223].[{0}].[dbo].[TB_EB_EMPL_DEP],[192.168.1.223].[{0}].[dbo].[TB_EB_GROUP]
                                    WHERE [TB_EB_USER].[USER_GUID]=[TB_EB_EMPL_DEP].[USER_GUID]
                                    AND [TB_EB_EMPL_DEP].[GROUP_ID]=[TB_EB_GROUP].[GROUP_ID]
                                    AND ISNULL([TB_EB_GROUP].[GROUP_CODE],'')<>''
                                    AND [ACCOUNT]='{1}'
                                    ORDER BY [TB_EB_EMPL_DEP].ORDERS

                                    ", DBNAME, ACCOUNT);


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    return ds1.Tables["ds1"];

                }
                else
                {
                    return null;
                }

            }
            catch
            {
                return null;
            }
            finally
            {
                sqlConn.Close();
            }
        }

        public void ADDCOPTCCOPTD()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                DataSet ds1 = new DataSet();
                SqlDataAdapter adapter1 = new SqlDataAdapter();
                SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();

                sbSql.Clear();
                sbSqlQuery.Clear();


                sbSql.AppendFormat(@" 
                                    SELECT TC001,TC002
                                    FROM [TK].dbo.COPTC
                                    WHERE TC027='N' AND (UDF02 IN ('Y','y') ) 
                                    ORDER BY TC001,TC002
                                    ");

                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");


                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    foreach (DataRow dr in ds1.Tables["ds1"].Rows)
                    {
                        ADDTB_WKF_EXTERNAL_TASK_COPTCCOPTD(dr["TC001"].ToString().Trim(), dr["TC002"].ToString().Trim());
                    }


                    //ADDTB_WKF_EXTERNAL_TASK("A311", "20210415007");
                }
                else
                {

                }

            }
            catch
            {

            }
            finally
            {
                sqlConn.Close();
            }

            UPDATECOPTCUDF02();
        }

        public void ADDTB_WKF_EXTERNAL_TASK_COPTCCOPTD(string TC001,string TC002)
        {

            DataTable DT = SEARCHCOPTCCOPTD(TC001, TC002);
            DataTable DTUPFDEP = SEARCHUOFDEP(DT.Rows[0]["TC006"].ToString());

            string account = DT.Rows[0]["TC006"].ToString();
            string groupId = DT.Rows[0]["GROUP_ID"].ToString();
            string jobTitleId = DT.Rows[0]["TITLE_ID"].ToString();
            string fillerName = DT.Rows[0]["NAME"].ToString();
            string fillerUserGuid = DT.Rows[0]["USER_GUID"].ToString();

            string BA = DT.Rows[0]["BA"].ToString();
            string BANAME = DT.Rows[0]["BANAME"].ToString();
            string BA_USER_GUID = DT.Rows[0]["BA_USER_GUID"].ToString();

            string DEPNAME = DTUPFDEP.Rows[0]["DEPNAME"].ToString();
            string DEPNO = DTUPFDEP.Rows[0]["DEPNO"].ToString();

            string EXTERNAL_FORM_NBR = DT.Rows[0]["TC001"].ToString().Trim() + DT.Rows[0]["TC002"].ToString().Trim();

            int rowscounts = 0;

            COPTCUDF01 = "N";

            foreach (DataRow od in DT.Rows)
            {
                if(od["COPTDUDF01"].ToString().Equals("Y"))
                {
                    COPTCUDF01 = "Y";
                    break;
                }
                else
                {
                    COPTCUDF01 = "N";
                }
            }

                XmlDocument xmlDoc = new XmlDocument();
            //建立根節點
            XmlElement Form = xmlDoc.CreateElement("Form");

            //正式的id
            COPID = SEARCHFORM_UOF_VERSION_ID("COP10.訂單");

            if (!string.IsNullOrEmpty(COPID))
            {
                Form.SetAttribute("formVersionId", COPID);
            }
                       

            Form.SetAttribute("urgentLevel", "2");
            //加入節點底下
            xmlDoc.AppendChild(Form);

            ////建立節點Applicant
            XmlElement Applicant = xmlDoc.CreateElement("Applicant");
            Applicant.SetAttribute("account", account);
            Applicant.SetAttribute("groupId", groupId);
            Applicant.SetAttribute("jobTitleId", jobTitleId);
            //加入節點底下
            Form.AppendChild(Applicant);

            //建立節點 Comment
            XmlElement Comment = xmlDoc.CreateElement("Comment");
            Comment.InnerText = "申請者意見";
            //加入至節點底下
            Applicant.AppendChild(Comment);

            //建立節點 FormFieldValue
            XmlElement FormFieldValue = xmlDoc.CreateElement("FormFieldValue");
            //加入至節點底下
            Form.AppendChild(FormFieldValue);

            //建立節點FieldItem
            //ID 表單編號	
            XmlElement FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "ID");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);



            //建立節點FieldItem
            //TC001 表單編號	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC001");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC001"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC002 表單編號	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC002");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC002"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //COPTCUDF01 表單編號	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "COPTCUDF01");
            FieldItem.SetAttribute("fieldValue", COPTCUDF01);
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC003 表單編號	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC003");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC003"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC004 表單編號	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC004");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC004"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC053 表單編號	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC053");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC053"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立userset
            var xElement = new XElement(
                  new XElement("UserSet",
                      new XElement("Element", new XAttribute("type", "user"),
                          new XElement("userId", fillerUserGuid)
                          )
                          )
                        );



            //XmlDocument doc = new XmlDocument();
            //XmlElement UserSet = doc.CreateElement("UserSet");

            //XmlElement Element = doc.CreateElement("Element");
            //Element.SetAttribute("type", "user");//設定屬性
            //UserSet.AppendChild(Element);

            //XmlElement userId = doc.CreateElement("userId", fillerUserGuid);
            //Element.AppendChild(userId);

            //建立節點FieldItem
            //TC006 表單編號	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC006");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["NAME"].ToString()+"("+DT.Rows[0]["TC006"].ToString()+")");
            FieldItem.SetAttribute("realValue", xElement.ToString());
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //MV002 表單編號	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "MV002");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["NAME"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立userset
            var xElement_BA = new XElement(
                  new XElement("UserSet",
                      new XElement("Element", new XAttribute("type", "user"),
                          new XElement("userId", BA_USER_GUID)
                          )
                          )
                        );

            //建立節點FieldItem
            //BA 表單編號	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "BA");
            FieldItem.SetAttribute("fieldValue",BANAME + "(" + BA + ")");
            FieldItem.SetAttribute("realValue", xElement_BA.ToString());
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //BANAME 表單編號	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "BANAME");
            FieldItem.SetAttribute("fieldValue", BANAME);
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC015 表單編號	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC015");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC015"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC008 表單編號	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC008");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC008"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC009 表單編號	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC009");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC009"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC045 表單編號	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC045");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC045"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC029 表單編號	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC029");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC029"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC030 表單編號	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC030");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC030"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC041 表單編號	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC041");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC041"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC016 表單編號	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC016");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["NEWTC016"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC124 表單編號	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC124");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC124"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC031 表單編號	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC031");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC031"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC043 表單編號	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC043");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC043"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC044 表單編號	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC044");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC044"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC046 表單編號	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC046");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC046"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC018 表單編號	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC018");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC018"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC010 表單編號	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC010");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC010"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC012 表單編號	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC012");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC012"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC035 表單編號	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC035");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC035"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC054 表單編號	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC054");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC054"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC055 表單編號	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC055");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC055"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC065 表單編號	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC065");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC065"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC042 表單編號	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC042");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC042"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC014 表單編號	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC014");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC014"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC019 表單編號	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC019");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC019"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC032 表單編號	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC032");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC032"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC033 表單編號	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC033");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC033"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC039 表單編號	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC039");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC039"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC121 表單編號	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC121");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["NEWTC016"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC094 表單編號	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC094");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC094"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC063 表單編號	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC063");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC063"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC115 表單編號	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC115");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC115"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC116 表單編號	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC116");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC116"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //MOC 表單編號	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "MOC");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //PUR 表單編號	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "PUR");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);



            //建立節點FieldItem
            //DETAILS 表單編號	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "DETAILS");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點 DataGrid
            XmlElement DataGrid = xmlDoc.CreateElement("DataGrid");
            //DataGrid 加入至 TB 節點底下
            XmlNode DETAILS = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='DETAILS']");
            DETAILS.AppendChild(DataGrid);

           

            foreach (DataRow od in DT.Rows)
            {
                // 新增 Row
                XmlElement Row = xmlDoc.CreateElement("Row");
                Row.SetAttribute("order", (rowscounts).ToString());

                //Row	UDF01
                XmlElement Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "UDF01");
                Cell.SetAttribute("fieldValue", od["COPTDUDF01"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD003
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD003");
                Cell.SetAttribute("fieldValue", od["TD003"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD004
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD004");
                Cell.SetAttribute("fieldValue", od["TD004"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD005
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD005");
                Cell.SetAttribute("fieldValue", od["TD005"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD006
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD006");
                Cell.SetAttribute("fieldValue", od["TD006"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD008
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD008");
                Cell.SetAttribute("fieldValue", od["TD008"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD024
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD024");
                Cell.SetAttribute("fieldValue", od["TD024"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD009
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD009");
                Cell.SetAttribute("fieldValue", od["TD009"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD025
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD025");
                Cell.SetAttribute("fieldValue", od["TD025"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

               
                //Row	TD010
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD010");
                Cell.SetAttribute("fieldValue", od["TD010"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD011
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD011");
                Cell.SetAttribute("fieldValue", od["TD011"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD026
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD026");
                Cell.SetAttribute("fieldValue", od["TD026"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD012
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD012");
                Cell.SetAttribute("fieldValue", od["TD012"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);
             

                //Row	TD013
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD013");
                Cell.SetAttribute("fieldValue", od["TD013"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD017
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD017");
                Cell.SetAttribute("fieldValue", od["TD017"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD018
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD018");
                Cell.SetAttribute("fieldValue", od["TD018"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD019
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD019");
                Cell.SetAttribute("fieldValue", od["TD019"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD020
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD020");
                Cell.SetAttribute("fieldValue", od["TD020"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);


                rowscounts = rowscounts + 1;

                XmlNode DataGridS = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='DETAILS']/DataGrid");
                DataGridS.AppendChild(Row);

            }

            ////用ADDTACK，直接啟動起單
            //ADDTACK(Form);

            //ADD TO DB
            //string connectionString = ConfigurationManager.ConnectionStrings["dbUOF"].ToString();

            //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
            //sqlConn = new SqlConnection(connectionString);

            //20210902密
            Class1 TKID = new Class1();//用new 建立類別實體
            SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

            //資料庫使用者密碼解密
            sqlsb.Password = TKID.Decryption(sqlsb.Password);
            sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

            String connectionString;
            sqlConn = new SqlConnection(sqlsb.ConnectionString);
            connectionString = sqlConn.ConnectionString.ToString();

            StringBuilder queryString = new StringBuilder();




            queryString.AppendFormat(@" INSERT INTO [{0}].dbo.TB_WKF_EXTERNAL_TASK
                                         (EXTERNAL_TASK_ID,FORM_INFO,STATUS,EXTERNAL_FORM_NBR)
                                        VALUES (NEWID(),@XML,2,'{1}')
                                        ", DBNAME, EXTERNAL_FORM_NBR);


            try
            {
                using (SqlConnection connection = new SqlConnection(connectionString))
                {

                    SqlCommand command = new SqlCommand(queryString.ToString(), connection);
                    command.Parameters.Add("@XML", SqlDbType.NVarChar).Value = Form.OuterXml;

                    command.Connection.Open();

                    int count = command.ExecuteNonQuery();

                    connection.Close();
                    connection.Dispose();

                }
            }
            catch
            {

            }
            finally
            {

            }
        }


        public void UPDATECOPTCUDF02()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dbconn"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sqlConn.Close();
                sqlConn.Open();
                tran = sqlConn.BeginTransaction();

                sbSql.Clear();

                sbSql.AppendFormat(@"
                                    UPDATE  [TK].dbo.COPTC 
                                    SET UDF02 = 'UOF'
                                    WHERE TC027='N' AND UDF02='Y'                                             

                                    ");

                cmd.Connection = sqlConn;
                cmd.CommandTimeout = 60;
                cmd.CommandText = sbSql.ToString();
                cmd.Transaction = tran;
                result = cmd.ExecuteNonQuery();

                if (result == 0)
                {
                    tran.Rollback();    //交易取消
                }
                else
                {
                    tran.Commit();      //執行交易  
                }

            }
            catch
            {

            }

            finally
            {
                sqlConn.Close();
            }
        }
        public DataTable SEARCHCOPTCCOPTD(string TC001, string TC002)
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);


                sbSql.Clear();
                sbSqlQuery.Clear();

                //庫存數量看LA009 IN ('20004','20006','20008','20019','20020'

                sbSql.AppendFormat(@"  
                                    SELECT 
                                    COMPANY,CREATOR,USR_GROUP,CREATE_DATE,MODIFIER,MODI_DATE,FLAG,CREATE_TIME,MODI_TIME,TRANS_TYPE,TRANS_NAME
                                    ,sync_date,sync_time,sync_mark,sync_count,DataUser,DataGroup
                                    ,TC001,TC002,TC003,TC004,TC005,TC006,TC007,TC008,TC009,TC010
                                    ,TC011,TC012,TC013,TC014,TC015,TC016,TC017,TC018,TC019,TC020
                                    ,TC021,TC022,TC023,TC024,TC025,TC026,TC027,TC028,TC029,TC030
                                    ,TC031,TC032,TC033,TC034,TC035,TC036,TC037,TC038,TC039,TC040
                                    ,TC041,TC042,TC043,TC044,TC045,TC046,TC047,TC048,TC049,TC050
                                    ,TC051,TC052,TC053,TC054,TC055,TC056,TC057,TC058,TC059,TC060
                                    ,TC061,TC062,TC063,TC064,TC065,TC066,TC067,TC068,TC069,TC070
                                    ,TC071,TC072,TC073,TC074,TC075,TC076,TC077,TC078,TC079,TC080
                                    ,TC081,TC082,TC083,TC084,TC085,TC086,TC087,TC088,TC089,TC090
                                    ,TC091,TC092,TC093,TC094,TC095,TC096,TC097,TC098,TC099,TC100
                                    ,TC101,TC102,TC103,TC104,TC105,TC106,TC107,TC108,TC109,TC110
                                    ,TC111,TC112,TC113,TC114,TC115,TC116,TC117,TC118,TC119,TC120
                                    ,TC121,TC122,TC123,TC124,TC125,TC126,TC127,TC128,TC129,TC130
                                    ,TC131,TC132,TC133,TC134,TC135,TC136,TC137,TC138,TC139,TC140
                                    ,TC141,TC142,TC143,TC144,TC145,TC146
                                    ,UDF01,UDF02,UDF03,UDF04,UDF05,UDF06,UDF07,UDF08,UDF09,UDF10
                                    ,TD001,TD002,TD003,TD004,TD005,TD006,TD007,TD008,TD009,TD010
                                    ,TD011,TD012,TD013,TD014,TD015,TD016,TD017,TD018,TD019,TD020
                                    ,TD021,TD022,TD023,TD024,TD025,TD026,TD027,TD028,TD029,TD030
                                    ,TD031,TD032,TD033,TD034,TD035,TD036,TD037,TD038,TD039,TD040
                                    ,TD041,TD042,TD043,TD044,TD045,TD046,TD047,TD048,TD049,TD050
                                    ,TD051,TD052,TD053,TD054,TD055,TD056,TD057,TD058,TD059,TD060
                                    ,TD061,TD062,TD063,TD064,TD065,TD066,TD067,TD068,TD069,TD070
                                    ,TD071,TD072,TD073,TD074,TD075,TD076,TD077,TD078,TD079,TD080
                                    ,TD081,TD082,TD083,TD084,TD085,TD086,TD087,TD088,TD089,TD090
                                    ,TD091,TD092,TD093,TD094,TD095,TD096,TD097,TD098,TD099,TD100
                                    ,TD101,TD102,TD103,TD104,TD105,TD106,TD107,TD108,TD109,TD110
                                    ,TD111,TD112,TD113
                                    ,COPTDUDF01,COPTDUDF02,COPTDUDF03,COPTDUDF04,COPTDUDF05,COPTDUDF06,COPTDUDF07,COPTDUDF08,COPTDUDF09,COPTDUDF10,TD200
                                    ,USER_GUID,NAME
                                    ,(SELECT TOP 1 GROUP_ID FROM [192.168.1.223].[{0}].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'GROUP_ID'
                                    ,(SELECT TOP 1 TITLE_ID FROM [192.168.1.223].[{0}].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'TITLE_ID'
                                    ,MA002
                                    ,CASE WHEN TC016='1' THEN '1.應稅內含'  ELSE (CASE WHEN TC016='2' THEN '2.應稅外加'  ELSE (CASE WHEN TC016='3' THEN '3.零稅率'  ELSE (CASE WHEN TC016='4' THEN '4.免稅'  ELSE (CASE WHEN TC016='9' THEN '9.不計稅'  ELSE '' END) END) END) END ) END AS 'NEWTC016'
                                    ,CASE WHEN TC121='1' THEN '1.二聯式' ELSE (CASE WHEN TC121='2' THEN '2.三聯式' ELSE (CASE WHEN TC121='3' THEN '3.二聯式收銀機發票' ELSE (CASE WHEN TC121='4' THEN '4.三聯式收銀機發票' ELSE (CASE WHEN TC121='5' THEN '5.電子計算機發票' ELSE (CASE WHEN TC121='6' THEN '6.免用統一發票' ELSE (CASE WHEN TC121='7' THEN '7.電子發票' ELSE '' END) END) END) END) END) END) END AS 'NEWTC121'
                                    ,BA
                                    ,BANAME
                                    ,(SELECT TOP 1 [USER_GUID] FROM [192.168.1.223].[UOF].[dbo].[TB_EB_USER] WHERE [ACCOUNT]=BA COLLATE Chinese_Taiwan_Stroke_BIN) AS 'BA_USER_GUID'
    
                                    FROM 
                                    (
                                    SELECT [COPTC].[COMPANY],[COPTC].[CREATOR],[COPTC].[USR_GROUP],[COPTC].[CREATE_DATE],[COPTC].[MODIFIER],[COPTC].[MODI_DATE],[COPTC].[FLAG],[COPTC].[CREATE_TIME],[COPTC].[MODI_TIME],[COPTC].[TRANS_TYPE],[COPTC].[TRANS_NAME]
                                    ,[COPTC].[sync_date],[COPTC].[sync_time],[COPTC].[sync_mark],[COPTC].[sync_count],[COPTC].[DataUser],[COPTC].[DataGroup]
                                    ,[COPTC].[TC001],[COPTC].[TC002],[COPTC].[TC003],[COPTC].[TC004],[COPTC].[TC005],[COPTC].[TC006],[COPTC].[TC007],[COPTC].[TC008],[COPTC].[TC009],[COPTC].[TC010]
                                    ,[COPTC].[TC011],[COPTC].[TC012],[COPTC].[TC013],[COPTC].[TC014],[COPTC].[TC015],[COPTC].[TC016],[COPTC].[TC017],[COPTC].[TC018],[COPTC].[TC019],[COPTC].[TC020]
                                    ,[COPTC].[TC021],[COPTC].[TC022],[COPTC].[TC023],[COPTC].[TC024],[COPTC].[TC025],[COPTC].[TC026],[COPTC].[TC027],[COPTC].[TC028],[COPTC].[TC029],[COPTC].[TC030]
                                    ,[COPTC].[TC031],[COPTC].[TC032],[COPTC].[TC033],[COPTC].[TC034],[COPTC].[TC035],[COPTC].[TC036],[COPTC].[TC037],[COPTC].[TC038],[COPTC].[TC039],[COPTC].[TC040]
                                    ,[COPTC].[TC041],[COPTC].[TC042],[COPTC].[TC043],[COPTC].[TC044],[COPTC].[TC045],[COPTC].[TC046],[COPTC].[TC047],[COPTC].[TC048],[COPTC].[TC049],[COPTC].[TC050]
                                    ,[COPTC].[TC051],[COPTC].[TC052],[COPTC].[TC053],[COPTC].[TC054],[COPTC].[TC055],[COPTC].[TC056],[COPTC].[TC057],[COPTC].[TC058],[COPTC].[TC059],[COPTC].[TC060]
                                    ,[COPTC].[TC061],[COPTC].[TC062],[COPTC].[TC063],[COPTC].[TC064],[COPTC].[TC065],[COPTC].[TC066],[COPTC].[TC067],[COPTC].[TC068],[COPTC].[TC069],[COPTC].[TC070]
                                    ,[COPTC].[TC071],[COPTC].[TC072],[COPTC].[TC073],[COPTC].[TC074],[COPTC].[TC075],[COPTC].[TC076],[COPTC].[TC077],[COPTC].[TC078],[COPTC].[TC079],[COPTC].[TC080]
                                    ,[COPTC].[TC081],[COPTC].[TC082],[COPTC].[TC083],[COPTC].[TC084],[COPTC].[TC085],[COPTC].[TC086],[COPTC].[TC087],[COPTC].[TC088],[COPTC].[TC089],[COPTC].[TC090]
                                    ,[COPTC].[TC091],[COPTC].[TC092],[COPTC].[TC093],[COPTC].[TC094],[COPTC].[TC095],[COPTC].[TC096],[COPTC].[TC097],[COPTC].[TC098],[COPTC].[TC099],[COPTC].[TC100]
                                    ,[COPTC].[TC101],[COPTC].[TC102],[COPTC].[TC103],[COPTC].[TC104],[COPTC].[TC105],[COPTC].[TC106],[COPTC].[TC107],[COPTC].[TC108],[COPTC].[TC109],[COPTC].[TC110]
                                    ,[COPTC].[TC111],[COPTC].[TC112],[COPTC].[TC113],[COPTC].[TC114],[COPTC].[TC115],[COPTC].[TC116],[COPTC].[TC117],[COPTC].[TC118],[COPTC].[TC119],[COPTC].[TC120]
                                    ,[COPTC].[TC121],[COPTC].[TC122],[COPTC].[TC123],[COPTC].[TC124],[COPTC].[TC125],[COPTC].[TC126],[COPTC].[TC127],[COPTC].[TC128],[COPTC].[TC129],[COPTC].[TC130]
                                    ,[COPTC].[TC131],[COPTC].[TC132],[COPTC].[TC133],[COPTC].[TC134],[COPTC].[TC135],[COPTC].[TC136],[COPTC].[TC137],[COPTC].[TC138],[COPTC].[TC139],[COPTC].[TC140]
                                    ,[COPTC].[TC141],[COPTC].[TC142],[COPTC].[TC143],[COPTC].[TC144],[COPTC].[TC145],[COPTC].[TC146]
                                    ,[COPTC].[UDF01],[COPTC].[UDF02],[COPTC].[UDF03],[COPTC].[UDF04],[COPTC].[UDF05],[COPTC].[UDF06],[COPTC].[UDF07],[COPTC].[UDF08],[COPTC].[UDF09],[COPTC].[UDF10]
                                    ,[COPTD].[TD001],[COPTD].[TD002],[COPTD].[TD003],[COPTD].[TD004],[COPTD].[TD005],[COPTD].[TD006],[COPTD].[TD007],[COPTD].[TD008],[COPTD].[TD009],[COPTD].[TD010]
                                    ,[COPTD].[TD011],[COPTD].[TD012],[COPTD].[TD013],[COPTD].[TD014],[COPTD].[TD015],[COPTD].[TD016],[COPTD].[TD017],[COPTD].[TD018],[COPTD].[TD019],[COPTD].[TD020]
                                    ,[COPTD].[TD021],[COPTD].[TD022],[COPTD].[TD023],[COPTD].[TD024],[COPTD].[TD025],[COPTD].[TD026],[COPTD].[TD027],[COPTD].[TD028],[COPTD].[TD029],[COPTD].[TD030]
                                    ,[COPTD].[TD031],[COPTD].[TD032],[COPTD].[TD033],[COPTD].[TD034],[COPTD].[TD035],[COPTD].[TD036],[COPTD].[TD037],[COPTD].[TD038],[COPTD].[TD039],[COPTD].[TD040]
                                    ,[COPTD].[TD041],[COPTD].[TD042],[COPTD].[TD043],[COPTD].[TD044],[COPTD].[TD045],[COPTD].[TD046],[COPTD].[TD047],[COPTD].[TD048],[COPTD].[TD049],[COPTD].[TD050]
                                    ,[COPTD].[TD051],[COPTD].[TD052],[COPTD].[TD053],[COPTD].[TD054],[COPTD].[TD055],[COPTD].[TD056],[COPTD].[TD057],[COPTD].[TD058],[COPTD].[TD059],[COPTD].[TD060]
                                    ,[COPTD].[TD061],[COPTD].[TD062],[COPTD].[TD063],[COPTD].[TD064],[COPTD].[TD065],[COPTD].[TD066],[COPTD].[TD067],[COPTD].[TD068],[COPTD].[TD069],[COPTD].[TD070]
                                    ,[COPTD].[TD071],[COPTD].[TD072],[COPTD].[TD073],[COPTD].[TD074],[COPTD].[TD075],[COPTD].[TD076],[COPTD].[TD077],[COPTD].[TD078],[COPTD].[TD079],[COPTD].[TD080]
                                    ,[COPTD].[TD081],[COPTD].[TD082],[COPTD].[TD083],[COPTD].[TD084],[COPTD].[TD085],[COPTD].[TD086],[COPTD].[TD087],[COPTD].[TD088],[COPTD].[TD089],[COPTD].[TD090]
                                    ,[COPTD].[TD091],[COPTD].[TD092],[COPTD].[TD093],[COPTD].[TD094],[COPTD].[TD095],[COPTD].[TD096],[COPTD].[TD097],[COPTD].[TD098],[COPTD].[TD099],[COPTD].[TD100]
                                    ,[COPTD].[TD101],[COPTD].[TD102],[COPTD].[TD103],[COPTD].[TD104],[COPTD].[TD105],[COPTD].[TD106],[COPTD].[TD107],[COPTD].[TD108],[COPTD].[TD109],[COPTD].[TD110]
                                    ,[COPTD].[TD111],[COPTD].[TD112],[COPTD].[TD113]
                                    ,[COPTD].[UDF01] AS 'COPTDUDF01',[COPTD].[UDF02] AS 'COPTDUDF02',[COPTD].[UDF03] AS 'COPTDUDF03',[COPTD].[UDF04] AS 'COPTDUDF04',[COPTD].[UDF05] AS 'COPTDUDF05',[COPTD].[UDF06] AS 'COPTDUDF06',[COPTD].[UDF07] AS 'COPTDUDF07',[COPTD].[UDF08] AS 'COPTDUDF08',[COPTD].[UDF09] AS 'COPTDUDF09',[COPTD].[UDF10] AS 'COPTDUDF10',[COPTD].[TD200] AS 'TD200'
                                    ,[TB_EB_USER].USER_GUID,NAME
                                    ,(SELECT TOP 1 MV002 FROM [TK].dbo.CMSMV WHERE MV001=TC006) AS 'MV002'
                                    ,(SELECT TOP 1 MA002 FROM [TK].dbo.COPMA WHERE MA001=TC004) AS 'MA002'
                                    ,(SELECT TOP 1 COPMA.UDF04 FROM [TK].dbo.COPMA,[TK].dbo.CMSMV WHERE COPMA.UDF04=CMSMV.MV001 AND COPMA.MA001=TC004) AS 'BA'
                                    ,(SELECT TOP 1 CMSMV.MV002 FROM [TK].dbo.COPMA,[TK].dbo.CMSMV WHERE COPMA.UDF04=CMSMV.MV001 AND COPMA.MA001=TC004) AS 'BANAME'

                                    FROM [TK].dbo.COPTD,[TK].dbo.COPTC
                                    LEFT JOIN [192.168.1.223].[{0}].[dbo].[TB_EB_USER] ON [TB_EB_USER].ACCOUNT= TC006 COLLATE Chinese_Taiwan_Stroke_BIN
                                    WHERE TC001=TD001 AND TC002=TD002
                                    AND TC001='{1}' AND TC002='{2}'
                                    ) AS TEMP   
                              
                                    ", DBNAME, TC001, TC002);


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    return ds1.Tables["ds1"];

                }
                else
                {
                    return null;
                }

            }
            catch
            {
                return null;
            }
            finally
            {
                sqlConn.Close();
            }
        }

        public void ADDCOPTECOPTF()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                DataSet ds1 = new DataSet();
                SqlDataAdapter adapter1 = new SqlDataAdapter();
                SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();

                sbSql.Clear();
                sbSqlQuery.Clear();


                sbSql.AppendFormat(@" 
                                    SELECT TE001,TE002,TE003
                                    FROM [TK].dbo.COPTE
                                    WHERE TE029='N' AND (UDF01 IN ('Y','y') )
                                    ");

                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");


                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    foreach (DataRow dr in ds1.Tables["ds1"].Rows)
                    {
                        ADDTB_WKF_EXTERNAL_TASK_COPTECOPTF(dr["TE001"].ToString().Trim(), dr["TE002"].ToString().Trim(), dr["TE003"].ToString().Trim());
                    }


                    //ADDTB_WKF_EXTERNAL_TASK("A311", "20210415007");
                }
                else
                {

                }

            }
            catch
            {

            }
            finally
            {
                sqlConn.Close();
            }

            UPDATECOPTEUDF01();
        }

        public void ADDTB_WKF_EXTERNAL_TASK_COPTECOPTF(string TE001, string TE002,string TE003)
        {

            DataTable DT = SEARCHCOPTECOPTF(TE001, TE002, TE003);
            DataTable DTUPFDEP = SEARCHUOFDEP(DT.Rows[0]["TE009"].ToString());

            string account = DT.Rows[0]["TE009"].ToString();
            string groupId = DT.Rows[0]["GROUP_ID"].ToString();
            string jobTitleId = DT.Rows[0]["TITLE_ID"].ToString();
            string fillerName = DT.Rows[0]["NAME"].ToString();
            string fillerUserGuid = DT.Rows[0]["USER_GUID"].ToString();

            string BA = DT.Rows[0]["BA"].ToString();
            string BANAME = DT.Rows[0]["BANAME"].ToString();
            string BA_USER_GUID = DT.Rows[0]["BA_USER_GUID"].ToString();

            string DEPNAME = DTUPFDEP.Rows[0]["DEPNAME"].ToString();
            string DEPNO = DTUPFDEP.Rows[0]["DEPNO"].ToString();

            string EXTERNAL_FORM_NBR = DT.Rows[0]["TE001"].ToString().Trim() + DT.Rows[0]["TE002"].ToString().Trim() + DT.Rows[0]["TE003"].ToString().Trim();

            int rowscounts = 0;

            COPTCUDF01 = "N";

            foreach (DataRow od in DT.Rows)
            {
                if (od["COPTDUDF01"].ToString().Equals("Y"))
                {
                    COPTCUDF01 = "Y";
                    break;
                }
                else
                {
                    COPTCUDF01 = "N";
                }
            }

            XmlDocument xmlDoc = new XmlDocument();
            //建立根節點
            XmlElement Form = xmlDoc.CreateElement("Form");

            //正式的id
            COPCHANGEID = SEARCHFORM_UOF_VERSION_ID("COP20.訂單變更單");

            if (!string.IsNullOrEmpty(COPCHANGEID))
            {
                Form.SetAttribute("formVersionId", COPCHANGEID);
            }
          

            Form.SetAttribute("urgentLevel", "2");
            //加入節點底下
            xmlDoc.AppendChild(Form);

            ////建立節點Applicant
            XmlElement Applicant = xmlDoc.CreateElement("Applicant");
            Applicant.SetAttribute("account", account);
            Applicant.SetAttribute("groupId", groupId);
            Applicant.SetAttribute("jobTitleId", jobTitleId);
            //加入節點底下
            Form.AppendChild(Applicant);

            //建立節點 Comment
            XmlElement Comment = xmlDoc.CreateElement("Comment");
            Comment.InnerText = "申請者意見";
            //加入至節點底下
            Applicant.AppendChild(Comment);

            //建立節點 FormFieldValue
            XmlElement FormFieldValue = xmlDoc.CreateElement("FormFieldValue");
            //加入至節點底下
            Form.AppendChild(FormFieldValue);

            //建立節點FieldItem
            //ID 表單編號	
            XmlElement FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "ID");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TE006 	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TE006");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TE006"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TE001 表單編號	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TE001");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TE001"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TE002 表單編號	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TE002");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TE002"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TE003 表單編號	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TE003");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TE003"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //COPTCUDF01 表單編號	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "COPTCUDF01");
            FieldItem.SetAttribute("fieldValue", COPTCUDF01);
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //10
            //建立節點FieldItem
            //TE038 	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TE038");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TE038"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //建立節點FieldItem
            //TE007 	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TE007");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TE007"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //MA002 	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "MA002");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["MA002"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //建立節點FieldItem
            //TE011 	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TE011");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TE011"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //建立節點FieldItem
            //TE111 	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TE111");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TE111"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //建立節點FieldItem
            //TE012 	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TE012");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TE012"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //建立節點FieldItem
            //TE112 	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TE112");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TE112"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //建立節點FieldItem
            //TE041 	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TE041");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TE041"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //建立節點FieldItem
            //TE041C 	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TE041C");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TE017"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //建立節點FieldItem
            //TE137 	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TE137");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TE137"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //建立節點FieldItem

            //20
            //TE137C 	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TE137C");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TE117"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //TE015 	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TE015");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TE015"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //TE115 	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TE115");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TE115"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //TE018 	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TE018");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["NEWTE018"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //TE118 	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TE118");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["NEWTE118"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //TE008 	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TE008");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TE008"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //CMSME002A 	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "CMSME002A");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["CMSME002A"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //TE108 	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TE108");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TE108"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //CMSME002B 	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "CMSME002B");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["CMSME002B"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立userset
            var xElement = new XElement(
                  new XElement("UserSet",
                      new XElement("Element", new XAttribute("type", "user"),
                          new XElement("userId", BA_USER_GUID)
                          )
                          )
                        );

            //TE009 	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TE009");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["CMSMV002A"].ToString() +"("+ DT.Rows[0]["TE009"].ToString()+")");
            FieldItem.SetAttribute("realValue", xElement.ToString());
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //30
            //CMSMV002A 	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "CMSMV002A");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["CMSMV002A"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //TE109 	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TE109");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TE109"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //CMSMV002B 	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "CMSMV002B");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["CMSMV002B"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立userset
            var xElement_BA = new XElement(
                  new XElement("UserSet",
                      new XElement("Element", new XAttribute("type", "user"),
                          new XElement("userId", BA_USER_GUID)
                          )
                          )
                        );

            //建立節點FieldItem
            //BA 表單編號	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "BA");
            FieldItem.SetAttribute("fieldValue", BANAME + "(" + BA + ")");
            FieldItem.SetAttribute("realValue", xElement_BA.ToString());
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //BANAME 表單編號	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "BANAME");
            FieldItem.SetAttribute("fieldValue", BANAME);
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TE040 	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TE040");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TE040"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //TE136 	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TE136");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TE136"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //TE013 	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TE013");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TE013"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //TE113 	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TE113");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TE113"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //TE050 	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TE050");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TE050"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //UDF05
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "UDF05");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["COPTCUDF05"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //MOC 表單編號	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "MOC");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //PUR 表單編號	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "PUR");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);



            //建立節點FieldItem
            //DETAILS 表單編號	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "DETAILS");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點 DataGrid
            XmlElement DataGrid = xmlDoc.CreateElement("DataGrid");
            //DataGrid 加入至 TB 節點底下
            XmlNode DETAILS = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='DETAILS']");
            DETAILS.AppendChild(DataGrid);



            foreach (DataRow od in DT.Rows)
            {
                // 新增 Row
                XmlElement Row = xmlDoc.CreateElement("Row");
                Row.SetAttribute("order", (rowscounts).ToString());

         
                //Row	TF004
                XmlElement Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TF004");
                Cell.SetAttribute("fieldValue", od["TF004"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);
                //10
                //Row	TF005
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TF005");
                Cell.SetAttribute("fieldValue", od["TF005"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);
                //Row	TF006
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TF006");
                Cell.SetAttribute("fieldValue", od["TF006"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);
                //Row	TF007
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TF007");
                Cell.SetAttribute("fieldValue", od["TF007"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);
                //Row	TF009
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TF009");
                Cell.SetAttribute("fieldValue", od["TF009"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);
                //Row	TF020
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TF020");
                Cell.SetAttribute("fieldValue", od["TF020"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);
                //Row	TF010
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TF010");
                Cell.SetAttribute("fieldValue", od["TF010"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);
                //Row	TF013
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TF013");
                Cell.SetAttribute("fieldValue", od["TF013"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);
                //Row	TF021
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TF021");
                Cell.SetAttribute("fieldValue", od["TF021"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);
                //Row	TF014
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TF014");
                Cell.SetAttribute("fieldValue", od["TF014"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);
                //Row	TF015
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TF015");
                Cell.SetAttribute("fieldValue", od["TF015"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);
                //20
                //Row	TF024
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TF024");
                Cell.SetAttribute("fieldValue", od["TF024"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);
                //Row	TF025
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TF025");
                Cell.SetAttribute("fieldValue", od["TF025"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);
                //Row	TF018
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TF018");
                Cell.SetAttribute("fieldValue", od["TF018"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);
                //Row	TF105
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TF105");
                Cell.SetAttribute("fieldValue", od["TF105"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);
                //Row	TF106
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TF106");
                Cell.SetAttribute("fieldValue", od["TF106"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);
                //Row	TF107
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TF107");
                Cell.SetAttribute("fieldValue", od["TF107"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);
                //Row	TF109
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TF109");
                Cell.SetAttribute("fieldValue", od["TF109"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);
                //Row	TF120
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TF120");
                Cell.SetAttribute("fieldValue", od["TF120"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);
                //Row	TF110
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TF110");
                Cell.SetAttribute("fieldValue", od["TF110"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);
                //Row	TF015
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TF113");
                Cell.SetAttribute("fieldValue", od["TF113"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);
                //30
                //Row	TF121
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TF121");
                Cell.SetAttribute("fieldValue", od["TF121"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);
                //Row	TF114
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TF114");
                Cell.SetAttribute("fieldValue", od["TF114"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);
                //Row	TF115
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TF115");
                Cell.SetAttribute("fieldValue", od["TF115"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);
                //Row	TF126
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TF126");
                Cell.SetAttribute("fieldValue", od["TF126"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);
                //Row	TF127
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TF127");
                Cell.SetAttribute("fieldValue", od["TF127"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);





                rowscounts = rowscounts + 1;

                XmlNode DataGridS = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='DETAILS']/DataGrid");
                DataGridS.AppendChild(Row);

            }

            ////用ADDTACK，直接啟動起單
            //ADDTACK(Form);

            //ADD TO DB
            //string connectionString = ConfigurationManager.ConnectionStrings["dbUOF"].ToString();

            //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
            //sqlConn = new SqlConnection(connectionString);

            //20210902密
            Class1 TKID = new Class1();//用new 建立類別實體
            SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

            //資料庫使用者密碼解密
            sqlsb.Password = TKID.Decryption(sqlsb.Password);
            sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

            String connectionString;
            sqlConn = new SqlConnection(sqlsb.ConnectionString);
            connectionString = sqlConn.ConnectionString.ToString();

            StringBuilder queryString = new StringBuilder();




            queryString.AppendFormat(@" INSERT INTO [{0}].dbo.TB_WKF_EXTERNAL_TASK
                                         (EXTERNAL_TASK_ID,FORM_INFO,STATUS,EXTERNAL_FORM_NBR)
                                        VALUES (NEWID(),@XML,2,'{1}')
                                        ", DBNAME, EXTERNAL_FORM_NBR);


            try
            {
                using (SqlConnection connection = new SqlConnection(connectionString))
                {

                    SqlCommand command = new SqlCommand(queryString.ToString(), connection);
                    command.Parameters.Add("@XML", SqlDbType.NVarChar).Value = Form.OuterXml;

                    command.Connection.Open();

                    int count = command.ExecuteNonQuery();

                    connection.Close();
                    connection.Dispose();

                }
            }
            catch
            {

            }
            finally
            {

            }
        }


        public void UPDATECOPTEUDF01()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sqlConn.Close();
                sqlConn.Open();
                tran = sqlConn.BeginTransaction();

                sbSql.Clear();

                sbSql.AppendFormat(@"
                                    UPDATE  [TK].dbo.COPTE 
                                    SET UDF01 = 'UOF'
                                    WHERE TE029='N' AND UDF01='Y'                                             

                                    ");

                cmd.Connection = sqlConn;
                cmd.CommandTimeout = 60;
                cmd.CommandText = sbSql.ToString();
                cmd.Transaction = tran;
                result = cmd.ExecuteNonQuery();

                if (result == 0)
                {
                    tran.Rollback();    //交易取消
                }
                else
                {
                    tran.Commit();      //執行交易  
                }

            }
            catch
            {

            }

            finally
            {
                sqlConn.Close();
            }
        }
        public DataTable SEARCHCOPTECOPTF(string TE001, string TE002,string TE003)
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sbSql.Clear();
                sbSqlQuery.Clear();

                //庫存數量看LA009 IN ('20004','20006','20008','20019','20020'

                sbSql.AppendFormat(@"  
                                    SELECT 
                                    [COMPANY],[CREATOR],[USR_GROUP],[CREATE_DATE],[MODIFIER],[MODI_DATE],[FLAG],[CREATE_TIME],[MODI_TIME],[TRANS_TYPE],[TRANS_NAME]
                                    ,[sync_date],[sync_time],[sync_mark],[sync_count],[DataUser],[DataGroup]
                                    ,[TE001],[TE002],[TE003],[TE004],[TE005],[TE006],[TE007],[TE008],[TE009],[TE010]
                                    ,[TE011],[TE012],[TE013],[TE014],[TE015],[TE016],[TE017],[TE018],[TE019],[TE020]
                                    ,[TE021],[TE022],[TE023],[TE024],[TE025],[TE026],[TE027],[TE028],[TE029],[TE030]
                                    ,[TE031],[TE032],[TE033],[TE034],[TE035],[TE036],[TE037],[TE038],[TE039],[TE040]
                                    ,[TE041],[TE042],[TE043],[TE044],[TE045],[TE046],[TE047],[TE048],[TE049],[TE050]
                                    ,[TE051],[TE052],[TE053],[TE054],[TE055],[TE056],[TE057],[TE058],[TE059],[TE060]
                                    ,[TE061],[TE062],[TE063],[TE064],[TE065],[TE066],[TE067],[TE068],[TE069],[TE070]
                                    ,[TE071],[TE072],[TE073],[TE074],[TE075],[TE076],[TE077],[TE078],[TE079],[TE080]
                                    ,[TE081],[TE082],[TE083],[TE084],[TE085],[TE086],[TE087],[TE088]
                                    ,[TE103],[TE107],[TE108],[TE109],[TE110]
                                    ,[TE111],[TE112],[TE113],[TE114],[TE115],[TE116],[TE117],[TE118],[TE119],[TE120]
                                    ,[TE121],[TE122],[TE123],[TE124],[TE125],[TE126],[TE127],[TE128],[TE129],[TE130]
                                    ,[TE131],[TE132],[TE133],[TE134],[TE135],[TE136],[TE137],[TE138],[TE139],[TE140]
                                    ,[TE141],[TE142],[TE143],[TE144],[TE145],[TE146],[TE147],[TE148],[TE149],[TE150]
                                    ,[TE151],[TE152],[TE163],[TE164],[TE165],[TE166],[TE167],[TE168],[TE169],[TE170]
                                    ,[TE171],[TE172],[TE173],[TE174],[TE175],[TE176],[TE177],[TE178],[TE179],[TE180]
                                    ,[TE181],[TE182],[TE183],[TE184],[TE185],[TE186],[TE187],[TE188],[TE189],[TE190]
                                    ,[TE191],[TE192],[TE193],[TE194],[TE195],[TE196],[TE197],[TE198],[TE199]
                                    ,[UDF01],[UDF02],[UDF03],[UDF04],[UDF05],[UDF06],[UDF07],[UDF08],[UDF09],[UDF10]

                                    ,[TF001],[TF002],[TF003],[TF004],[TF005],[TF006],[TF007],[TF008],[TF009],[TF010]
                                    ,[TF011],[TF012],[TF013],[TF014],[TF015],[TF016],[TF017],[TF018],[TF019],[TF020]
                                    ,[TF021],[TF022],[TF023],[TF024],[TF025],[TF026],[TF027],[TF028],[TF029],[TF030]
                                    ,[TF031],[TF032],[TF034],[TF035],[TF036],[TF037],[TF038],[TF039],[TF040],[TF041]
                                    ,[TF042],[TF043],[TF044],[TF045],[TF046],[TF048],[TF049],[TF050]
                                    ,[TF051],[TF052],[TF053],[TF054],[TF055],[TF056],[TF057],[TF058],[TF059],[TF060]
                                    ,[TF061],[TF062],[TF063],[TF064],[TF065],[TF066],[TF067],[TF068],[TF069],[TF070]
                                    ,[TF071],[TF072],[TF073],[TF074],[TF075],[TF076],[TF077],[TF078],[TF079],[TF080]
                                    ,[TF104],[TF105],[TF106],[TF107],[TF108],[TF109],[TF110]
                                    ,[TF111],[TF112],[TF113],[TF114],[TF115],[TF116],[TF117],[TF120]
                                    ,[TF121],[TF122],[TF123],[TF124],[TF125],[TF126],[TF127],[TF128],[TF129],[TF130]
                                    ,[TF131],[TF132],[TF133],[TF134],[TF135],[TF136],[TF137],[TF138],[TF139],[TF140]
                                    ,[TF141],[TF142],[TF143],[TF144],[TF145],[TF146],[TF147],[TF148],[TF149],[TF150]
                                    ,[TF151],[TF152],[TF153],[TF154],[TF155],[TF156],[TF157],[TF158],[TF159],[TF160]
                                    ,[TF161],[TF162],[TF163],[TF164],[TF165],[TF166],[TF167],[TF168],[TF169],[TF170]
                                    ,[TF171],[TF172],[TF173],[TF174],[TF175],[TF176],[TF177],[TF178],[TF179],[TF180]
                                    ,[TF181],[TF182],[TF183],[TF184],[TF185],[TF186],[TF187],[TF188],[TF189],[TF190]
                                    ,[TF191],[TF192],[TF193],[TF194],[TF195],[TF196],[TF197],[TF198],[TF199]
                                    ,[TF200],[TF300]

                                    ,COPTFUDF01,COPTFUDF02,COPTFUDF03,COPTFUDF04,COPTFUDF05,COPTFUDF06,COPTFUDF07,COPTFUDF08,COPTFUDF09,COPTFUDF10

                                    ,USER_GUID,NAME
                                    ,(SELECT TOP 1 GROUP_ID FROM [192.168.1.223].[{0}].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'GROUP_ID'
                                    ,(SELECT TOP 1 TITLE_ID FROM [192.168.1.223].[{0}].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'TITLE_ID'
                                    ,MA002
                                    ,CASE WHEN TE018='1' THEN '1.應稅內含'  ELSE (CASE WHEN TE018='2' THEN '2.應稅外加'  ELSE (CASE WHEN TE018='3' THEN '3.零稅率'  ELSE (CASE WHEN TE018='4' THEN '4.免稅'  ELSE (CASE WHEN TE018='9' THEN '9.不計稅'  ELSE '' END) END) END) END ) END AS 'NEWTE018'
                                    ,CASE WHEN TE118='1' THEN '1.應稅內含'  ELSE (CASE WHEN TE118='2' THEN '2.應稅外加'  ELSE (CASE WHEN TE118='3' THEN '3.零稅率'  ELSE (CASE WHEN TE118='4' THEN '4.免稅'  ELSE (CASE WHEN TE118='9' THEN '9.不計稅'  ELSE '' END) END) END) END ) END AS 'NEWTE118'
                                    ,(SELECT TOP 1 ME002 FROM [TK].dbo.CMSME WHERE ME001=TE008) AS 'CMSME002A'
                                    ,(SELECT TOP 1 ME002 FROM [TK].dbo.CMSME WHERE ME001=TE108) AS 'CMSME002B'
                                    ,(SELECT TOP 1 MV002 FROM [TK].dbo.CMSMV WHERE MV001=TE009) AS 'CMSMV002A'
                                    ,(SELECT TOP 1 MV002 FROM [TK].dbo.CMSMV WHERE MV001=TE109) AS 'CMSMV002B'
                                    ,(SELECT TOP 1 COPTC.UDF05 FROM [TK].dbo.COPTC WHERE TC001=TE001 AND TC002=TE002) AS 'COPTCUDF05'
                                    ,ISNULL((SELECT TOP 1 COPTD.UDF01 FROM [TK].dbo.COPTD WHERE TD001=TE001 AND TD002=TE002 AND COPTD.UDF01='Y'),'N') AS 'COPTDUDF01'
                                    ,BA
                                    ,BANAME
                                    ,(SELECT TOP 1 [USER_GUID] FROM [192.168.1.223].[UOF].[dbo].[TB_EB_USER] WHERE [ACCOUNT]=BA COLLATE Chinese_Taiwan_Stroke_BIN) AS 'BA_USER_GUID'

                                    FROM 
                                    (

                                    SELECT 
                                    [COPTE].[COMPANY],[COPTE].[CREATOR],[COPTE].[USR_GROUP],[COPTE].[CREATE_DATE],[COPTE].[MODIFIER],[COPTE].[MODI_DATE],[COPTE].[FLAG],[COPTE].[CREATE_TIME],[COPTE].[MODI_TIME],[COPTE].[TRANS_TYPE],[COPTE].[TRANS_NAME]
                                    ,[COPTE].[sync_date],[COPTE].[sync_time],[COPTE].[sync_mark],[COPTE].[sync_count],[COPTE].[DataUser],[COPTE].[DataGroup]
                                    ,[COPTE].[TE001],[COPTE].[TE002],[COPTE].[TE003],[COPTE].[TE004],[COPTE].[TE005],[COPTE].[TE006],[COPTE].[TE007],[COPTE].[TE008],[COPTE].[TE009],[COPTE].[TE010]
                                    ,[COPTE].[TE011],[COPTE].[TE012],[COPTE].[TE013],[COPTE].[TE014],[COPTE].[TE015],[COPTE].[TE016],[COPTE].[TE017],[COPTE].[TE018],[COPTE].[TE019],[COPTE].[TE020]
                                    ,[COPTE].[TE021],[COPTE].[TE022],[COPTE].[TE023],[COPTE].[TE024],[COPTE].[TE025],[COPTE].[TE026],[COPTE].[TE027],[COPTE].[TE028],[COPTE].[TE029],[COPTE].[TE030]
                                    ,[COPTE].[TE031],[COPTE].[TE032],[COPTE].[TE033],[COPTE].[TE034],[COPTE].[TE035],[COPTE].[TE036],[COPTE].[TE037],[COPTE].[TE038],[COPTE].[TE039],[COPTE].[TE040]
                                    ,[COPTE].[TE041],[COPTE].[TE042],[COPTE].[TE043],[COPTE].[TE044],[COPTE].[TE045],[COPTE].[TE046],[COPTE].[TE047],[COPTE].[TE048],[COPTE].[TE049],[COPTE].[TE050]
                                    ,[COPTE].[TE051],[COPTE].[TE052],[COPTE].[TE053],[COPTE].[TE054],[COPTE].[TE055],[COPTE].[TE056],[COPTE].[TE057],[COPTE].[TE058],[COPTE].[TE059],[COPTE].[TE060]
                                    ,[COPTE].[TE061],[COPTE].[TE062],[COPTE].[TE063],[COPTE].[TE064],[COPTE].[TE065],[COPTE].[TE066],[COPTE].[TE067],[COPTE].[TE068],[COPTE].[TE069],[COPTE].[TE070]
                                    ,[COPTE].[TE071],[COPTE].[TE072],[COPTE].[TE073],[COPTE].[TE074],[COPTE].[TE075],[COPTE].[TE076],[COPTE].[TE077],[COPTE].[TE078],[COPTE].[TE079],[COPTE].[TE080]
                                    ,[COPTE].[TE081],[COPTE].[TE082],[COPTE].[TE083],[COPTE].[TE084],[COPTE].[TE085],[COPTE].[TE086],[COPTE].[TE087],[COPTE].[TE088]
                                    ,[COPTE].[TE103],[COPTE].[TE107],[COPTE].[TE108],[COPTE].[TE109],[COPTE].[TE110]
                                    ,[COPTE].[TE111],[COPTE].[TE112],[COPTE].[TE113],[COPTE].[TE114],[COPTE].[TE115],[COPTE].[TE116],[COPTE].[TE117],[COPTE].[TE118],[COPTE].[TE119],[COPTE].[TE120]
                                    ,[COPTE].[TE121],[COPTE].[TE122],[COPTE].[TE123],[COPTE].[TE124],[COPTE].[TE125],[COPTE].[TE126],[COPTE].[TE127],[COPTE].[TE128],[COPTE].[TE129],[COPTE].[TE130]
                                    ,[COPTE].[TE131],[COPTE].[TE132],[COPTE].[TE133],[COPTE].[TE134],[COPTE].[TE135],[COPTE].[TE136],[COPTE].[TE137],[COPTE].[TE138],[COPTE].[TE139],[COPTE].[TE140]
                                    ,[COPTE].[TE141],[COPTE].[TE142],[COPTE].[TE143],[COPTE].[TE144],[COPTE].[TE145],[COPTE].[TE146],[COPTE].[TE147],[COPTE].[TE148],[COPTE].[TE149],[COPTE].[TE150]
                                    ,[COPTE].[TE151],[COPTE].[TE152],[COPTE].[TE163],[COPTE].[TE164],[COPTE].[TE165],[COPTE].[TE166],[COPTE].[TE167],[COPTE].[TE168],[COPTE].[TE169],[COPTE].[TE170]
                                    ,[COPTE].[TE171],[COPTE].[TE172],[COPTE].[TE173],[COPTE].[TE174],[COPTE].[TE175],[COPTE].[TE176],[COPTE].[TE177],[COPTE].[TE178],[COPTE].[TE179],[COPTE].[TE180]
                                    ,[COPTE].[TE181],[COPTE].[TE182],[COPTE].[TE183],[COPTE].[TE184],[COPTE].[TE185],[COPTE].[TE186],[COPTE].[TE187],[COPTE].[TE188],[COPTE].[TE189],[COPTE].[TE190]
                                    ,[COPTE].[TE191],[COPTE].[TE192],[COPTE].[TE193],[COPTE].[TE194],[COPTE].[TE195],[COPTE].[TE196],[COPTE].[TE197],[COPTE].[TE198],[COPTE].[TE199]
                                    ,[COPTE].[UDF01],[COPTE].[UDF02],[COPTE].[UDF03],[COPTE].[UDF04],[COPTE].[UDF05],[COPTE].[UDF06],[COPTE].[UDF07],[COPTE].[UDF08],[COPTE].[UDF09],[COPTE].[UDF10]

                                    ,[COPTF].[TF001],[COPTF].[TF002],[COPTF].[TF003],[COPTF].[TF004],[COPTF].[TF005],[COPTF].[TF006],[COPTF].[TF007],[COPTF].[TF008],[COPTF].[TF009],[COPTF].[TF010]
                                    ,[COPTF].[TF011],[COPTF].[TF012],[COPTF].[TF013],[COPTF].[TF014],[COPTF].[TF015],[COPTF].[TF016],[COPTF].[TF017],[COPTF].[TF018],[COPTF].[TF019],[COPTF].[TF020]
                                    ,[COPTF].[TF021],[COPTF].[TF022],[COPTF].[TF023],[COPTF].[TF024],[COPTF].[TF025],[COPTF].[TF026],[COPTF].[TF027],[COPTF].[TF028],[COPTF].[TF029],[COPTF].[TF030]
                                    ,[COPTF].[TF031],[COPTF].[TF032],[COPTF].[TF034],[COPTF].[TF035],[COPTF].[TF036],[COPTF].[TF037],[COPTF].[TF038],[COPTF].[TF039],[COPTF].[TF040],[COPTF].[TF041]
                                    ,[COPTF].[TF042],[COPTF].[TF043],[COPTF].[TF044],[COPTF].[TF045],[COPTF].[TF046],[COPTF].[TF048],[COPTF].[TF049],[COPTF].[TF050]
                                    ,[COPTF].[TF051],[COPTF].[TF052],[COPTF].[TF053],[COPTF].[TF054],[COPTF].[TF055],[COPTF].[TF056],[COPTF].[TF057],[COPTF].[TF058],[COPTF].[TF059],[COPTF].[TF060]
                                    ,[COPTF].[TF061],[COPTF].[TF062],[COPTF].[TF063],[COPTF].[TF064],[COPTF].[TF065],[COPTF].[TF066],[COPTF].[TF067],[COPTF].[TF068],[COPTF].[TF069],[COPTF].[TF070]
                                    ,[COPTF].[TF071],[COPTF].[TF072],[COPTF].[TF073],[COPTF].[TF074],[COPTF].[TF075],[COPTF].[TF076],[COPTF].[TF077],[COPTF].[TF078],[COPTF].[TF079],[COPTF].[TF080]
                                    ,[COPTF].[TF104],[COPTF].[TF105],[COPTF].[TF106],[COPTF].[TF107],[COPTF].[TF108],[COPTF].[TF109],[COPTF].[TF110]
                                    ,[COPTF].[TF111],[COPTF].[TF112],[COPTF].[TF113],[COPTF].[TF114],[COPTF].[TF115],[COPTF].[TF116],[COPTF].[TF117],[COPTF].[TF120]
                                    ,[COPTF].[TF121],[COPTF].[TF122],[COPTF].[TF123],[COPTF].[TF124],[COPTF].[TF125],[COPTF].[TF126],[COPTF].[TF127],[COPTF].[TF128],[COPTF].[TF129],[COPTF].[TF130]
                                    ,[COPTF].[TF131],[COPTF].[TF132],[COPTF].[TF133],[COPTF].[TF134],[COPTF].[TF135],[COPTF].[TF136],[COPTF].[TF137],[COPTF].[TF138],[COPTF].[TF139],[COPTF].[TF140]
                                    ,[COPTF].[TF141],[COPTF].[TF142],[COPTF].[TF143],[COPTF].[TF144],[COPTF].[TF145],[COPTF].[TF146],[COPTF].[TF147],[COPTF].[TF148],[COPTF].[TF149],[COPTF].[TF150]
                                    ,[COPTF].[TF151],[COPTF].[TF152],[COPTF].[TF153],[COPTF].[TF154],[COPTF].[TF155],[COPTF].[TF156],[COPTF].[TF157],[COPTF].[TF158],[COPTF].[TF159],[COPTF].[TF160]
                                    ,[COPTF].[TF161],[COPTF].[TF162],[COPTF].[TF163],[COPTF].[TF164],[COPTF].[TF165],[COPTF].[TF166],[COPTF].[TF167],[COPTF].[TF168],[COPTF].[TF169],[COPTF].[TF170]
                                    ,[COPTF].[TF171],[COPTF].[TF172],[COPTF].[TF173],[COPTF].[TF174],[COPTF].[TF175],[COPTF].[TF176],[COPTF].[TF177],[COPTF].[TF178],[COPTF].[TF179],[COPTF].[TF180]
                                    ,[COPTF].[TF181],[COPTF].[TF182],[COPTF].[TF183],[COPTF].[TF184],[COPTF].[TF185],[COPTF].[TF186],[COPTF].[TF187],[COPTF].[TF188],[COPTF].[TF189],[COPTF].[TF190]
                                    ,[COPTF].[TF191],[COPTF].[TF192],[COPTF].[TF193],[COPTF].[TF194],[COPTF].[TF195],[COPTF].[TF196],[COPTF].[TF197],[COPTF].[TF198],[COPTF].[TF199]
                                    ,[COPTF].[TF200],[COPTF].[TF300]

                                    ,[COPTF].[UDF01] AS 'COPTFUDF01',[COPTF].[UDF02] AS 'COPTFUDF02',[COPTF].[UDF03] AS 'COPTFUDF03',[COPTF].[UDF04] AS 'COPTFUDF04',[COPTF].[UDF05] AS 'COPTFUDF05',[COPTF].[UDF06] AS 'COPTFUDF06',[COPTF].[UDF07] AS 'COPTFUDF07',[COPTF].[UDF08] AS 'COPTFUDF08',[COPTF].[UDF09] AS 'COPTFUDF09',[COPTF].[UDF10] AS 'COPTFUDF10'
                                    ,[TB_EB_USER].USER_GUID,NAME
                                    ,(SELECT TOP 1 MV002 FROM [TK].dbo.CMSMV WHERE MV001=TE009) AS 'MV002'
                                    ,(SELECT TOP 1 MA002 FROM [TK].dbo.COPMA WHERE MA001=TE007) AS 'MA002'
                                    ,(SELECT TOP 1 COPMA.UDF04 FROM [TK].dbo.COPMA,[TK].dbo.CMSMV WHERE COPMA.UDF04=CMSMV.MV001 AND COPMA.MA001=TE007) AS 'BA'
                                    ,(SELECT TOP 1 CMSMV.MV002 FROM [TK].dbo.COPMA,[TK].dbo.CMSMV WHERE COPMA.UDF04=CMSMV.MV001 AND COPMA.MA001=TE007) AS 'BANAME'

                                    FROM [TK].dbo.COPTF,[TK].dbo.COPTE
                                    LEFT JOIN [192.168.1.223].[{0}].[dbo].[TB_EB_USER] ON [TB_EB_USER].ACCOUNT= TE009 COLLATE Chinese_Taiwan_Stroke_BIN
                                    WHERE TE001=TF001 AND TE002=TF002 AND TE003=TF003
                                    AND TE001='{1}' AND TE002='{2}' AND TE003='{3}'
                                    ) AS TEMP   
                              
                                    ", DBNAME, TE001, TE002,TE003);


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    return ds1.Tables["ds1"];

                }
                else
                {
                    return null;
                }

            }
            catch
            {
                return null;
            }
            finally
            {
                sqlConn.Close();
            }
        }

        private void button10_Click(object sender, EventArgs e)
        {
            UPDATE_TB_WKF_TASK_TASK_RESULT();
        }
        public void UPDATE_TB_WKF_TASK_TASK_RESULT()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sqlConn.Close();
                sqlConn.Open();
                tran = sqlConn.BeginTransaction();

                sbSql.Clear();

                sbSql.AppendFormat(@"
                                    UPDATE [UOF].[dbo].[TB_WKF_TASK]
                                    SET  [TASK_RESULT]='2',TASK_STATUS='2',[CURRENT_SIGNER]=NULL,[CURRENT_SITE_ID]=NULL
                                    WHERE  TASK_STATUS IN ('4')
                                    AND [FORM_VERSION_ID] IN
                                    (
	                                    SELECT  [FORM_VERSION_ID]
	                                    FROM [UOF].[dbo].[TB_WKF_FORM_VERSION]
	                                    WHERE [FORM_ID] IN 
		                                    (
		                                    SELECT 
		                                    [FORM_ID]      
		                                    FROM [UOF].[dbo].[TB_WKF_FORM]
		                                    WHERE [FORM_NAME] IN 
			                                    (
			                                    SELECT [FORM_NAME] FROM [UOF].[dbo].[Z_TK_FORM_NAME]
			                                    )
		                                    )
                                    )
                                         

                                    ");

                cmd.Connection = sqlConn;
                cmd.CommandTimeout = 60;
                cmd.CommandText = sbSql.ToString();
                cmd.Transaction = tran;
                result = cmd.ExecuteNonQuery();

                if (result == 0)
                {
                    tran.Rollback();    //交易取消
                }
                else
                {
                    tran.Commit();      //執行交易  
                }

            }
            catch
            {

            }

            finally
            {
                sqlConn.Close();
            }
        }

        public void ADDTKMKdboTBSTORESCHECK()
        {
            IEnumerable<DataRow> query2 = null;

            DataTable DT1 = SEARCHUOFSTORE();
            DataTable DT2 = SEARCHTKMKTBSTORESCHECK();

            //找DataTable差集
            //要有相同的欄位名稱
            //找DataTable差集
            //要有相同的欄位名稱
            if (DT1.Rows.Count > 0 && DT2.Rows.Count > 0)
            {
                query2 = DT1.AsEnumerable().Except(DT2.AsEnumerable(), DataRowComparer.Default);
            }

           
            
            if(query2.Count()>0)
            {
                //差集集合
                DataTable dt3 = query2.CopyToDataTable();

                foreach (DataRow dr in dt3.Rows)
                {
                    SEARCHUOFTB_WKF_TASK(dr["DOC_NBR"].ToString());
                }
            }
            
                
        }

        //找出UOF表單的資料，將CURRENT_DOC的內容，轉成xmlDoc
        //從xmlDoc找出各節點的Attributes
        public void SEARCHUOFTB_WKF_TASK(string DOC_NBR)
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sbSql.Clear();
                sbSqlQuery.Clear();

                //庫存數量看LA009 IN ('20004','20006','20008','20019','20020'

                sbSql.AppendFormat(@"  
                                    SELECT * 
                                    FROM [UOF].DBO.TB_WKF_TASK 
                                    LEFT JOIN [UOF].[dbo].[TB_EB_USER] ON [TB_EB_USER].USER_GUID=TB_WKF_TASK.USER_GUID
                                    WHERE DOC_NBR LIKE '{0}%'
                              
                                    ", DOC_NBR);


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    string NAME = ds1.Tables["ds1"].Rows[0]["NAME"].ToString();

                    XmlDocument xmlDoc = new XmlDocument();
                    xmlDoc.LoadXml(ds1.Tables["ds1"].Rows[0]["CURRENT_DOC"].ToString());

                    //XmlNode node = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='ID']");
                    string ID = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='ID']").Attributes["fieldValue"].Value;
                    string STORE1 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='STORE1']").Attributes["fieldValue"].Value;
                    string STORE2 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='STORE2']").Attributes["fieldValue"].Value;
                    string STORE3 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='STORE3']").Attributes["fieldValue"].Value;
                    string STORE4 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='STORE4']").Attributes["fieldValue"].Value;
                    string STORE5 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='STORE5']").Attributes["fieldValue"].Value;
                    string STORE6 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='STORE6']").Attributes["fieldValue"].Value;
                    string STORE7 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='STORE7']").Attributes["fieldValue"].Value;
                    string STORE8 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='STORE8']").Attributes["fieldValue"].Value;
                    string STORE9 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='STORE9']").Attributes["fieldValue"].Value;
                    string STORE10 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='STORE10']").Attributes["fieldValue"].Value;
                    string STORE11 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='STORE11']").Attributes["fieldValue"].Value;
                    string STORE12 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='STORE12']").Attributes["fieldValue"].Value;
                    string STORE13 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='STORE13']").Attributes["fieldValue"].Value;
                    string STORE14 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='STORE14']").Attributes["fieldValue"].Value;
                    string STORE15 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='STORE15']").Attributes["fieldValue"].Value;
                    string STORE16 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='STORE16']").Attributes["fieldValue"].Value;
                    string STORE17 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='STORE17']").Attributes["fieldValue"].Value;
                    string STORE18 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='STORE18']").Attributes["fieldValue"].Value;
                    string STORE19 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='STORE19']").Attributes["fieldValue"].Value;
                    string STORE20 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='STORE20']").Attributes["fieldValue"].Value;
                    string STORE21 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='STORE21']").Attributes["fieldValue"].Value;
                    string STORE22 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='STORE22']").Attributes["fieldValue"].Value;
                    string STORE23 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='STORE23']").Attributes["fieldValue"].Value;
                    string STORE24 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='STORE24']").Attributes["fieldValue"].Value;
                    string STORE25 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='STORE25']").Attributes["fieldValue"].Value;
                    string STORE26 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='STORE26']").Attributes["fieldValue"].Value;
                    string STORE27 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='STORE27']").Attributes["fieldValue"].Value;
                    string STORE28 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='STORE28']").Attributes["fieldValue"].Value;
                    string STORE29 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='STORE29']").Attributes["fieldValue"].Value;
                    string STORE30 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='STORE30']").Attributes["fieldValue"].Value;
                    string STORE31 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='STORE31']").Attributes["fieldValue"].Value;
                    string STORE32 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='STORE32']").Attributes["fieldValue"].Value;
                    string STORE33 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='STORE33']").Attributes["fieldValue"].Value;
                    string STORE34 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='STORE34']").Attributes["fieldValue"].Value;
                    string STORE35 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='STORE35']").Attributes["fieldValue"].Value;
                    string STORE36 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='STORE36']").Attributes["fieldValue"].Value;
                    string STORE37 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='STORE37']").Attributes["fieldValue"].Value;
                    string STORE38 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='STORE38']").Attributes["fieldValue"].Value;
                    string STORE39 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='STORE39']").Attributes["fieldValue"].Value;
                    string STORE40 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='STORE40']").Attributes["fieldValue"].Value;
                    string STORE41 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='STORE41']").Attributes["fieldValue"].Value;
                    string STORE42 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='STORE42']").Attributes["fieldValue"].Value;
                    string STORE43 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='STORE43']").Attributes["fieldValue"].Value;
                    string STORE44 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='STORE44']").Attributes["fieldValue"].Value;

                    int index2 = STORE2.IndexOf("@");
                    STORE2 = STORE2.Substring(0, index2);
                    int index8 = STORE8.IndexOf("@");
                    STORE8 = STORE8.Substring(0, index8);
                    int index10 = STORE10.IndexOf("@");
                    STORE10 = STORE10.Substring(0, index10);
                    int index11 = STORE11.IndexOf("@");
                    STORE11 = STORE11.Substring(0, index11);
                    int index12 = STORE12.IndexOf("@");
                    STORE12 = STORE12.Substring(0, index12);
                    int index13 = STORE13.IndexOf("@");
                    STORE13 = STORE13.Substring(0, index13);
                    int index14 = STORE14.IndexOf("@");
                    STORE14 = STORE14.Substring(0, index14);
                    int index17 = STORE17.IndexOf("@");
                    STORE17 = STORE17.Substring(0, index17);
                    int index18 = STORE18.IndexOf("@");
                    STORE18 = STORE18.Substring(0, index18);
                    int index19 = STORE19.IndexOf("@");
                    STORE19 = STORE19.Substring(0, index19);
                    int index22 = STORE22.IndexOf("@");
                    STORE22 = STORE22.Substring(0, index22);
                    int index23 = STORE23.IndexOf("@");
                    STORE23 = STORE23.Substring(0, index23);
                    int index24 = STORE24.IndexOf("@");
                    STORE24 = STORE24.Substring(0, index24);
                    int index26 = STORE26.IndexOf("@");
                    STORE26 = STORE26.Substring(0, index26);
                    int index29 = STORE29.IndexOf("@");
                    STORE29 = STORE29.Substring(0, index29);
                    int index30 = STORE30.IndexOf("@");
                    STORE30 = STORE30.Substring(0, index30);
                    int index31 = STORE31.IndexOf("@");
                    STORE31 = STORE31.Substring(0, index31);
                    int index32 = STORE32.IndexOf("@");
                    STORE32 = STORE32.Substring(0, index32);
                    int index33 = STORE33.IndexOf("@");
                    STORE33 = STORE33.Substring(0, index33);
                    int index35 = STORE35.IndexOf("@");
                    STORE35 = STORE35.Substring(0, index35);
                    int index36 = STORE36.IndexOf("@");
                    STORE36 = STORE36.Substring(0, index36);

                    //string OK = "";
                    ADDTOTKMKTBSTORESCHECK(
                                            ID
                                            , STORE1
                                            , STORE2
                                            , STORE3
                                            , STORE4
                                            , STORE5
                                            , STORE6
                                            , STORE7
                                            , STORE8
                                            , STORE9
                                            , STORE10
                                            , STORE11
                                            , STORE12
                                            , STORE13
                                            , STORE14
                                            , STORE15
                                            , STORE16
                                            , STORE17
                                            , STORE18
                                            , STORE19
                                            , STORE20
                                            , STORE21
                                            , STORE22
                                            , STORE23
                                            , STORE24
                                            , STORE25
                                            , STORE26
                                            , STORE27
                                            , STORE28
                                            , STORE29
                                            , STORE30
                                            , STORE31
                                            , STORE32
                                            , STORE33
                                            , STORE34
                                            , STORE35
                                            , STORE36
                                            , STORE37
                                            , STORE38
                                            , STORE39
                                            , STORE40
                                            , STORE41
                                            , STORE42
                                            , STORE43
                                            , STORE44
                                            , NAME
                                            );


                }
                else
                {
                    
                }

            }
            catch
            {
               
            }
            finally
            {
                sqlConn.Close();
            }
        }

        public void ADDTOTKMKTBSTORESCHECK(
                                        string ID
                                        , string STORE1
                                        , string STORE2
                                        , string STORE3
                                        , string STORE4
                                        , string STORE5
                                        , string STORE6
                                        , string STORE7
                                        , string STORE8
                                        , string STORE9
                                        , string STORE10
                                        , string STORE11
                                        , string STORE12
                                        , string STORE13
                                        , string STORE14
                                        , string STORE15
                                        , string STORE16
                                        , string STORE17
                                        , string STORE18
                                        , string STORE19
                                        , string STORE20
                                        , string STORE21
                                        , string STORE22
                                        , string STORE23
                                        , string STORE24
                                        , string STORE25
                                        , string STORE26
                                        , string STORE27
                                        , string STORE28
                                        , string STORE29
                                        , string STORE30
                                        , string STORE31
                                        , string STORE32
                                        , string STORE33
                                        , string STORE34
                                        , string STORE35
                                        , string STORE36
                                        , string STORE37
                                        , string STORE38
                                        , string STORE39
                                        , string STORE40
                                        , string STORE41
                                        , string STORE42
                                        , string STORE43
                                        , string STORE44
                                        ,string NAME
                                            )
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sqlConn.Close();
                sqlConn.Open();
                tran = sqlConn.BeginTransaction();

                sbSql.Clear();

                sbSql.AppendFormat(@"
                                    INSERT INTO [TKMK].[dbo].[TBSTORESCHECK]
                                    (
                                    [ID]
                                    ,[STORE1]
                                    ,[STORE2]
                                    ,[STORE3]
                                    ,[STORE4]
                                    ,[STORE5]
                                    ,[STORE6]
                                    ,[STORE7]
                                    ,[STORE8]
                                    ,[STORE9]
                                    ,[STORE10]
                                    ,[STORE11]
                                    ,[STORE12]
                                    ,[STORE13]
                                    ,[STORE14]
                                    ,[STORE15]
                                    ,[STORE16]
                                    ,[STORE17]
                                    ,[STORE18]
                                    ,[STORE19]
                                    ,[STORE20]
                                    ,[STORE21]
                                    ,[STORE22]
                                    ,[STORE23]
                                    ,[STORE24]
                                    ,[STORE25]
                                    ,[STORE26]
                                    ,[STORE27]
                                    ,[STORE28]
                                    ,[STORE29]
                                    ,[STORE30]
                                    ,[STORE31]
                                    ,[STORE32]
                                    ,[STORE33]
                                    ,[STORE34]
                                    ,[STORE35]
                                    ,[STORE36]
                                    ,[STORE37]
                                    ,[STORE38]
                                    ,[STORE39]
                                    ,[STORE40]
                                    ,[STORE41]
                                    ,[STORE42]
                                    ,[STORE43]
                                    ,[STORE44]
                                    ,[NAME]
                                    )
                                    VALUES
                                    (
                                    '{0}'
                                    ,'{1}'
                                    ,'{2}'
                                    ,'{3}'
                                    ,'{4}'
                                    ,'{5}'
                                    ,'{6}'
                                    ,'{7}'
                                    ,'{8}'
                                    ,'{9}'
                                    ,'{10}'
                                    ,'{11}'
                                    ,'{12}'
                                    ,'{13}'
                                    ,'{14}'
                                    ,'{15}'
                                    ,'{16}'
                                    ,'{17}'
                                    ,'{18}'
                                    ,'{19}'
                                    ,'{20}'
                                    ,'{21}'
                                    ,'{22}'
                                    ,'{23}'
                                    ,'{24}'
                                    ,'{25}'
                                    ,'{26}'
                                    ,'{27}'
                                    ,'{28}'
                                    ,'{29}'
                                    ,'{30}'
                                    ,'{31}'
                                    ,'{32}'
                                    ,'{33}'
                                    ,'{34}'
                                    ,'{35}'
                                    ,'{36}'
                                    ,'{37}'
                                    ,'{38}'
                                    ,'{39}'
                                    ,'{40}'
                                    ,'{41}'
                                    ,'{42}'
                                    ,'{43}'
                                    ,'{44}'
                                    ,'{45}'
                                    )

                                    ", ID
                                    , STORE1
                                    , STORE2
                                    , STORE3
                                    , STORE4
                                    , STORE5
                                    , STORE6
                                    , STORE7
                                    , STORE8
                                    , STORE9
                                    , STORE10
                                    , STORE11
                                    , STORE12
                                    , STORE13
                                    , STORE14
                                    , STORE15
                                    , STORE16
                                    , STORE17
                                    , STORE18
                                    , STORE19
                                    , STORE20
                                    , STORE21
                                    , STORE22
                                    , STORE23
                                    , STORE24
                                    , STORE25
                                    , STORE26
                                    , STORE27
                                    , STORE28
                                    , STORE29
                                    , STORE30
                                    , STORE31
                                    , STORE32
                                    , STORE33
                                    , STORE34
                                    , STORE35
                                    , STORE36
                                    , STORE37
                                    , STORE38
                                    , STORE39
                                    , STORE40
                                    , STORE41
                                    , STORE42
                                    , STORE43
                                    , STORE44
                                    , NAME

                                    );

                cmd.Connection = sqlConn;
                cmd.CommandTimeout = 60;
                cmd.CommandText = sbSql.ToString();
                cmd.Transaction = tran;
                result = cmd.ExecuteNonQuery();

                if (result == 0)
                {
                    tran.Rollback();    //交易取消
                }
                else
                {
                    tran.Commit();      //執行交易  
                }

            }
            catch
            {

            }

            finally
            {
                sqlConn.Close();
            }
        }

        public DataTable SEARCHUOFSTORE()
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            string THISYEARS = DateTime.Now.ToString("yyyy");
            //取西元年後2位
            THISYEARS = THISYEARS.Substring(2,2);

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sbSql.Clear();
                sbSqlQuery.Clear();


                //是門市督導單STORE
                //核準過TASK_RESULT='0'
                sbSql.AppendFormat(@"  
                                     SELECT DOC_NBR
                                     FROM [UOF].dbo.TB_WKF_TASK 
                                     WHERE DOC_NBR LIKE 'STORE{0}%'
                                     AND TASK_RESULT='0'
                                    
                                    UNION ALL
                                    SELECT 'STORE220300013'
                                    ", THISYEARS);


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    return ds1.Tables["ds1"];

                }
                else
                {
                    return null;
                }

            }
            catch
            {
                return null;
            }
            finally
            {
                sqlConn.Close();
            }
        }

    
        public DataTable SEARCHTKMKTBSTORESCHECK()
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            string THISYEARS = DateTime.Now.ToString("yyyy");
            //取西元年後2位
            THISYEARS = THISYEARS.Substring(2, 2);

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sbSql.Clear();
                sbSqlQuery.Clear();

                //UNION ALL 
                //SELECT 'A'
                //避免回傳NULL

                sbSql.AppendFormat(@"  
                                     SELECT [ID] AS 'DOC_NBR'
                                     FROM [TKMK].[dbo].[TBSTORESCHECK]
                                     WHERE [ID] LIKE 'STORE{0}%'
                                    UNION ALL 
									SELECT 'A'
                                    ", THISYEARS);


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    return ds1.Tables["ds1"];

                }
                else
                {
                    return null;
                }

            }
            catch
            {
                return null;
            }
            finally
            {
                sqlConn.Close();
            }
        }

        public void ADDTKMKdboTBSTOREDAILY()
        {
            IEnumerable<DataRow> query2 = null;

            DataTable DT1 = SEARCHUOFSTOREDAILY();
            DataTable DT2 = SEARCHTKMKTBSTOREDAILYCHECK();

            //找DataTable差集
            //要有相同的欄位名稱
            //找DataTable差集
            //要有相同的欄位名稱
            if (DT1.Rows.Count > 0 && DT2.Rows.Count > 0)
            {
                query2 = DT1.AsEnumerable().Except(DT2.AsEnumerable(), DataRowComparer.Default);
            }



            if (query2.Count() > 0)
            {
                //差集集合
                DataTable dt3 = query2.CopyToDataTable();

                foreach (DataRow dr in dt3.Rows)
                {
                    SEARCHUOFTB_WKF_TASK_FRO_STOREDAILY(dr["DOC_NBR"].ToString());
                }
            }


        }

        //找出UOF表單的資料，將CURRENT_DOC的內容，轉成xmlDoc
        //從xmlDoc找出各節點的Attributes
        public void SEARCHUOFTB_WKF_TASK_FRO_STOREDAILY(string DOC_NBR)
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sbSql.Clear();
                sbSqlQuery.Clear();

                //庫存數量看LA009 IN ('20004','20006','20008','20019','20020'

                sbSql.AppendFormat(@"  
                                    SELECT * 
                                    FROM [UOF].DBO.TB_WKF_TASK 
                                    LEFT JOIN [UOF].[dbo].[TB_EB_USER] ON [TB_EB_USER].USER_GUID=TB_WKF_TASK.USER_GUID
                                    WHERE DOC_NBR LIKE '{0}%'
                              
                                    ", DOC_NBR);


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    string NAME = ds1.Tables["ds1"].Rows[0]["NAME"].ToString();

                    XmlDocument xmlDoc = new XmlDocument();
                    xmlDoc.LoadXml(ds1.Tables["ds1"].Rows[0]["CURRENT_DOC"].ToString());

                    //XmlNode node = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='ID']");
                    string ID = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='ID']").Attributes["fieldValue"].Value;
                    string FIELD1 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='FIELD1']").Attributes["fieldValue"].Value;
                    string FIELD2 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='FIELD2']").Attributes["fieldValue"].Value;
                    string FIELD3 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='FIELD3']").Attributes["fieldValue"].Value;
                    string FIELD4 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='FIELD4']").Attributes["fieldValue"].Value;
                    string FIELD5 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='FIELD5']").Attributes["fieldValue"].Value;
                    string FIELD6 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='FIELD6']").Attributes["fieldValue"].Value;
                    string FIELD7 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='FIELD7']").Attributes["fieldValue"].Value;
                    string FIELD8 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='FIELD8']").Attributes["fieldValue"].Value;
                    string FIELD9 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='FIELD9']").Attributes["fieldValue"].Value;
                    string FIELD10 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='FIELD10']").Attributes["fieldValue"].Value;
                    string FIELD11 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='FIELD11']").Attributes["fieldValue"].Value;
                    string FIELD12 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='FIELD12']").Attributes["fieldValue"].Value;
                    string FIELD13 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='FIELD13']").Attributes["fieldValue"].Value;
                    string FIELD14 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='FIELD14']").Attributes["fieldValue"].Value;
                    string FIELD15 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='FIELD15']").Attributes["fieldValue"].Value;
                    string FIELD16 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='FIELD16']").Attributes["fieldValue"].Value;
                    string FIELD17 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='FIELD17']").Attributes["fieldValue"].Value;
                    string FIELD18 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='FIELD18']").Attributes["fieldValue"].Value;
                    string FIELD19 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='FIELD19']").Attributes["fieldValue"].Value;
                    string FIELD20 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='FIELD20']").Attributes["fieldValue"].Value;
                    string FIELD21 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='FIELD21']").Attributes["fieldValue"].Value;
                    string FIELD22 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='FIELD22']").Attributes["fieldValue"].Value;
                    string FIELD23 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='FIELD23']").Attributes["fieldValue"].Value;
                    string FIELD24 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='FIELD24']").Attributes["fieldValue"].Value;
                    string FIELD25 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='FIELD25']").Attributes["fieldValue"].Value;
                    string FIELD26 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='FIELD26']").Attributes["fieldValue"].Value;
                    string FIELD27 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='FIELD27']").Attributes["fieldValue"].Value;
                    string FIELD28 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='FIELD28']").Attributes["fieldValue"].Value;
                    string FIELD29 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='FIELD29']").Attributes["fieldValue"].Value;
                    string FIELD29a = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='FIELD29a']").Attributes["fieldValue"].Value;
                    string FIELD30 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='FIELD30']").Attributes["fieldValue"].Value;
                    string FIELD31 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='FIELD31']").Attributes["fieldValue"].Value;
                    string FIELD32 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='FIELD32']").Attributes["fieldValue"].Value;
                    string FIELD33 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='FIELD33']").Attributes["fieldValue"].Value;
                    string FIELD34 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='FIELD34']").Attributes["fieldValue"].Value;
                    string FIELD35 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='FIELD35']").Attributes["fieldValue"].Value;
                    //string FIELD36 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='FIELD36']").Attributes["fieldValue"].Value;
                    string FIELD36 = null;
                    string FIELD37 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='FIELD37']").Attributes["fieldValue"].Value;
                    string FIELD38 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='FIELD38']").Attributes["fieldValue"].Value;
                    string FIELD39 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='FIELD39']").Attributes["fieldValue"].Value;
                    string FIELD40 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='FIELD40']").Attributes["fieldValue"].Value;
                    string FIELD41 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='FIELD41']").Attributes["fieldValue"].Value;
                    string FIELD42 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='FIELD42']").Attributes["fieldValue"].Value;

                    int index1 = FIELD1.IndexOf("@");
                    FIELD1 = FIELD1.Substring(0, index1);
                    int index6 = FIELD6.IndexOf("@");
                    FIELD6 = FIELD6.Substring(0, index6);
                    int index7 = FIELD7.IndexOf("@");
                    FIELD7 = FIELD7.Substring(0, index7);

                    //string OK = "";
                    ADDTOTKMKTBSTOREDAILY(
                                             ID
                                            , FIELD1
                                            , FIELD2
                                            , FIELD3
                                            , FIELD4
                                            , FIELD5
                                            , FIELD6
                                            , FIELD7
                                            , FIELD8
                                            , FIELD9
                                            , FIELD10
                                            , FIELD11
                                            , FIELD12
                                            , FIELD13
                                            , FIELD14
                                            , FIELD15
                                            , FIELD16
                                            , FIELD17
                                            , FIELD18
                                            , FIELD19
                                            , FIELD20
                                            , FIELD21
                                            , FIELD22
                                            , FIELD23
                                            , FIELD24
                                            , FIELD25
                                            , FIELD26
                                            , FIELD27
                                            , FIELD28
                                            , FIELD29
                                            , FIELD29a
                                            , FIELD30
                                            , FIELD31
                                            , FIELD32
                                            , FIELD33
                                            , FIELD34
                                            , FIELD35
                                            , FIELD36
                                            , FIELD37
                                            , FIELD38
                                            , FIELD39
                                            , FIELD40
                                            , FIELD41
                                            , FIELD42
                                            , NAME
                                            );


                }
                else
                {

                }

            }
            catch
            {

            }
            finally
            {
                sqlConn.Close();
            }
        }

        public void ADDTOTKMKTBSTOREDAILY(
                                        string ID
                                        , string FIELD1
                                        , string FIELD2
                                        , string FIELD3
                                        , string FIELD4
                                        , string FIELD5
                                        , string FIELD6
                                        , string FIELD7
                                        , string FIELD8
                                        , string FIELD9
                                        , string FIELD10
                                        , string FIELD11
                                        , string FIELD12
                                        , string FIELD13
                                        , string FIELD14
                                        , string FIELD15
                                        , string FIELD16
                                        , string FIELD17
                                        , string FIELD18
                                        , string FIELD19
                                        , string FIELD20
                                        , string FIELD21
                                        , string FIELD22
                                        , string FIELD23
                                        , string FIELD24
                                        , string FIELD25
                                        , string FIELD26
                                        , string FIELD27
                                        , string FIELD28
                                        , string FIELD29
                                        , string FIELD29a
                                        , string FIELD30
                                        , string FIELD31
                                        , string FIELD32
                                        , string FIELD33
                                        , string FIELD34
                                        , string FIELD35
                                        , string FIELD36
                                        , string FIELD37
                                        , string FIELD38
                                        , string FIELD39
                                        , string FIELD40
                                        , string FIELD41
                                        , string FIELD42
                                        , string NAME
                                            )
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sqlConn.Close();
                sqlConn.Open();
                tran = sqlConn.BeginTransaction();

                sbSql.Clear();

                sbSql.AppendFormat(@"
                                    INSERT INTO [TKMK].[dbo].[TBSTOREDAILY]
                                    (
                                    [ID]
                                    ,[FIELD1]
                                    ,[FIELD2]
                                    ,[FIELD3]
                                    ,[FIELD4]
                                    ,[FIELD5]
                                    ,[FIELD6]
                                    ,[FIELD7]
                                    ,[FIELD8]
                                    ,[FIELD9]
                                    ,[FIELD10]
                                    ,[FIELD11]
                                    ,[FIELD12]
                                    ,[FIELD13]
                                    ,[FIELD14]
                                    ,[FIELD15]
                                    ,[FIELD16]
                                    ,[FIELD17]
                                    ,[FIELD18]
                                    ,[FIELD19]
                                    ,[FIELD20]
                                    ,[FIELD21]
                                    ,[FIELD22]
                                    ,[FIELD23]
                                    ,[FIELD24]
                                    ,[FIELD25]
                                    ,[FIELD26]
                                    ,[FIELD27]
                                    ,[FIELD28]
                                    ,[FIELD29]
                                    ,[FIELD29a]
                                    ,[FIELD30]
                                    ,[FIELD31]
                                    ,[FIELD32]
                                    ,[FIELD33]
                                    ,[FIELD34]
                                    ,[FIELD35]
                                    ,[FIELD36]
                                    ,[FIELD37]
                                    ,[FIELD38]
                                    ,[FIELD39]
                                    ,[FIELD40]
                                    ,[FIELD41]
                                    ,[FIELD42]
                                    ,[NAME]
                                    )
                                    VALUES
                                    (
                                    '{0}'
                                    ,'{1}'
                                    ,'{2}'
                                    ,'{3}'
                                    ,'{4}'
                                    ,'{5}'
                                    ,'{6}'
                                    ,'{7}'
                                    ,'{8}'
                                    ,'{9}'
                                    ,'{10}'
                                    ,'{11}'
                                    ,'{12}'
                                    ,'{13}'
                                    ,'{14}'
                                    ,'{15}'
                                    ,'{16}'
                                    ,'{17}'
                                    ,'{18}'
                                    ,'{19}'
                                    ,'{20}'
                                    ,'{21}'
                                    ,'{22}'
                                    ,'{23}'
                                    ,'{24}'
                                    ,'{25}'
                                    ,'{26}'
                                    ,'{27}'
                                    ,'{28}'
                                    ,'{29}'
                                    ,'{30}'
                                    ,'{31}'
                                    ,'{32}'
                                    ,'{33}'
                                    ,'{34}'
                                    ,'{35}'
                                    ,'{36}'
                                    ,'{37}'
                                    ,'{38}'
                                    ,'{39}'
                                    ,'{40}'
                                    ,'{41}'
                                    ,'{42}'
                                    ,'{43}'
                                    ,'{44}'
                                    )

                                    ", ID
                                    , FIELD1
                                    , FIELD2
                                    , FIELD3
                                    , FIELD4
                                    , FIELD5
                                    , FIELD6
                                    , FIELD7
                                    , FIELD8
                                    , FIELD9
                                    , FIELD10
                                    , FIELD11
                                    , FIELD12
                                    , FIELD13
                                    , FIELD14
                                    , FIELD15
                                    , FIELD16
                                    , FIELD17
                                    , FIELD18
                                    , FIELD19
                                    , FIELD20
                                    , FIELD21
                                    , FIELD22
                                    , FIELD23
                                    , FIELD24
                                    , FIELD25
                                    , FIELD26
                                    , FIELD27
                                    , FIELD28
                                    , FIELD29
                                    , FIELD29a
                                    , FIELD30
                                    , FIELD31
                                    , FIELD32
                                    , FIELD33
                                    , FIELD34
                                    , FIELD35
                                    , FIELD36
                                    , FIELD37
                                    , FIELD38
                                    , FIELD39
                                    , FIELD40
                                    , FIELD41
                                    , FIELD42
                                    , NAME

                                    );

                cmd.Connection = sqlConn;
                cmd.CommandTimeout = 60;
                cmd.CommandText = sbSql.ToString();
                cmd.Transaction = tran;
                result = cmd.ExecuteNonQuery();

                if (result == 0)
                {
                    tran.Rollback();    //交易取消
                }
                else
                {
                    tran.Commit();      //執行交易  
                }

            }
            catch
            {

            }

            finally
            {
                sqlConn.Close();
            }
        }

        public DataTable SEARCHUOFSTOREDAILY()
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            string THISYEARS = DateTime.Now.ToString("yyyy");
            //取西元年後2位
            THISYEARS = THISYEARS.Substring(2, 2);

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sbSql.Clear();
                sbSqlQuery.Clear();


                //是門市督導單STORE
                //核準過TASK_RESULT='0'
                sbSql.AppendFormat(@"  
                                     SELECT DOC_NBR
                                     FROM [UOF].DBO.TB_WKF_TASK 
                                     WHERE DOC_NBR LIKE 'STOREDAILY{0}%'
                                     AND TASK_RESULT='0'
                                    ", THISYEARS);


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    return ds1.Tables["ds1"];

                }
                else
                {
                    return null;
                }

            }
            catch
            {
                return null;
            }
            finally
            {
                sqlConn.Close();
            }
        }


        public DataTable SEARCHTKMKTBSTOREDAILYCHECK()
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            string THISYEARS = DateTime.Now.ToString("yyyy");
            //取西元年後2位
            THISYEARS = THISYEARS.Substring(2, 2);

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sbSql.Clear();
                sbSqlQuery.Clear();

                //UNION ALL 
                //SELECT 'A'
                //避免回傳NULL

                sbSql.AppendFormat(@"  
                                     SELECT [ID] AS 'DOC_NBR'
                                        FROM [TKMK].[dbo].[TBSTOREDAILY]
                                        WHERE [ID] LIKE 'STOREDAILY{0}%'
                                        UNION ALL 
                                        SELECT 'A'
                                    ", THISYEARS);


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    return ds1.Tables["ds1"];

                }
                else
                {
                    return null;
                }

            }
            catch
            {
                return null;
            }
            finally
            {
                sqlConn.Close();
            }
        }

        public void  CHECKADDTOUOFFORMEDUCATION()
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sbSql.Clear();
                sbSqlQuery.Clear();


                //是門市督導單STORE
                //核準過TASK_RESULT='0'
                // 
                //AND [Z_SCSHR_LEAVE].DOC_NBR = 'FT101230500026'

                sbSql.AppendFormat(@"  
                                    SELECT *
                                    FROM [UOF].[dbo].[Z_SCSHR_LEAVE],[UOF].dbo.TB_WKF_TASK
                                    WHERE 1=1
                                    AND [Z_SCSHR_LEAVE].DOC_NBR=TB_WKF_TASK.DOC_NBR
                                    AND [Z_SCSHR_LEAVE].TASK_STATUS='2' AND [Z_SCSHR_LEAVE].TASK_RESULT='0'
                                    AND [LEACODE]='050B1'
                                    
                                    AND [Z_SCSHR_LEAVE].DOC_NBR LIKE 'FT101%'
                                    AND CONVERT(datetime,STARTTIME,112)>='20220427'
                                    AND APPLICANT NOT IN (SELECT  [APPLICANT]  FROM [UOF].[dbo].[Z_SCSHR_NOT])
                                    
                                    AND [Z_SCSHR_LEAVE].DOC_NBR NOT IN (SELECT EXTERNAL_FORM_NBR FROM  [UOF].[dbo].[TB_WKF_EXTERNAL_TASK] WHERE ISNULL(EXTERNAL_FORM_NBR,'')<>'' AND EXTERNAL_FORM_NBR LIKE 'FT%') 

                                    ORDER BY [Z_SCSHR_LEAVE].DOC_NBR
                                    ");


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    foreach (DataRow dr in ds1.Tables["ds1"].Rows)
                    {
                        ADDTOUOFFORMEDUCATION(dr["DOC_NBR"].ToString());
                    }

                }
                else
                {
                    
                }

            }
            catch
            {
                
            }
            finally
            {
                sqlConn.Close();
            }
        }

        public void ADDTOUOFFORMEDUCATION(string DOC_NBR)
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sbSql.Clear();
                sbSqlQuery.Clear();

                //AND [Z_SCSHR_LEAVE].DOC_NBR NOT IN (SELECT EXTERNAL_FORM_NBR FROM  [UOF].[dbo].[TB_WKF_EXTERNAL_TASK] WHERE ISNULL(EXTERNAL_FORM_NBR,'')<>'' AND EXTERNAL_FORM_NBR LIKE 'FT%')
                //AND[Z_SCSHR_LEAVE].DOC_NBR = '{0}'

                sbSql.AppendFormat(@"  
                                    SELECT *
                                    ,CONVERT(nvarchar,STARTTIME,111) NEWSTARTTIME,CONVERT(nvarchar,ENDTIME,111) NEWENDTIME
                                    ,USER_GUID
                                    ,(SELECT TOP 1 GROUP_ID FROM [UOF].[dbo].[TB_EB_EMPL_DEP] WHERE ORDERS='0' AND [TB_EB_EMPL_DEP].USER_GUID=[Z_SCSHR_LEAVE].APPLICANTGUID) AS 'GROUP_ID'
                                    ,(SELECT TOP 1 TITLE_ID FROM [UOF].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=[Z_SCSHR_LEAVE].APPLICANTGUID) AS 'TITLE_ID'
                                    ,(SELECT TOP 1 NAME FROM [UOF].[dbo].[TB_EB_USER] WHERE [TB_EB_USER].USER_GUID=[Z_SCSHR_LEAVE].APPLICANTGUID) AS 'NAME'
                                    FROM [UOF].[dbo].[Z_SCSHR_LEAVE],[UOF].dbo.TB_WKF_TASK
                                    WHERE 1=1
                                    AND [Z_SCSHR_LEAVE].DOC_NBR=TB_WKF_TASK.DOC_NBR
                                    AND [Z_SCSHR_LEAVE].TASK_STATUS='2' AND [Z_SCSHR_LEAVE].TASK_RESULT='0'
                                    AND [LEACODE]='050B1'
    
                                    AND [Z_SCSHR_LEAVE].DOC_NBR NOT IN (SELECT EXTERNAL_FORM_NBR FROM  [UOF].[dbo].[TB_WKF_EXTERNAL_TASK] WHERE ISNULL(EXTERNAL_FORM_NBR,'')<>'' AND EXTERNAL_FORM_NBR LIKE 'FT%')
                                    AND[Z_SCSHR_LEAVE].DOC_NBR = '{0}'
                                    ORDER BY [Z_SCSHR_LEAVE].DOC_NBR
                              
                                    ", DOC_NBR);


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    //建立userset xml
                    XmlDocument XMLDOC = new XmlDocument();

                    //建立表單xml
                    XmlDocument xmlDoc = new XmlDocument();
                    XmlDocument xmlDocqQuery = new XmlDocument();
                    //建立根節點
                    XmlElement Form = xmlDoc.CreateElement("Form");

                    string account = ds1.Tables["ds1"].Rows[0]["APPLICANT"].ToString().Trim();
                    string groupId = ds1.Tables["ds1"].Rows[0]["GROUP_ID"].ToString().Trim();
                    
                    string jobTitleId = ds1.Tables["ds1"].Rows[0]["TITLE_ID"].ToString().Trim();
                    string fillerName = ds1.Tables["ds1"].Rows[0]["NAME"].ToString().Trim();
                    string fillerUserGuid = ds1.Tables["ds1"].Rows[0]["USER_GUID"].ToString().Trim();

                    string EXTERNAL_FORM_NBR = DOC_NBR;

                    int rowscounts = 0;

                    xmlDocqQuery.LoadXml(ds1.Tables["ds1"].Rows[0]["CURRENT_DOC"].ToString());
                    //string LeaveType = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='ID']").Attributes["fieldValue"].Value;
                    string APPLICANT = ds1.Tables["ds1"].Rows[0]["APPLICANT"].ToString();

                    //姓名(TrainUserName)
                    string TrainUserName = fillerName + "(" + account + ")";
                    //部門(TrainUserDept) fieldValue
                    string TrainUserDeptfieldValue = xmlDocqQuery.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='KY002']").Attributes["fieldValue"].Value;
                    //部門(TrainUserDept) realValue
                    string TrainUserDeptrealValue = xmlDocqQuery.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='KY002']").Attributes["realValue"].Value;
                    string str = TrainUserDeptrealValue;
                    string[] parts = str.Split(',');
                    string result = parts[0]; // 取得逗號之前的字串
                    groupId = result;
                    //職稱(TrainUserLevel)
                    string TrainUserLevel = xmlDocqQuery.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='KY003']").Attributes["fieldValue"].Value;
                    //假別(LeaveType )
                    string LeaveType = ds1.Tables["ds1"].Rows[0]["LEACODE"].ToString().Trim();
                    //假別名稱 LeaveName
                    string LeaveName = ds1.Tables["ds1"].Rows[0]["LEACODENAME"].ToString();
                    //時數(LeaveHours)
                    string LeaveHours = ds1.Tables["ds1"].Rows[0]["LEAHOURS"].ToString();
                    //請假天數(LeaveDay)
                    string LeaveDay = ds1.Tables["ds1"].Rows[0]["LEADAYS"].ToString();
                    //出差/公出/訓練地點(TrainLocation)
                    string TrainLocation = xmlDocqQuery.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='KY004']").Attributes["fieldValue"].Value;
                    //費用(TrainFee)
                    string TrainFee = xmlDocqQuery.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='KY005']").Attributes["fieldValue"].Value;
                    //課程日期_起(TrainDateStart)
                    string TrainDateStart = ds1.Tables["ds1"].Rows[0]["NEWSTARTTIME"].ToString();
                    //課程日期_迄(TrainDateEnd)
                    string TrainDateEnd = ds1.Tables["ds1"].Rows[0]["NEWENDTIME"].ToString();

                    //課程名稱(TrainCourse)
                    string TrainType = "專業課程";
                    //外申表單單號(SourceTableNum)
                    string SourceTableNum = DOC_NBR;
                    //課程名稱(TrainCourse)
                    string TrainCourse = "";
                    //講師(TrainLector)
                    string TrainLector = "";
                    //是否轉訓(TransferStatus)
                    string TransferStatus = "";
                    //轉訓時間(TransferDate)
                    string TransferDate = "";
                    //受訓單位(TransCompany)
                    string TransCompany = "";
                    //內容概要(TrainBrief)
                    string TrainBrief = "";
                    //心得(TrainGained)
                    string TrainGained = "";
                    //對公司建議(Suggestion)
                    string Suggestion = "";


                    //建立userset子節點
                    XmlElement XMLELEUserSet = XMLDOC.CreateElement("UserSet");
                    XMLDOC.AppendChild(XMLELEUserSet);
                    XmlElement XMLELEUElement = XMLDOC.CreateElement("Element");
                    XMLELEUElement.SetAttribute("type", "user");//設定屬性
                    XMLELEUserSet.AppendChild(XMLELEUElement);
                    XmlElement XMLELEUuserId = XMLDOC.CreateElement("userId");
                    XMLELEUuserId.InnerText = fillerUserGuid;
                    XMLELEUElement.AppendChild(XMLELEUuserId);
                    XMLDOC = XMLDOC;

                    //正式的id
                    string VERSION_ID = SEARCHFORM_UOF_VERSION_ID("2001.教育訓練課程心得報告");

                    if (!string.IsNullOrEmpty(VERSION_ID))
                    {
                        Form.SetAttribute("formVersionId", VERSION_ID);
                    }


                    Form.SetAttribute("urgentLevel", "2");
                    //加入節點底下
                    xmlDoc.AppendChild(Form);

                    ////建立節點Applicant
                    XmlElement Applicant = xmlDoc.CreateElement("Applicant");
                    Applicant.SetAttribute("account", account);
                    Applicant.SetAttribute("groupId", groupId);
                    Applicant.SetAttribute("jobTitleId", jobTitleId);
                    //加入節點底下
                    Form.AppendChild(Applicant);

                    //建立節點 Comment
                    XmlElement Comment = xmlDoc.CreateElement("Comment");
                    Comment.InnerText = "申請者意見";
                    //加入至節點底下
                    Applicant.AppendChild(Comment);

                    //建立節點 FormFieldValue
                    XmlElement FormFieldValue = xmlDoc.CreateElement("FormFieldValue");
                    //加入至節點底下
                    Form.AppendChild(FormFieldValue);

                    //建立節點FieldItem
                    //ID 表單編號	
                    XmlElement FieldItem = xmlDoc.CreateElement("FieldItem");
                    FieldItem.SetAttribute("fieldId", "2001");
                    FieldItem.SetAttribute("fieldValue", "");
                    FieldItem.SetAttribute("realValue", "");
                    FieldItem.SetAttribute("enableSearch", "True");
                    FieldItem.SetAttribute("fillerName", fillerName);
                    FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                    FieldItem.SetAttribute("fillerAccount", account);
                    FieldItem.SetAttribute("fillSiteId", "");
                    //加入至members節點底下
                    FormFieldValue.AppendChild(FieldItem);

                    //建立節點FieldItem
                    //TrainUserName
                    FieldItem = xmlDoc.CreateElement("FieldItem");
                    FieldItem.SetAttribute("fieldId", "TrainUserName");
                    FieldItem.SetAttribute("fieldValue", TrainUserName);
                    FieldItem.SetAttribute("realValue", XMLDOC.InnerXml);
                    FieldItem.SetAttribute("enableSearch", "True");
                    FieldItem.SetAttribute("fillerName", fillerName);
                    FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                    FieldItem.SetAttribute("fillerAccount", account);
                    FieldItem.SetAttribute("fillSiteId", "");
                    //加入至members節點底下
                    FormFieldValue.AppendChild(FieldItem);

                    //建立節點FieldItem
                    //TrainUserDept
                    FieldItem = xmlDoc.CreateElement("FieldItem");
                    FieldItem.SetAttribute("fieldId", "TrainUserDept");
                    FieldItem.SetAttribute("fieldValue", TrainUserDeptfieldValue);
                    FieldItem.SetAttribute("realValue", TrainUserDeptrealValue);
                    FieldItem.SetAttribute("enableSearch", "True");
                    FieldItem.SetAttribute("fillerName", fillerName);
                    FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                    FieldItem.SetAttribute("fillerAccount", account);
                    FieldItem.SetAttribute("fillSiteId", "");
                    //加入至members節點底下
                    FormFieldValue.AppendChild(FieldItem);

                    //建立節點FieldItem
                    //TrainUserLevel
                    FieldItem = xmlDoc.CreateElement("FieldItem");
                    FieldItem.SetAttribute("fieldId", "TrainUserLevel");
                    FieldItem.SetAttribute("fieldValue", TrainUserLevel);
                    FieldItem.SetAttribute("realValue", "");
                    FieldItem.SetAttribute("enableSearch", "True");
                    FieldItem.SetAttribute("fillerName", fillerName);
                    FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                    FieldItem.SetAttribute("fillerAccount", account);
                    FieldItem.SetAttribute("fillSiteId", "");
                    //加入至members節點底下
                    FormFieldValue.AppendChild(FieldItem);

                    //建立節點FieldItem
                    //LeaveType
                    FieldItem = xmlDoc.CreateElement("FieldItem");
                    FieldItem.SetAttribute("fieldId", "LeaveType");
                    FieldItem.SetAttribute("fieldValue", LeaveType);
                    FieldItem.SetAttribute("realValue", "");
                    FieldItem.SetAttribute("enableSearch", "True");
                    FieldItem.SetAttribute("fillerName", fillerName);
                    FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                    FieldItem.SetAttribute("fillerAccount", account);
                    FieldItem.SetAttribute("fillSiteId", "");
                    //加入至members節點底下
                    FormFieldValue.AppendChild(FieldItem);

                    //建立節點FieldItem
                    //LeaveName
                    FieldItem = xmlDoc.CreateElement("FieldItem");
                    FieldItem.SetAttribute("fieldId", "LeaveName");
                    FieldItem.SetAttribute("fieldValue", LeaveName);
                    FieldItem.SetAttribute("realValue", "");
                    FieldItem.SetAttribute("enableSearch", "True");
                    FieldItem.SetAttribute("fillerName", fillerName);
                    FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                    FieldItem.SetAttribute("fillerAccount", account);
                    FieldItem.SetAttribute("fillSiteId", "");
                    //加入至members節點底下
                    FormFieldValue.AppendChild(FieldItem);

                    //建立節點FieldItem
                    //LeaveHours
                    FieldItem = xmlDoc.CreateElement("FieldItem");
                    FieldItem.SetAttribute("fieldId", "LeaveHours");
                    FieldItem.SetAttribute("fieldValue", LeaveHours);
                    FieldItem.SetAttribute("realValue", "");
                    FieldItem.SetAttribute("enableSearch", "True");
                    FieldItem.SetAttribute("fillerName", fillerName);
                    FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                    FieldItem.SetAttribute("fillerAccount", account);
                    FieldItem.SetAttribute("fillSiteId", "");
                    //加入至members節點底下
                    FormFieldValue.AppendChild(FieldItem);

                    //建立節點FieldItem
                    //LeaveDay
                    FieldItem = xmlDoc.CreateElement("FieldItem");
                    FieldItem.SetAttribute("fieldId", "LeaveDay");
                    FieldItem.SetAttribute("fieldValue", LeaveDay);
                    FieldItem.SetAttribute("realValue", "");
                    FieldItem.SetAttribute("enableSearch", "True");
                    FieldItem.SetAttribute("fillerName", fillerName);
                    FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                    FieldItem.SetAttribute("fillerAccount", account);
                    FieldItem.SetAttribute("fillSiteId", "");
                    //加入至members節點底下
                    FormFieldValue.AppendChild(FieldItem);

                    //建立節點FieldItem
                    //TrainLocation
                    FieldItem = xmlDoc.CreateElement("FieldItem");
                    FieldItem.SetAttribute("fieldId", "TrainLocation");
                    FieldItem.SetAttribute("fieldValue", TrainLocation);
                    FieldItem.SetAttribute("realValue", "");
                    FieldItem.SetAttribute("customValue", "@null");
                    FieldItem.SetAttribute("enableSearch", "True");
                    FieldItem.SetAttribute("fillerName", fillerName);
                    FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                    FieldItem.SetAttribute("fillerAccount", account);
                    FieldItem.SetAttribute("fillSiteId", "");
                    //加入至members節點底下
                    FormFieldValue.AppendChild(FieldItem);

                    //建立節點FieldItem
                    //TrainFee
                    FieldItem = xmlDoc.CreateElement("FieldItem");
                    FieldItem.SetAttribute("fieldId", "TrainFee");
                    FieldItem.SetAttribute("fieldValue", TrainFee);
                    FieldItem.SetAttribute("realValue", "");
                    FieldItem.SetAttribute("enableSearch", "True");
                    FieldItem.SetAttribute("fillerName", fillerName);
                    FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                    FieldItem.SetAttribute("fillerAccount", account);
                    FieldItem.SetAttribute("fillSiteId", "");
                    //加入至members節點底下
                    FormFieldValue.AppendChild(FieldItem);

                    //建立節點FieldItem
                    //TrainType
                    FieldItem = xmlDoc.CreateElement("FieldItem");
                    FieldItem.SetAttribute("fieldId", "TrainType");
                    FieldItem.SetAttribute("fieldValue", TrainType);
                    FieldItem.SetAttribute("realValue", "");
                    FieldItem.SetAttribute("enableSearch", "True");
                    FieldItem.SetAttribute("fillerName", fillerName);
                    FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                    FieldItem.SetAttribute("fillerAccount", account);
                    FieldItem.SetAttribute("fillSiteId", "");
                    //加入至members節點底下
                    FormFieldValue.AppendChild(FieldItem);

                    //建立節點FieldItem
                    //TrainDateStart
                    FieldItem = xmlDoc.CreateElement("FieldItem");
                    FieldItem.SetAttribute("fieldId", "TrainDateStart");
                    FieldItem.SetAttribute("fieldValue", TrainDateStart);
                    //FieldItem.SetAttribute("fieldValue", "2022/04/04");
                    FieldItem.SetAttribute("realValue", "");
                    FieldItem.SetAttribute("enableSearch", "True");
                    FieldItem.SetAttribute("fillerName", fillerName);
                    FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                    FieldItem.SetAttribute("fillerAccount", account);
                    FieldItem.SetAttribute("fillSiteId", "");
                    //加入至members節點底下
                    FormFieldValue.AppendChild(FieldItem);

                    //建立節點FieldItem
                    //TrainDateEnd
                    FieldItem = xmlDoc.CreateElement("FieldItem");
                    FieldItem.SetAttribute("fieldId", "TrainDateEnd");
                    FieldItem.SetAttribute("fieldValue", TrainDateEnd);
                    //FieldItem.SetAttribute("fieldValue", "2022/04/04");
                    FieldItem.SetAttribute("realValue", "");
                    FieldItem.SetAttribute("enableSearch", "True");
                    FieldItem.SetAttribute("fillerName", fillerName);
                    FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                    FieldItem.SetAttribute("fillerAccount", account);
                    FieldItem.SetAttribute("fillSiteId", "");
                    //加入至members節點底下
                    FormFieldValue.AppendChild(FieldItem);

                    //建立節點FieldItem
                    //SourceTableNum
                    FieldItem = xmlDoc.CreateElement("FieldItem");
                    FieldItem.SetAttribute("fieldId", "SourceTableNum");
                    FieldItem.SetAttribute("fieldValue", SourceTableNum);
                    FieldItem.SetAttribute("realValue", "");
                    FieldItem.SetAttribute("enableSearch", "True");
                    FieldItem.SetAttribute("fillerName", fillerName);
                    FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                    FieldItem.SetAttribute("fillerAccount", account);
                    FieldItem.SetAttribute("fillSiteId", "");
                    //加入至members節點底下
                    FormFieldValue.AppendChild(FieldItem);

                    //建立節點FieldItem
                    //TrainCourse
                    FieldItem = xmlDoc.CreateElement("FieldItem");
                    FieldItem.SetAttribute("fieldId", "TrainCourse");
                    FieldItem.SetAttribute("fieldValue", TrainCourse);
                    FieldItem.SetAttribute("realValue", "");
                    FieldItem.SetAttribute("enableSearch", "True");
                    FieldItem.SetAttribute("fillerName", fillerName);
                    FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                    FieldItem.SetAttribute("fillerAccount", account);
                    FieldItem.SetAttribute("fillSiteId", "");
                    //加入至members節點底下
                    FormFieldValue.AppendChild(FieldItem);

                    //建立節點FieldItem
                    //TrainLector
                    FieldItem = xmlDoc.CreateElement("FieldItem");
                    FieldItem.SetAttribute("fieldId", "TrainLector");
                    FieldItem.SetAttribute("fieldValue", TrainLector);
                    FieldItem.SetAttribute("realValue", "");
                    FieldItem.SetAttribute("enableSearch", "True");
                    FieldItem.SetAttribute("fillerName", fillerName);
                    FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                    FieldItem.SetAttribute("fillerAccount", account);
                    FieldItem.SetAttribute("fillSiteId", "");
                    //加入至members節點底下
                    FormFieldValue.AppendChild(FieldItem);

                    //建立節點FieldItem
                    //TransferStatus
                    FieldItem = xmlDoc.CreateElement("FieldItem");
                    FieldItem.SetAttribute("fieldId", "TransferStatus");
                    FieldItem.SetAttribute("fieldValue", TransferStatus);
                    FieldItem.SetAttribute("realValue", "");
                    FieldItem.SetAttribute("enableSearch", "True");
                    FieldItem.SetAttribute("fillerName", fillerName);
                    FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                    FieldItem.SetAttribute("fillerAccount", account);
                    FieldItem.SetAttribute("fillSiteId", "");
                    //加入至members節點底下
                    FormFieldValue.AppendChild(FieldItem);

                    //建立節點FieldItem
                    //TransferDate
                    FieldItem = xmlDoc.CreateElement("FieldItem");
                    FieldItem.SetAttribute("fieldId", "TransferDate");
                    FieldItem.SetAttribute("fieldValue", TransferDate);
                    FieldItem.SetAttribute("realValue", "");
                    FieldItem.SetAttribute("enableSearch", "True");
                    FieldItem.SetAttribute("fillerName", fillerName);
                    FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                    FieldItem.SetAttribute("fillerAccount", account);
                    FieldItem.SetAttribute("fillSiteId", "");
                    //加入至members節點底下
                    FormFieldValue.AppendChild(FieldItem);

                    //建立節點FieldItem
                    //TransCompany
                    FieldItem = xmlDoc.CreateElement("FieldItem");
                    FieldItem.SetAttribute("fieldId", "TransCompany");
                    FieldItem.SetAttribute("fieldValue", TransCompany);
                    FieldItem.SetAttribute("realValue", "");
                    FieldItem.SetAttribute("enableSearch", "True");
                    FieldItem.SetAttribute("fillerName", fillerName);
                    FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                    FieldItem.SetAttribute("fillerAccount", account);
                    FieldItem.SetAttribute("fillSiteId", "");
                    //加入至members節點底下
                    FormFieldValue.AppendChild(FieldItem);

                    //建立節點FieldItem
                    //TrainBrief
                    FieldItem = xmlDoc.CreateElement("FieldItem");
                    FieldItem.SetAttribute("fieldId", "TrainBrief");
                    FieldItem.SetAttribute("fieldValue", TrainBrief);
                    FieldItem.SetAttribute("realValue", "");
                    FieldItem.SetAttribute("enableSearch", "True");
                    FieldItem.SetAttribute("fillerName", fillerName);
                    FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                    FieldItem.SetAttribute("fillerAccount", account);
                    FieldItem.SetAttribute("fillSiteId", "");
                    //加入至members節點底下
                    FormFieldValue.AppendChild(FieldItem);

                    //建立節點FieldItem
                    //TrainGained
                    FieldItem = xmlDoc.CreateElement("FieldItem");
                    FieldItem.SetAttribute("fieldId", "TrainGained");
                    FieldItem.SetAttribute("fieldValue", TrainGained);
                    FieldItem.SetAttribute("realValue", "");
                    FieldItem.SetAttribute("enableSearch", "True");
                    FieldItem.SetAttribute("fillerName", fillerName);
                    FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                    FieldItem.SetAttribute("fillerAccount", account);
                    FieldItem.SetAttribute("fillSiteId", "");
                    //加入至members節點底下
                    FormFieldValue.AppendChild(FieldItem);

                    //建立節點FiSuggestioneldItem
                    //
                    FieldItem = xmlDoc.CreateElement("FieldItem");
                    FieldItem.SetAttribute("fieldId", "Suggestion");
                    FieldItem.SetAttribute("fieldValue", Suggestion);
                    FieldItem.SetAttribute("realValue", "");
                    FieldItem.SetAttribute("enableSearch", "True");
                    FieldItem.SetAttribute("fillerName", fillerName);
                    FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                    FieldItem.SetAttribute("fillerAccount", account);
                    FieldItem.SetAttribute("fillSiteId", "");
                    //加入至members節點底下
                    FormFieldValue.AppendChild(FieldItem);




                    ////用ADDTACK，直接啟動起單
                    //ADDTACK(Form);

                    //ADD TO DB
                    ////string connectionString = ConfigurationManager.ConnectionStrings["dbUOF"].ToString();

                    //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                    //sqlConn = new SqlConnection(connectionString);

                    //20210902密
                    Class1 TKID2 = new Class1();//用new 建立類別實體
                    SqlConnectionStringBuilder sqlsb2 = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

                    //資料庫使用者密碼解密
                    sqlsb2.Password = TKID2.Decryption(sqlsb2.Password);
                    sqlsb2.UserID = TKID2.Decryption(sqlsb2.UserID);

                    String connectionString2;
                    sqlConn = new SqlConnection(sqlsb2.ConnectionString);
                    connectionString2 = sqlConn.ConnectionString.ToString();

                    StringBuilder queryString = new StringBuilder();




                    queryString.AppendFormat(@" INSERT INTO [{0}].dbo.TB_WKF_EXTERNAL_TASK
                                            (EXTERNAL_TASK_ID,FORM_INFO,STATUS,EXTERNAL_FORM_NBR)
                                            VALUES (NEWID(),@XML,2,'{1}')
                                            ", DBNAME, EXTERNAL_FORM_NBR);

                    try
                    {
                        using (SqlConnection connection = new SqlConnection(connectionString2))
                        {

                            SqlCommand command = new SqlCommand(queryString.ToString(), connection);
                            command.Parameters.Add("@XML", SqlDbType.NVarChar).Value = Form.OuterXml;

                            command.Connection.Open();

                            int count = command.ExecuteNonQuery();

                            connection.Close();
                            connection.Dispose();

                        }
                    }
                    catch
                    {

                    }
                    finally
                    {

                    }


                }
                else
                {

                }
            }
            catch
            {

            }
            finally
            {

            }


                    

        }

        public void CHECKADDTOUOFFORBUSINESSTRIPS()
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sbSql.Clear();
                sbSqlQuery.Clear();


                //是門市督導單STORE
                //核準過TASK_RESULT='0'

                //AND [Z_SCSHR_LEAVE].DOC_NBR NOT IN (SELECT EXTERNAL_FORM_NBR FROM  [UOF].[dbo].[TB_WKF_EXTERNAL_TASK] WHERE ISNULL(EXTERNAL_FORM_NBR,'')<>'' AND EXTERNAL_FORM_NBR LIKE 'FT%')
                //AND APPLICANT NOT IN (SELECT  [APPLICANT]  FROM [UOF].[dbo].[Z_SCSHR_NOT])

                //AND [Z_SCSHR_LEAVE].DOC_NBR='FT101221000014'
                sbSql.AppendFormat(@"  
                                    SELECT *
                                    FROM [UOF].[dbo].[Z_SCSHR_LEAVE],[UOF].dbo.TB_WKF_TASK
                                    WHERE 1=1
                                    AND [Z_SCSHR_LEAVE].DOC_NBR=TB_WKF_TASK.DOC_NBR
                                    AND [Z_SCSHR_LEAVE].TASK_STATUS='2' AND [Z_SCSHR_LEAVE].TASK_RESULT='0'
                                    AND [LEACODE]='050A1'
                                    
                                    
                                    AND [Z_SCSHR_LEAVE].DOC_NBR LIKE 'FT%'
                                    AND CONVERT(datetime,STARTTIME,112)>='20220506'
                                    
                                    AND [Z_SCSHR_LEAVE].DOC_NBR NOT IN (SELECT EXTERNAL_FORM_NBR FROM  [UOF].[dbo].[TB_WKF_EXTERNAL_TASK] WHERE ISNULL(EXTERNAL_FORM_NBR,'')<>'' AND EXTERNAL_FORM_NBR LIKE 'FT%')
                                    AND APPLICANT NOT IN (SELECT  [APPLICANT]  FROM [UOF].[dbo].[Z_SCSHR_NOT])
                                    
                                 
                                    ORDER BY [Z_SCSHR_LEAVE].DOC_NBR
                                    ");


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    foreach (DataRow dr in ds1.Tables["ds1"].Rows)
                    {
                        ADDTOUOFFORBUSINESSTRIPS(dr["DOC_NBR"].ToString());
                    }

                }
                else
                {

                }

            }
            catch
            {

            }
            finally
            {
                sqlConn.Close();
            }
        }

        public void ADDTOUOFFORBUSINESSTRIPS(string DOC_NBR)
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sbSql.Clear();
                sbSqlQuery.Clear();

                //庫存數量看LA009 IN ('20004','20006','20008','20019','20020'

                sbSql.AppendFormat(@"  
                                    SELECT *
                                    ,CONVERT(nvarchar,STARTTIME,111) NEWSTARTTIME,CONVERT(nvarchar,ENDTIME,111) NEWENDTIME
                                    ,USER_GUID
                                    ,(SELECT TOP 1 GROUP_ID FROM [UOF].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=[Z_SCSHR_LEAVE].APPLICANTGUID) AS 'GROUP_ID'
                                    ,(SELECT TOP 1 TITLE_ID FROM [UOF].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=[Z_SCSHR_LEAVE].APPLICANTGUID) AS 'TITLE_ID'
                                    ,(SELECT TOP 1 NAME FROM [UOF].[dbo].[TB_EB_USER] WHERE [TB_EB_USER].USER_GUID=[Z_SCSHR_LEAVE].APPLICANTGUID) AS 'NAME'
                                    FROM [UOF].[dbo].[Z_SCSHR_LEAVE],[UOF].dbo.TB_WKF_TASK
                                    WHERE 1=1
                                    AND [Z_SCSHR_LEAVE].DOC_NBR=TB_WKF_TASK.DOC_NBR
                                    AND [Z_SCSHR_LEAVE].TASK_STATUS='2' AND [Z_SCSHR_LEAVE].TASK_RESULT='0'
                                    AND [LEACODE]='050A1'
                                  
                                    AND [Z_SCSHR_LEAVE].DOC_NBR NOT IN (SELECT EXTERNAL_FORM_NBR FROM  [UOF].[dbo].[TB_WKF_EXTERNAL_TASK] WHERE ISNULL(EXTERNAL_FORM_NBR,'')<>'' AND EXTERNAL_FORM_NBR LIKE 'FT%')
                                    AND [Z_SCSHR_LEAVE].DOC_NBR='{0}'
                                    ORDER BY [Z_SCSHR_LEAVE].DOC_NBR
                              
                                    ", DOC_NBR);


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                //新建XML文件類別
                XmlDocument Xmldoc = new XmlDocument();
                //從指定的字串載入XML文件
                Xmldoc.LoadXml(ds1.Tables["ds1"].Rows[0]["CURRENT_DOC"].ToString());
                //建立此物件，並輸入透過StringReader讀取Xmldoc中的Xmldoc字串輸出
                //XmlReader Xmlreader = XmlReader.Create(new System.IO.StringReader(Xmldoc.OuterXml));
                string KY004 = null;
                string KY005 = null;

                try
                {
                        KY004 = Xmldoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='KY004']").Attributes["fieldValue"].Value;
                }
                catch
                {
                    
                }
                try
                {
                        KY005 = Xmldoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='KY005']").Attributes["fieldValue"].Value;
                }
                catch
                {

                }
                

                

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    //建立userset xml
                    XmlDocument XMLDOC = new XmlDocument();

                    //建立表單xml
                    XmlDocument xmlDoc = new XmlDocument();
                    XmlDocument xmlDocqQuery = new XmlDocument();
                    //建立根節點
                    XmlElement Form = xmlDoc.CreateElement("Form");

                    string account = ds1.Tables["ds1"].Rows[0]["APPLICANT"].ToString().Trim();
                    string groupId = ds1.Tables["ds1"].Rows[0]["GROUP_ID"].ToString().Trim();
                    string jobTitleId = ds1.Tables["ds1"].Rows[0]["TITLE_ID"].ToString().Trim();
                    string fillerName = ds1.Tables["ds1"].Rows[0]["NAME"].ToString().Trim();
                    string fillerUserGuid = ds1.Tables["ds1"].Rows[0]["USER_GUID"].ToString().Trim();
               
                    string EXTERNAL_FORM_NBR = DOC_NBR;

                    int rowscounts = 0;

                    xmlDocqQuery.LoadXml(ds1.Tables["ds1"].Rows[0]["CURRENT_DOC"].ToString());
                    //string LeaveType = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='ID']").Attributes["fieldValue"].Value;
                    string APPLICANT = ds1.Tables["ds1"].Rows[0]["APPLICANT"].ToString();
                                    

                    //A01-01-009-01-A 出差報告單
                    //BTripUserName
                    string BTripUserName = fillerName + "(" + account + ")";                    
                    //部門(BTripUserDept) fieldValue
                    string BTripUserDeptfieldValue = xmlDocqQuery.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='KY002']").Attributes["fieldValue"].Value;
                    //部門(TBTripUserDept) realValue
                    string BTripUserDeptrealValue = xmlDocqQuery.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='KY002']").Attributes["realValue"].Value;

                    //BTripUserLevel
                    string BTripUserLevel = xmlDocqQuery.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='KY003']").Attributes["fieldValue"].Value;
                    //LeaveType
                    string LeaveType = ds1.Tables["ds1"].Rows[0]["LEACODE"].ToString().Trim();
                    //假別名稱 LeaveName
                    string LeaveName = ds1.Tables["ds1"].Rows[0]["LEACODENAME"].ToString();
                    //LeaveDay
                    string LeaveDay = ds1.Tables["ds1"].Rows[0]["LEADAYS"].ToString();
                    //BTripLocation
                    string BTripLocation = KY004;
                    //BTripCashAdvance
                    string BTripCashAdvance = KY005;
                    //SourceTableNum
                    string SourceTableNum = EXTERNAL_FORM_NBR;
                    //BTripDate
                    string BTripDate = ds1.Tables["ds1"].Rows[0]["NEWSTARTTIME"].ToString();
                    //BTripPurpose
                    string BTripPurpose = ds1.Tables["ds1"].Rows[0]["REMARK"].ToString();
                    //BTripContent
                    string BTripContent = "";
                    


                    //建立userset子節點
                    XmlElement XMLELEUserSet = XMLDOC.CreateElement("UserSet");
                    XMLDOC.AppendChild(XMLELEUserSet);
                    XmlElement XMLELEUElement = XMLDOC.CreateElement("Element");
                    XMLELEUElement.SetAttribute("type", "user");//設定屬性
                    XMLELEUserSet.AppendChild(XMLELEUElement);
                    XmlElement XMLELEUuserId = XMLDOC.CreateElement("userId");
                    XMLELEUuserId.InnerText = fillerUserGuid;
                    XMLELEUElement.AppendChild(XMLELEUuserId);
                    XMLDOC = XMLDOC;

                    //正式的id
                    string VERSION_ID = SEARCHFORM_UOF_VERSION_ID("2002.出差報告單");

                    if (!string.IsNullOrEmpty(VERSION_ID))
                    {
                        Form.SetAttribute("formVersionId", VERSION_ID);
                    }


                    Form.SetAttribute("urgentLevel", "2");
                    //加入節點底下
                    xmlDoc.AppendChild(Form);

                    ////建立節點Applicant
                    XmlElement Applicant = xmlDoc.CreateElement("Applicant");
                    Applicant.SetAttribute("account", account);
                    Applicant.SetAttribute("groupId", groupId);
                    Applicant.SetAttribute("jobTitleId", jobTitleId);
                    //加入節點底下
                    Form.AppendChild(Applicant);

                    //建立節點 Comment
                    XmlElement Comment = xmlDoc.CreateElement("Comment");
                    Comment.InnerText = "申請者意見";
                    //加入至節點底下
                    Applicant.AppendChild(Comment);

                    //建立節點 FormFieldValue
                    XmlElement FormFieldValue = xmlDoc.CreateElement("FormFieldValue");
                    //加入至節點底下
                    Form.AppendChild(FormFieldValue);

                    //建立節點FieldItem
                    //ID 表單編號	
                    XmlElement FieldItem = xmlDoc.CreateElement("FieldItem");
                    FieldItem.SetAttribute("fieldId", "2001");
                    FieldItem.SetAttribute("fieldValue", "");
                    FieldItem.SetAttribute("realValue", "");
                    FieldItem.SetAttribute("enableSearch", "True");
                    FieldItem.SetAttribute("fillerName", fillerName);
                    FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                    FieldItem.SetAttribute("fillerAccount", account);
                    FieldItem.SetAttribute("fillSiteId", "");
                    //加入至members節點底下
                    FormFieldValue.AppendChild(FieldItem);

                    //建立節點FieldItem
                    //BTripUserName
                    FieldItem = xmlDoc.CreateElement("FieldItem");
                    FieldItem.SetAttribute("fieldId", "BTripUserName");
                    FieldItem.SetAttribute("fieldValue", BTripUserName);
                    FieldItem.SetAttribute("realValue", XMLDOC.InnerXml);
                    FieldItem.SetAttribute("enableSearch", "True");
                    FieldItem.SetAttribute("fillerName", fillerName);
                    FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                    FieldItem.SetAttribute("fillerAccount", account);
                    FieldItem.SetAttribute("fillSiteId", "");
                    //加入至members節點底下
                    FormFieldValue.AppendChild(FieldItem);

                    //建立節點FieldItem
                    //BTripUserDept
                    FieldItem = xmlDoc.CreateElement("FieldItem");
                    FieldItem.SetAttribute("fieldId", "BTripUserDept");
                    FieldItem.SetAttribute("fieldValue", BTripUserDeptfieldValue);
                    FieldItem.SetAttribute("realValue", BTripUserDeptrealValue);
                    FieldItem.SetAttribute("enableSearch", "True");
                    FieldItem.SetAttribute("fillerName", fillerName);
                    FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                    FieldItem.SetAttribute("fillerAccount", account);
                    FieldItem.SetAttribute("fillSiteId", "");
                    //加入至members節點底下
                    FormFieldValue.AppendChild(FieldItem);

                    //建立節點FieldItem
                    //BTripUserLevel
                    FieldItem = xmlDoc.CreateElement("FieldItem");
                    FieldItem.SetAttribute("fieldId", "BTripUserLevel");
                    FieldItem.SetAttribute("fieldValue", BTripUserLevel);
                    FieldItem.SetAttribute("realValue", "");
                    FieldItem.SetAttribute("enableSearch", "True");
                    FieldItem.SetAttribute("fillerName", fillerName);
                    FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                    FieldItem.SetAttribute("fillerAccount", account);
                    FieldItem.SetAttribute("fillSiteId", "");
                    //加入至members節點底下
                    FormFieldValue.AppendChild(FieldItem);

                    //建立節點FieldItem
                    //LeaveType
                    FieldItem = xmlDoc.CreateElement("FieldItem");
                    FieldItem.SetAttribute("fieldId", "LeaveType");
                    FieldItem.SetAttribute("fieldValue", LeaveType);
                    FieldItem.SetAttribute("realValue", "");
                    FieldItem.SetAttribute("enableSearch", "True");
                    FieldItem.SetAttribute("fillerName", fillerName);
                    FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                    FieldItem.SetAttribute("fillerAccount", account);
                    FieldItem.SetAttribute("fillSiteId", "");
                    //加入至members節點底下
                    FormFieldValue.AppendChild(FieldItem);

                    //建立節點FieldItem
                    //LeaveName
                    FieldItem = xmlDoc.CreateElement("FieldItem");
                    FieldItem.SetAttribute("fieldId", "LeaveName");
                    FieldItem.SetAttribute("fieldValue", LeaveName);
                    FieldItem.SetAttribute("realValue", "");
                    FieldItem.SetAttribute("enableSearch", "True");
                    FieldItem.SetAttribute("fillerName", fillerName);
                    FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                    FieldItem.SetAttribute("fillerAccount", account);
                    FieldItem.SetAttribute("fillSiteId", "");
                    //加入至members節點底下
                    FormFieldValue.AppendChild(FieldItem);

                    //建立節點FieldItem
                    //LeaveHouLeaveDayrs
                    FieldItem = xmlDoc.CreateElement("FieldItem");
                    FieldItem.SetAttribute("fieldId", "LeaveDay");
                    FieldItem.SetAttribute("fieldValue", LeaveDay);
                    FieldItem.SetAttribute("realValue", "");
                    FieldItem.SetAttribute("enableSearch", "True");
                    FieldItem.SetAttribute("fillerName", fillerName);
                    FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                    FieldItem.SetAttribute("fillerAccount", account);
                    FieldItem.SetAttribute("fillSiteId", "");
                    //加入至members節點底下
                    FormFieldValue.AppendChild(FieldItem);

                    //建立節點FieldItem
                    //BTripLocation
                    FieldItem = xmlDoc.CreateElement("FieldItem");
                    FieldItem.SetAttribute("fieldId", "BTripLocation");
                    FieldItem.SetAttribute("fieldValue", BTripLocation);
                    FieldItem.SetAttribute("realValue", "");
                    FieldItem.SetAttribute("enableSearch", "True");
                    FieldItem.SetAttribute("customValue", "@null");
                    FieldItem.SetAttribute("fillerName", fillerName);
                    FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                    FieldItem.SetAttribute("fillerAccount", account);
                    FieldItem.SetAttribute("fillSiteId", "");
                    //加入至members節點底下
                    FormFieldValue.AppendChild(FieldItem);

                    //建立節點FieldItem
                    //BTripCashAdvance
                    FieldItem = xmlDoc.CreateElement("FieldItem");
                    FieldItem.SetAttribute("fieldId", "BTripCashAdvance");
                    FieldItem.SetAttribute("fieldValue", BTripCashAdvance);
                    FieldItem.SetAttribute("realValue", "");
                    FieldItem.SetAttribute("customValue", "@null");
                    FieldItem.SetAttribute("enableSearch", "True");
                    FieldItem.SetAttribute("fillerName", fillerName);
                    FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                    FieldItem.SetAttribute("fillerAccount", account);
                    FieldItem.SetAttribute("fillSiteId", "");
                    //加入至members節點底下
                    FormFieldValue.AppendChild(FieldItem);

                    //建立節點FieldItem
                    //SourceTableNum
                    FieldItem = xmlDoc.CreateElement("FieldItem");
                    FieldItem.SetAttribute("fieldId", "SourceTableNum");
                    FieldItem.SetAttribute("fieldValue", SourceTableNum);
                    FieldItem.SetAttribute("realValue", "");
                    FieldItem.SetAttribute("enableSearch", "True");
                    FieldItem.SetAttribute("fillerName", fillerName);
                    FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                    FieldItem.SetAttribute("fillerAccount", account);
                    FieldItem.SetAttribute("fillSiteId", "");
                    //加入至members節點底下
                    FormFieldValue.AppendChild(FieldItem);

                    //建立節點FieldItem
                    //BTripDate
                    FieldItem = xmlDoc.CreateElement("FieldItem");
                    FieldItem.SetAttribute("fieldId", "BTripDate");
                    FieldItem.SetAttribute("fieldValue", BTripDate);
                    FieldItem.SetAttribute("realValue", "");
                    FieldItem.SetAttribute("enableSearch", "True");
                    FieldItem.SetAttribute("fillerName", fillerName);
                    FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                    FieldItem.SetAttribute("fillerAccount", account);
                    FieldItem.SetAttribute("fillSiteId", "");
                    //加入至members節點底下
                    FormFieldValue.AppendChild(FieldItem);

                    //建立節點FieldItem
                    //BTripPurpose
                    FieldItem = xmlDoc.CreateElement("FieldItem");
                    FieldItem.SetAttribute("fieldId", "BTripPurpose");
                    FieldItem.SetAttribute("fieldValue", BTripPurpose);
                    //FieldItem.SetAttribute("fieldValue", "2022/04/04");
                    FieldItem.SetAttribute("realValue", "");
                    FieldItem.SetAttribute("enableSearch", "True");
                    FieldItem.SetAttribute("fillerName", fillerName);
                    FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                    FieldItem.SetAttribute("fillerAccount", account);
                    FieldItem.SetAttribute("fillSiteId", "");
                    //加入至members節點底下
                    FormFieldValue.AppendChild(FieldItem);

                    //建立節點FieldItem
                    //BTripContent
                    FieldItem = xmlDoc.CreateElement("FieldItem");
                    FieldItem.SetAttribute("fieldId", "BTripContent");
                    FieldItem.SetAttribute("fieldValue", BTripContent);
                    //FieldItem.SetAttribute("fieldValue", "2022/04/04");
                    FieldItem.SetAttribute("realValue", "");
                    FieldItem.SetAttribute("enableSearch", "True");
                    FieldItem.SetAttribute("fillerName", fillerName);
                    FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                    FieldItem.SetAttribute("fillerAccount", account);
                    FieldItem.SetAttribute("fillSiteId", "");
                    //加入至members節點底下
                    FormFieldValue.AppendChild(FieldItem);

                    //DataGrid
                    XmlElement FieldItemDataGrid = xmlDoc.CreateElement("DataGrid");
                    FieldItem.AppendChild(FieldItemDataGrid);



                    ////用ADDTACK，直接啟動起單
                    //ADDTACK(Form);

                    //ADD TO DB
                    ////string connectionString = ConfigurationManager.ConnectionStrings["dbUOF"].ToString();

                    //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                    //sqlConn = new SqlConnection(connectionString);

                    //20210902密
                    Class1 TKID2 = new Class1();//用new 建立類別實體
                    SqlConnectionStringBuilder sqlsb2 = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

                    //資料庫使用者密碼解密
                    sqlsb2.Password = TKID2.Decryption(sqlsb2.Password);
                    sqlsb2.UserID = TKID2.Decryption(sqlsb2.UserID);

                    String connectionString2;
                    sqlConn = new SqlConnection(sqlsb2.ConnectionString);
                    connectionString2 = sqlConn.ConnectionString.ToString();

                    StringBuilder queryString = new StringBuilder();




                    queryString.AppendFormat(@" INSERT INTO [{0}].dbo.TB_WKF_EXTERNAL_TASK
                                            (EXTERNAL_TASK_ID,FORM_INFO,STATUS,EXTERNAL_FORM_NBR)
                                            VALUES (NEWID(),@XML,2,'{1}')
                                            ", DBNAME, EXTERNAL_FORM_NBR);

                    try
                    {
                        using (SqlConnection connection = new SqlConnection(connectionString2))
                        {

                            SqlCommand command = new SqlCommand(queryString.ToString(), connection);
                            command.Parameters.Add("@XML", SqlDbType.NVarChar).Value = Form.OuterXml;

                            command.Connection.Open();

                            int count = command.ExecuteNonQuery();

                            connection.Close();
                            connection.Dispose();

                        }
                    }
                    catch
                    {

                    }
                    finally
                    {

                    }


                }
                else
                {

                }
            }
            catch
            {

            }
            finally
            {

            }




        }

        public void TEST()
        {
            



        }

        public void NEWTBUOFQC1002()
        {
            IEnumerable<DataRow> query2 = null;

            DataTable DT1 = SEARCHUOFQC1002();
            DataTable DT2 = SEARCHTKQCTBUOFQC1002();

            //找DataTable差集
            //要有相同的欄位名稱
            //找DataTable差集
            //要有相同的欄位名稱
            if (DT1.Rows.Count > 0 && DT2.Rows.Count > 0)
            {
                query2 = DT1.AsEnumerable().Except(DT2.AsEnumerable(), DataRowComparer.Default);
            }



            if (query2.Count() > 0)
            {
                //差集集合
                DataTable dt3 = query2.CopyToDataTable();

                foreach (DataRow dr in dt3.Rows)
                {
                    SEARCHUOFTB_WKF_TASKQC1002(dr["DOC_NBR"].ToString());
                }
            }


        }

        public DataTable SEARCHUOFQC1002()
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            string THISYEARS = DateTime.Now.ToString("yyyy");
            //取西元年後2位
            THISYEARS = THISYEARS.Substring(2, 2);
            //THISYEARS = "21";

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sbSql.Clear();
                sbSqlQuery.Clear();


             
                //核準過TASK_RESULT='0'
                //AND DOC_NBR  LIKE 'QC1002{0}%'

                sbSql.AppendFormat(@"  
                                    SELECT DOC_NBR
                                    FROM [UOF].dbo.TB_WKF_TASK
                                    WHERE 1=1
                                    AND TASK_STATUS='2'
                                    AND TASK_RESULT='0'
                                    AND DOC_NBR  LIKE 'QC1002%'
                                                                    

                                    ORDER BY BEGIN_TIME
                                    ");


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    return ds1.Tables["ds1"];

                }
                else
                {
                    return null;
                }

            }
            catch
            {
                return null;
            }
            finally
            {
                sqlConn.Close();
            }
        }


        public DataTable SEARCHTKQCTBUOFQC1002()
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            string THISYEARS = DateTime.Now.ToString("yyyy");
            //取西元年後2位
            THISYEARS = THISYEARS.Substring(2, 2);
            //THISYEARS = "21";

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sbSql.Clear();
                sbSqlQuery.Clear();

                //UNION ALL 
                //SELECT 'A'
                //避免回傳NULL

                sbSql.AppendFormat(@"  
                                    SELECT [QCFrm002SN] AS 'DOC_NBR'
                                    FROM [TKQC].[dbo].[TBUOFQC1002]
                                    WHERE [QCFrm002SN] LIKE 'QC1002%'
                                    UNION ALL 
                                    SELECT 'A'
                                    ");


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    return ds1.Tables["ds1"];

                }
                else
                {
                    return null;
                }

            }
            catch
            {
                return null;
            }
            finally
            {
                sqlConn.Close();
            }
        }

        //找出UOF表單的資料，將CURRENT_DOC的內容，轉成xmlDoc
        //從xmlDoc找出各節點的Attributes
        public void SEARCHUOFTB_WKF_TASKQC1002(string DOC_NBR)
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sbSql.Clear();
                sbSqlQuery.Clear();

                //庫存數量看LA009 IN ('20004','20006','20008','20019','20020'

                sbSql.AppendFormat(@"  
                                    SELECT * 
                                    FROM [UOF].DBO.TB_WKF_TASK 
                                    LEFT JOIN [UOF].[dbo].[TB_EB_USER] ON [TB_EB_USER].USER_GUID=TB_WKF_TASK.USER_GUID
                                    WHERE DOC_NBR LIKE '{0}%'
                              
                                    ", DOC_NBR);


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    string QCFrm002SN = "";
                    string QCFrm002Date = "";
                    string QCFrm002User = "";
                    string QCFrm002Dept = "";
                    string QCFrm002Rank = "";
                    string QCFrm002CUST = "";
                    string QCFrm002TEL = "";
                    string QCFrm002Add = "";
                    string QCFrm002CU = "";
                    string QCFrm002PNO = "";
                    string QCFrm002CN = "";
                    string QCFrm002RDate = "";
                    string QCFrm002PRD = "";
                    string QCFrm002PKG = "";
                    string QCFrm002MD = "";
                    string QCFrm002ED = "";
                    string QCFrm002OD = "";
                    string QCFrm002BP = "";
                    string QCFrm002Prove = "";
                    string QCFrm002Abns = "";
                    string QCFrm002Range = "";
                    string QCFrm002RP = "";
                    string QCFrm002RD = "";
                    string QCFrm002Abn = "";
                    string QCFrm002Process = "";
                    string QCFrm002QCR = "";
                    string QCFrm002ProcessR = "";
                    string QCFrm002QCC = "";
                    string QCFrm002RCAU = "";
                    string QCFrm002PRRD = "";
                    string QCFrm002Cmf = "";
                    string QCFrm002False = "";
                    string REPORTS = "";

                    string NAME = ds1.Tables["ds1"].Rows[0]["NAME"].ToString();

                    XmlDocument xmlDoc = new XmlDocument();
                    xmlDoc.LoadXml(ds1.Tables["ds1"].Rows[0]["CURRENT_DOC"].ToString());

                    //XmlNode node = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='ID']");
                    try
                    {
                        QCFrm002SN = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002SN']").Attributes["fieldValue"].Value;
                    }
                    catch
                    {

                    }
                    try
                    {
                        QCFrm002Date = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002Date']").Attributes["fieldValue"].Value;
                    }
                    catch
                    {

                    }
                    try
                    {
                        QCFrm002User = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002User']").Attributes["fieldValue"].Value;
                    }
                    catch
                    {

                    }
                    try
                    {
                        QCFrm002Dept = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002Dept']").Attributes["fieldValue"].Value;
                    }
                    catch
                    {

                    }
                    try
                    {
                        QCFrm002Rank = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002Rank']").Attributes["fieldValue"].Value;
                    }
                    catch
                    {

                    }
                    try
                    {
                        QCFrm002CUST = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002CUST']").Attributes["fieldValue"].Value;
                    }
                    catch
                    {

                    }
                    try
                    {
                        QCFrm002TEL = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002TEL']").Attributes["fieldValue"].Value;
                    }
                    catch
                    {

                    }
                    try
                    {
                        QCFrm002Add = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002Add']").Attributes["fieldValue"].Value;
                    }
                    catch
                    {

                    }
                    try
                    {
                        QCFrm002CU = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002CU']").Attributes["fieldValue"].Value;
                    }
                    catch
                    {

                    }
                    try
                    {
                        QCFrm002PNO = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002PNO']").Attributes["fieldValue"].Value;
                    }
                    catch
                    {

                    }
                    try
                    {
                        QCFrm002CN = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002CN']").Attributes["fieldValue"].Value;
                    }
                    catch
                    {

                    }
                    try
                    {
                        QCFrm002RDate = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002RDate']").Attributes["fieldValue"].Value;
                    }
                    catch
                    {

                    }
                    try
                    {
                        QCFrm002PRD = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002PRD']").Attributes["fieldValue"].Value;
                    }
                    catch
                    {

                    }
                    try
                    {
                        QCFrm002PKG = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002PKG']").Attributes["fieldValue"].Value;
                    }
                    catch
                    {

                    }
                    try
                    {
                        QCFrm002MD = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002MD']").Attributes["fieldValue"].Value;
                    }
                    catch
                    {

                    }
                    try
                    {
                        QCFrm002ED = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002ED']").Attributes["fieldValue"].Value;
                    }
                    catch
                    {

                    }
                    try
                    {
                        QCFrm002OD = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002OD']").Attributes["fieldValue"].Value;
                    }
                    catch
                    {

                    }
                    try
                    {
                        QCFrm002BP = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002BP']").Attributes["fieldValue"].Value;
                    }
                    catch
                    {

                    }
                    try
                    {
                        QCFrm002Prove = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002Prove']").Attributes["fieldValue"].Value;
                    }
                    catch
                    {

                    }
                    try
                    {
                        QCFrm002Abns = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002Abns']").Attributes["fieldValue"].Value;
                        QCFrm002Abns = QCFrm002Abns+xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002Abns']").Attributes["customValue"].Value;

                        QCFrm002Abns = QCFrm002Abns.Replace("others", "");
                    }
                    catch
                    {

                    }
                    try
                    {
                        QCFrm002Range = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002Range']").Attributes["fieldValue"].Value;
                    }
                    catch
                    {

                    }
                    try
                    {
                        QCFrm002RP = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002RP']").Attributes["fieldValue"].Value;
                    }
                    catch
                    {

                    }
                    try
                    {
                        QCFrm002RD = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002RD']").Attributes["fieldValue"].Value;
                    }
                    catch
                    {

                    }
                    try
                    {
                        QCFrm002Abn = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002Abn']").Attributes["fieldValue"].Value;
                    }
                    catch
                    {

                    }
                    try
                    {
                        QCFrm002Process = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002Process']").Attributes["fieldValue"].Value;
                    }
                    catch
                    {

                    }
                    try
                    {
                        QCFrm002QCR = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002QCR']").Attributes["fieldValue"].Value;
                    }
                    catch
                    {

                    }
                    try
                    {
                        QCFrm002ProcessR = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002ProcessR']").Attributes["fieldValue"].Value;
                    }
                    catch
                    {

                    }
                    try
                    {
                        QCFrm002QCC = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002QCC']").Attributes["fieldValue"].Value;
                    }
                    catch
                    {

                    }
                    try
                    {
                        QCFrm002RCAU = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002RCAU']").Attributes["fieldValue"].Value;
                    }
                    catch
                    {

                    }
                    try
                    {
                        QCFrm002PRRD = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002PRRD']").Attributes["fieldValue"].Value;
                    }
                    catch
                    {

                    }
                    try
                    {
                        //把html語法去除 
                        //QCFrm002Cmf = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002Cmf']").Attributes["fieldValue"].Value;

                        string fieldValue1 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002Cmf']").Attributes["fieldValue"].Value;

                        string fieldValue2 = Regex.Replace(fieldValue1, @"[\W_]+", "");
                        string fieldValue3 = Regex.Replace(fieldValue2, @"[0-9A-Za-z]+", "");

                        QCFrm002Cmf = fieldValue3;
                    }
                    catch
                    {

                    }
                    try
                    {
                        QCFrm002False = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002False']").Attributes["fieldValue"].Value;
                    }
                    catch
                    {

                    }
                    try
                    {
                        REPORTS = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='REPORTS']").Attributes["fieldValue"].Value;
                    }
                    catch
                    {

                    }
                   

                    //string QCFrm002SN = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002SN']").Attributes["fieldValue"].Value;
                    //string QCFrm002Date = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002Date']").Attributes["fieldValue"].Value;
                    //string QCFrm002User = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002User']").Attributes["fieldValue"].Value;
                    //string QCFrm002Dept = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002Dept']").Attributes["fieldValue"].Value;
                    //string QCFrm002Rank = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002Rank']").Attributes["fieldValue"].Value;
                    //string QCFrm002CUST = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002CUST']").Attributes["fieldValue"].Value;
                    //string QCFrm002TEL = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002TEL']").Attributes["fieldValue"].Value;
                    //string QCFrm002Add = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002Add']").Attributes["fieldValue"].Value;
                    //string QCFrm002CU = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002CU']").Attributes["fieldValue"].Value;
                    //string QCFrm002PNO = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002PNO']").Attributes["fieldValue"].Value;
                    //string QCFrm002CN = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002CN']").Attributes["fieldValue"].Value;
                    //string QCFrm002RDate = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002RDate']").Attributes["fieldValue"].Value;
                    //string QCFrm002PRD = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002PRD']").Attributes["fieldValue"].Value;
                    //string QCFrm002PKG = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002PKG']").Attributes["fieldValue"].Value;
                    //string QCFrm002MD = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002MD']").Attributes["fieldValue"].Value;
                    //string QCFrm002ED = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002ED']").Attributes["fieldValue"].Value;
                    //string QCFrm002OD = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002OD']").Attributes["fieldValue"].Value;
                    //string QCFrm002BP = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002BP']").Attributes["fieldValue"].Value;
                    //string QCFrm002Prove = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002Prove']").Attributes["fieldValue"].Value;
                    //string QCFrm002Abns = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002Abns']").Attributes["fieldValue"].Value;
                    //string QCFrm002Range = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002Range']").Attributes["fieldValue"].Value;
                    //string QCFrm002RP = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002RP']").Attributes["fieldValue"].Value;
                    //string QCFrm002RD = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002RD']").Attributes["fieldValue"].Value;
                    //string QCFrm002Abn = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002Abn']").Attributes["fieldValue"].Value;
                    //string QCFrm002Process = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002Process']").Attributes["fieldValue"].Value;
                    //string QCFrm002QCR = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002QCR']").Attributes["fieldValue"].Value;
                    //string QCFrm002ProcessR = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002ProcessR']").Attributes["fieldValue"].Value;
                    //string QCFrm002QCC = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002QCC']").Attributes["fieldValue"].Value;
                    //string QCFrm002RCAU = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002RCAU']").Attributes["fieldValue"].Value;
                    //string QCFrm002PRRD = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002PRRD']").Attributes["fieldValue"].Value;
                    //string QCFrm002Cmf = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002Cmf']").Attributes["fieldValue"].Value;
                    //string QCFrm002False = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002False']").Attributes["fieldValue"].Value;
                    //string REPORTS = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='REPORTS']").Attributes["fieldValue"].Value;

                    //string OK = "";
                    ADDTOTKQCTBUOFQC1002(
                                        QCFrm002SN,
                                        QCFrm002Date,
                                        QCFrm002User,
                                        QCFrm002Dept,
                                        QCFrm002Rank,
                                        QCFrm002CUST,
                                        QCFrm002TEL,
                                        QCFrm002Add,
                                        QCFrm002CU,
                                        QCFrm002PNO,
                                        QCFrm002CN,
                                        QCFrm002RDate,
                                        QCFrm002PRD,
                                        QCFrm002PKG,
                                        QCFrm002MD,
                                        QCFrm002ED,
                                        QCFrm002OD,
                                        QCFrm002BP,
                                        QCFrm002Prove,
                                        QCFrm002Abns,
                                        QCFrm002Range,
                                        QCFrm002RP,
                                        QCFrm002RD,
                                        QCFrm002Abn,
                                        QCFrm002Process,
                                        QCFrm002QCR,
                                        QCFrm002ProcessR,
                                        QCFrm002QCC,
                                        QCFrm002RCAU,
                                        QCFrm002PRRD,
                                        QCFrm002Cmf,
                                        QCFrm002False,
                                        REPORTS
                                           );


                }
                else
                {

                }

            }
            catch
            {

            }
            finally
            {
                sqlConn.Close();
            }
        }


        public void ADDTOTKQCTBUOFQC1002(
                                        string QCFrm002SN,
                                        string QCFrm002Date,
                                        string QCFrm002User,
                                        string QCFrm002Dept,
                                        string QCFrm002Rank,
                                        string QCFrm002CUST,
                                        string QCFrm002TEL,
                                        string QCFrm002Add,
                                        string QCFrm002CU,
                                        string QCFrm002PNO,
                                        string QCFrm002CN,
                                        string QCFrm002RDate,
                                        string QCFrm002PRD,
                                        string QCFrm002PKG,
                                        string QCFrm002MD,
                                        string QCFrm002ED,
                                        string QCFrm002OD,
                                        string QCFrm002BP,
                                        string QCFrm002Prove,
                                        string QCFrm002Abns,
                                        string QCFrm002Range,
                                        string QCFrm002RP,
                                        string QCFrm002RD,
                                        string QCFrm002Abn,
                                        string QCFrm002Process,
                                        string QCFrm002QCR,
                                        string QCFrm002ProcessR,
                                        string QCFrm002QCC,
                                        string QCFrm002RCAU,
                                        string QCFrm002PRRD,
                                        string QCFrm002Cmf,
                                        string QCFrm002False,
                                        string REPORTS



                                           )
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sqlConn.Close();
                sqlConn.Open();
                tran = sqlConn.BeginTransaction();

                sbSql.Clear();

                sbSql.AppendFormat(@"
                                    INSERT INTO [TKQC].[dbo].[TBUOFQC1002]
                                    (
                                    [QCFrm002SN]
                                    ,[QCFrm002Date]
                                    ,[QCFrm002User]
                                    ,[QCFrm002Dept]
                                    ,[QCFrm002Rank]
                                    ,[QCFrm002CUST]
                                    ,[QCFrm002TEL]
                                    ,[QCFrm002Add]
                                    ,[QCFrm002CU]
                                    ,[QCFrm002PNO]
                                    ,[QCFrm002CN]
                                    ,[QCFrm002RDate]
                                    ,[QCFrm002PRD]
                                    ,[QCFrm002PKG]
                                    ,[QCFrm002MD]
                                    ,[QCFrm002ED]
                                    ,[QCFrm002OD]
                                    ,[QCFrm002BP]
                                    ,[QCFrm002Prove]
                                    ,[QCFrm002Abns]
                                    ,[QCFrm002Range]
                                    ,[QCFrm002RP]
                                    ,[QCFrm002RD]
                                    ,[QCFrm002Abn]
                                    ,[QCFrm002Process]
                                    ,[QCFrm002QCR]
                                    ,[QCFrm002ProcessR]
                                    ,[QCFrm002QCC]
                                    ,[QCFrm002RCAU]
                                    ,[QCFrm002PRRD]
                                    ,[QCFrm002Cmf]
                                    ,[QCFrm002False]
                                    ,[REPORTS]
                                    )
                                    VALUES(
                                    '{0}'
                                    ,'{1}'
                                    ,'{2}'
                                    ,'{3}'
                                    ,'{4}'
                                    ,'{5}'
                                    ,'{6}'
                                    ,'{7}'
                                    ,'{8}'
                                    ,'{9}'
                                    ,'{10}'
                                    ,'{11}'
                                    ,'{12}'
                                    ,'{13}'
                                    ,'{14}'
                                    ,'{15}'
                                    ,'{16}'
                                    ,'{17}'
                                    ,'{18}'
                                    ,'{19}'
                                    ,'{20}'
                                    ,'{21}'
                                    ,'{22}'
                                    ,'{23}'
                                    ,'{24}'
                                    ,'{25}'
                                    ,'{26}'
                                    ,'{27}'
                                    ,'{28}'
                                    ,'{29}'
                                    ,'{30}'
                                    ,'{31}'
                                    ,'{32}'

                                    )
                                    "
                                    , QCFrm002SN
                                    , QCFrm002Date
                                    , QCFrm002User
                                    , QCFrm002Dept
                                    , QCFrm002Rank
                                    , QCFrm002CUST
                                    , QCFrm002TEL
                                    , QCFrm002Add
                                    , QCFrm002CU
                                    , QCFrm002PNO
                                    , QCFrm002CN
                                    , QCFrm002RDate
                                    , QCFrm002PRD
                                    , QCFrm002PKG
                                    , QCFrm002MD
                                    , QCFrm002ED
                                    , QCFrm002OD
                                    , QCFrm002BP
                                    , QCFrm002Prove
                                    , QCFrm002Abns
                                    , QCFrm002Range
                                    , QCFrm002RP
                                    , QCFrm002RD
                                    , QCFrm002Abn
                                    , QCFrm002Process
                                    , QCFrm002QCR
                                    , QCFrm002ProcessR
                                    , QCFrm002QCC
                                    , QCFrm002RCAU
                                    , QCFrm002PRRD
                                    , QCFrm002Cmf
                                    , QCFrm002False
                                    , REPORTS
                                    );

                cmd.Connection = sqlConn;
                cmd.CommandTimeout = 60;
                cmd.CommandText = sbSql.ToString();
                cmd.Transaction = tran;
                result = cmd.ExecuteNonQuery();

                if (result == 0)
                {
                    tran.Rollback();    //交易取消
                }
                else
                {
                    tran.Commit();      //執行交易  
                }

            }
            catch
            {

            }

            finally
            {
                sqlConn.Close();
            }
        }

        public void NEWPURTCPURTD()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp22"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                DataSet ds1 = new DataSet();
                SqlDataAdapter adapter1 = new SqlDataAdapter();
                SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();

                sbSql.Clear();
                sbSqlQuery.Clear();


                sbSql.AppendFormat(@" 
                                    SELECT TC001,TC002,UDF01
                                    FROM [TK].dbo.PURTC
                                    WHERE TC014='N' AND (UDF01 IN ('Y','y') )
                                    ORDER BY TC001,TC002
                                    ");

                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");


                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    foreach (DataRow dr in ds1.Tables["ds1"].Rows)
                    {
                        ADD_PURTCPURTD_TB_WKF_EXTERNAL_TASK(dr["TC001"].ToString().Trim(), dr["TC002"].ToString().Trim());
                    }


                    //ADDTB_WKF_EXTERNAL_TASK("A311", "20210415007");
                }
                else
                {

                }

            }
            catch
            {

            }
            finally
            {
                sqlConn.Close();
            }

            UPDATEPURTCUDF01();
        }

        public void ADD_PURTCPURTD_TB_WKF_EXTERNAL_TASK(string TC001,string TC002)
        {

            DataTable DT = SEARCHPURTCPURTD(TC001, TC002);
            DataTable DTUPFDEP = SEARCHUOFDEP(DT.Rows[0]["TC011"].ToString());

            string account = DT.Rows[0]["TC011"].ToString();
            string groupId = DT.Rows[0]["GROUP_ID"].ToString();
            string jobTitleId = DT.Rows[0]["TITLE_ID"].ToString();
            string fillerName = DT.Rows[0]["MV002"].ToString();
            string fillerUserGuid = DT.Rows[0]["USER_GUID"].ToString();

            string DEPNAME = DTUPFDEP.Rows[0]["DEPNAME"].ToString();
            string DEPNO = DTUPFDEP.Rows[0]["DEPNO"].ToString();

            string EXTERNAL_FORM_NBR = DT.Rows[0]["TC001"].ToString().Trim() + DT.Rows[0]["TC002"].ToString().Trim();

            int rowscounts = 0;

            XmlDocument xmlDoc = new XmlDocument();
            //建立根節點
            XmlElement Form = xmlDoc.CreateElement("Form");

            //正式的id
            string PURTCID = SEARCHFORM_UOF_VERSION_ID("PUR40.採購單");

            if (!string.IsNullOrEmpty(PURTCID))
            {
                Form.SetAttribute("formVersionId", PURTCID);
            }


            Form.SetAttribute("urgentLevel", "2");
            //加入節點底下
            xmlDoc.AppendChild(Form);

            ////建立節點Applicant
            XmlElement Applicant = xmlDoc.CreateElement("Applicant");
            Applicant.SetAttribute("account", account);
            Applicant.SetAttribute("groupId", groupId);
            Applicant.SetAttribute("jobTitleId", jobTitleId);
            //加入節點底下
            Form.AppendChild(Applicant);

            //建立節點 Comment
            XmlElement Comment = xmlDoc.CreateElement("Comment");
            Comment.InnerText = "申請者意見";
            //加入至節點底下
            Applicant.AppendChild(Comment);

            //建立節點 FormFieldValue
            XmlElement FormFieldValue = xmlDoc.CreateElement("FormFieldValue");
            //加入至節點底下
            Form.AppendChild(FormFieldValue);

            //建立節點FieldItem
            //ID 表單編號	
            XmlElement FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "ID");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC001	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC001");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC001"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC002	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC002");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC002"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC003	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC003");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC003"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC004	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC004");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC004"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC004NAME	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC004NAME");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC004NAME"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC010	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC010");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC010"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC005	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC005");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC005"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC006	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC006");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC006"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC027	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC027");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC027"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC008	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC008");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC008"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC028	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC028");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC028"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC009	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC009");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC009"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC018	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC018");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC018"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC018NAME	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC018NAME");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC018NAME"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //	TC011
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC011");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC011"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC011NAME	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC011NAME");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC011NAME"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC037	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC037");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC037"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC038	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC038");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC038"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC021	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC021");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC021"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //PURTD
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "PURTD");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點 DataGrid
            XmlElement DataGrid = xmlDoc.CreateElement("DataGrid");
            //DataGrid 加入至 TB 節點底下
            XmlNode PURTD = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='PURTD']");
            PURTD.AppendChild(DataGrid);


            foreach (DataRow od in DT.Rows)
            {
                // 新增 Row
                XmlElement Row = xmlDoc.CreateElement("Row");
                Row.SetAttribute("order", (rowscounts).ToString());

                //Row	TD003
                XmlElement Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD003");
                Cell.SetAttribute("fieldValue", od["TD003"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB005
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB005");
                Cell.SetAttribute("fieldValue", od["TB005"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD004
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD004");
                Cell.SetAttribute("fieldValue", od["TD004"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD005
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD005");
                Cell.SetAttribute("fieldValue", od["TD005"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD006
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD006");
                Cell.SetAttribute("fieldValue", od["TD006"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD007
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD007");
                Cell.SetAttribute("fieldValue", od["TD007"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD008
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD008");
                Cell.SetAttribute("fieldValue", od["TD008"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD009
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD009");
                Cell.SetAttribute("fieldValue", od["TD009"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD010
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD010");
                Cell.SetAttribute("fieldValue", od["TD010"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD011
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD011");
                Cell.SetAttribute("fieldValue", od["TD011"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD012
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD012");
                Cell.SetAttribute("fieldValue", od["TD012"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD015
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD015");
                Cell.SetAttribute("fieldValue", od["TD015"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD019
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD019");
                Cell.SetAttribute("fieldValue", od["TD019"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD026
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD026");
                Cell.SetAttribute("fieldValue", od["TD026"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD027
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD027");
                Cell.SetAttribute("fieldValue", od["TD027"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);               

                //Row	TD028
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD028");
                Cell.SetAttribute("fieldValue", od["TD028"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD014
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD014");
                Cell.SetAttribute("fieldValue", od["TD014"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);


                rowscounts = rowscounts + 1;

                XmlNode DataGridS = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='PURTD']/DataGrid");
                DataGridS.AppendChild(Row);

            }


            ////用ADDTACK，直接啟動起單
            //ADDTACK(Form);

            //ADD TO DB
            ////string connectionString = ConfigurationManager.ConnectionStrings["dbUOF"].ToString();

            //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
            //sqlConn = new SqlConnection(connectionString);

            //20210902密
            Class1 TKID = new Class1();//用new 建立類別實體
            SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

            //資料庫使用者密碼解密
            sqlsb.Password = TKID.Decryption(sqlsb.Password);
            sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

            String connectionString;
            sqlConn = new SqlConnection(sqlsb.ConnectionString);
            connectionString = sqlConn.ConnectionString.ToString();

            StringBuilder queryString = new StringBuilder();




            queryString.AppendFormat(@" INSERT INTO [{0}].dbo.TB_WKF_EXTERNAL_TASK
                                         (EXTERNAL_TASK_ID,FORM_INFO,STATUS,EXTERNAL_FORM_NBR)
                                        VALUES (NEWID(),@XML,2,'{1}')
                                        ", DBNAME, EXTERNAL_FORM_NBR);

            try
            {
                using (SqlConnection connection = new SqlConnection(connectionString))
                {

                    SqlCommand command = new SqlCommand(queryString.ToString(), connection);
                    command.Parameters.Add("@XML", SqlDbType.NVarChar).Value = Form.OuterXml;

                    command.Connection.Open();

                    int count = command.ExecuteNonQuery();

                    connection.Close();
                    connection.Dispose();

                }
            }
            catch
            {

            }
            finally
            {

            }



        }
        public void UPDATEPURTCUDF01()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sqlConn.Close();
                sqlConn.Open();
                tran = sqlConn.BeginTransaction();

                sbSql.Clear();

                sbSql.AppendFormat(@"
                                    UPDATE  [TK].dbo.PURTC  
                                    SET UDF01 = 'UOF'
                                    WHERE TC014 = 'N' AND (UDF01 IN ('Y','y') )
                                    ");

                cmd.Connection = sqlConn;
                cmd.CommandTimeout = 60;
                cmd.CommandText = sbSql.ToString();
                cmd.Transaction = tran;
                result = cmd.ExecuteNonQuery();

                if (result == 0)
                {
                    tran.Rollback();    //交易取消
                }
                else
                {
                    tran.Commit();      //執行交易  
                }

            }
            catch
            {

            }

            finally
            {
                sqlConn.Close();
            }
        }


        public DataTable SEARCHPURTCPURTD(string TC001, string TC002)
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);


                sbSql.Clear();
                sbSqlQuery.Clear();

                //庫存數量看LA009 IN ('20004','20006','20008','20019','20020'

                sbSql.AppendFormat(@"  
                                   SELECT *
                                    ,USER_GUID,NAME
                                    ,(SELECT TOP 1 GROUP_ID FROM [192.168.1.223].[UOF].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'GROUP_ID'
                                    ,(SELECT TOP 1 TITLE_ID FROM [192.168.1.223].[UOF].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'TITLE_ID'
                                    ,SUMLA011
                                    ,MA002 AS TC004NAME
                                    ,(CASE WHEN TC018='1' THEN '1.應稅內含'  WHEN TC018='2' THEN '2.應稅外加'  WHEN TC018='3' THEN '3.零稅率' WHEN TC018='4' THEN '4.免稅' WHEN TC018='9' THEN '9.不計稅' END) AS TC018NAME
                                    ,NAME AS TC011NAME
                                    FROM 
                                    (
                                    SELECT 
                                    [PURTC].[COMPANY]
                                    ,[PURTC].[CREATOR]
                                    ,[PURTC].[USR_GROUP]
                                    ,[PURTC].[CREATE_DATE]
                                    ,[PURTC].[MODIFIER]
                                    ,[PURTC].[MODI_DATE]
                                    ,[PURTC].[FLAG]
                                    ,[PURTC].[CREATE_TIME]
                                    ,[PURTC].[MODI_TIME]
                                    ,[PURTC].[TRANS_TYPE]
                                    ,[PURTC].[TRANS_NAME]
                                    ,[PURTC].[sync_date]
                                    ,[PURTC].[sync_time]
                                    ,[PURTC].[sync_mark]
                                    ,[PURTC].[sync_count]
                                    ,[PURTC].[DataUser]
                                    ,[PURTC].[DataGroup]
                                    ,[PURTC].[TC001]
                                    ,[PURTC].[TC002]
                                    ,[PURTC].[TC003]
                                    ,[PURTC].[TC004]
                                    ,[PURTC].[TC005]
                                    ,[PURTC].[TC006]
                                    ,[PURTC].[TC007]
                                    ,[PURTC].[TC008]
                                    ,[PURTC].[TC009]
                                    ,[PURTC].[TC010]
                                    ,[PURTC].[TC011]
                                    ,[PURTC].[TC012]
                                    ,[PURTC].[TC013]
                                    ,[PURTC].[TC014]
                                    ,[PURTC].[TC015]
                                    ,[PURTC].[TC016]
                                    ,[PURTC].[TC017]
                                    ,[PURTC].[TC018]
                                    ,[PURTC].[TC019]
                                    ,[PURTC].[TC020]
                                    ,[PURTC].[TC021]
                                    ,[PURTC].[TC022]
                                    ,[PURTC].[TC023]
                                    ,[PURTC].[TC024]
                                    ,[PURTC].[TC025]
                                    ,[PURTC].[TC026]
                                    ,[PURTC].[TC027]
                                    ,[PURTC].[TC028]
                                    ,[PURTC].[TC029]
                                    ,[PURTC].[TC030]
                                    ,[PURTC].[TC031]
                                    ,[PURTC].[TC032]
                                    ,[PURTC].[TC033]
                                    ,[PURTC].[TC034]
                                    ,[PURTC].[TC035]
                                    ,[PURTC].[TC036]
                                    ,[PURTC].[TC037]
                                    ,[PURTC].[TC038]
                                    ,[PURTC].[TC039]
                                    ,[PURTC].[TC040]
                                    ,[PURTC].[TC041]
                                    ,[PURTC].[TC042]
                                    ,[PURTC].[TC043]
                                    ,[PURTC].[TC044]
                                    ,[PURTC].[TC045]
                                    ,[PURTC].[TC046]
                                    ,[PURTC].[TC047]
                                    ,[PURTC].[TC048]
                                    ,[PURTC].[TC049]
                                    ,[PURTC].[TC050]
                                    ,[PURTC].[TC051]
                                    ,[PURTC].[TC052]
                                    ,[PURTC].[TC053]
                                    ,[PURTC].[TC054]
                                    ,[PURTC].[TC055]
                                    ,[PURTC].[TC056]
                                    ,[PURTC].[TC057]
                                    ,[PURTC].[TC058]
                                    ,[PURTC].[TC059]
                                    ,[PURTC].[TC060]
                                    ,[PURTC].[TC061]
                                    ,[PURTC].[TC062]
                                    ,[PURTC].[TC063]
                                    ,[PURTC].[TC064]
                                    ,[PURTC].[TC065]
                                    ,[PURTC].[TC066]
                                    ,[PURTC].[TC067]
                                    ,[PURTC].[TC068]
                                    ,[PURTC].[TC069]
                                    ,[PURTC].[TC070]
                                    ,[PURTC].[TC071]
                                    ,[PURTC].[TC072]
                                    ,[PURTC].[TC073]
                                    ,[PURTC].[TC074]
                                    ,[PURTC].[TC075]
                                    ,[PURTC].[TC076]
                                    ,[PURTC].[TC077]
                                    ,[PURTC].[TC078]
                                    ,[PURTC].[TC079]
                                    ,[PURTC].[TC080]
                                    ,[PURTC].[UDF01] AS PURTCUDF01
                                    ,[PURTC].[UDF02] AS PURTCUDF02
                                    ,[PURTC].[UDF03] AS PURTCUDF03
                                    ,[PURTC].[UDF04] AS PURTCUDF04
                                    ,[PURTC].[UDF05] AS PURTCUDF05
                                    ,[PURTC].[UDF06] AS PURTCUDF06
                                    ,[PURTC].[UDF07] AS PURTCUDF07
                                    ,[PURTC].[UDF08] AS PURTCUDF08
                                    ,[PURTC].[UDF09] AS PURTCUDF09
                                    ,[PURTC].[UDF10] AS PURTCUDF10
                                    ,[PURTD].[TD001]
                                    ,[PURTD].[TD002]
                                    ,[PURTD].[TD003]
                                    ,[PURTD].[TD004]
                                    ,[PURTD].[TD005]
                                    ,[PURTD].[TD006]
                                    ,[PURTD].[TD007]
                                    ,[PURTD].[TD008]
                                    ,[PURTD].[TD009]
                                    ,[PURTD].[TD010]
                                    ,[PURTD].[TD011]
                                    ,[PURTD].[TD012]
                                    ,[PURTD].[TD013]
                                    ,[PURTD].[TD014]
                                    ,[PURTD].[TD015]
                                    ,[PURTD].[TD016]
                                    ,[PURTD].[TD017]
                                    ,[PURTD].[TD018]
                                    ,[PURTD].[TD019]
                                    ,[PURTD].[TD020]
                                    ,[PURTD].[TD021]
                                    ,[PURTD].[TD022]
                                    ,[PURTD].[TD023]
                                    ,[PURTD].[TD024]
                                    ,[PURTD].[TD025]
                                    ,[PURTD].[TD026]
                                    ,[PURTD].[TD027]
                                    ,[PURTD].[TD028]
                                    ,[PURTD].[TD029]
                                    ,[PURTD].[TD030]
                                    ,[PURTD].[TD031]
                                    ,[PURTD].[TD032]
                                    ,[PURTD].[TD033]
                                    ,[PURTD].[TD034]
                                    ,[PURTD].[TD035]
                                    ,[PURTD].[TD036]
                                    ,[PURTD].[TD037]
                                    ,[PURTD].[TD038]
                                    ,[PURTD].[TD039]
                                    ,[PURTD].[TD040]
                                    ,[PURTD].[TD041]
                                    ,[PURTD].[TD042]
                                    ,[PURTD].[TD043]
                                    ,[PURTD].[TD044]
                                    ,[PURTD].[TD045]
                                    ,[PURTD].[TD046]
                                    ,[PURTD].[TD047]
                                    ,[PURTD].[TD048]
                                    ,[PURTD].[TD049]
                                    ,[PURTD].[TD050]
                                    ,[PURTD].[TD051]
                                    ,[PURTD].[TD052]
                                    ,[PURTD].[TD053]
                                    ,[PURTD].[TD054]
                                    ,[PURTD].[TD055]
                                    ,[PURTD].[TD056]
                                    ,[PURTD].[TD057]
                                    ,[PURTD].[TD058]
                                    ,[PURTD].[TD059]
                                    ,[PURTD].[TD060]
                                    ,[PURTD].[TD061]
                                    ,[PURTD].[TD062]
                                    ,[PURTD].[TD063]
                                    ,[PURTD].[TD064]
                                    ,[PURTD].[TD065]
                                    ,[PURTD].[TD066]
                                    ,[PURTD].[TD067]
                                    ,[PURTD].[TD068]
                                    ,[PURTD].[TD069]
                                    ,[PURTD].[TD070]
                                    ,[PURTD].[TD071]
                                    ,[PURTD].[TD072]
                                    ,[PURTD].[TD073]
                                    ,[PURTD].[TD074]
                                    ,[PURTD].[TD075]
                                    ,[PURTD].[TD076]
                                    ,[PURTD].[TD077]
                                    ,[PURTD].[TD078]
                                    ,[PURTD].[TD079]
                                    ,[PURTD].[TD080]
                                    ,[PURTD].[TD081]
                                    ,[PURTD].[TD082]
                                    ,[PURTD].[TD083]
                                    ,[PURTD].[TD084]
                                    ,[PURTD].[TD085]
                                    ,[PURTD].[TD086]
                                    ,[PURTD].[TD087]
                                    ,[PURTD].[TD088]
                                    ,[PURTD].[TD089]
                                    ,[PURTD].[TD090]
                                    ,[PURTD].[TD091]
                                    ,[PURTD].[TD092]
                                    ,[PURTD].[TD093]
                                    ,[PURTD].[TD094]
                                    ,[PURTD].[TD095]
                                    ,[PURTD].[UDF01]  AS PURTDUDF01
                                    ,[PURTD].[UDF02]  AS PURTDUDF02
                                    ,[PURTD].[UDF03]  AS PURTDUDF03
                                    ,[PURTD].[UDF04]  AS PURTDUDF04
                                    ,[PURTD].[UDF05]  AS PURTDUDF05
                                    ,[PURTD].[UDF06]  AS PURTDUDF06
                                    ,[PURTD].[UDF07]  AS PURTDUDF07
                                    ,[PURTD].[UDF08]  AS PURTDUDF08
                                    ,[PURTD].[UDF09]  AS PURTDUDF09
                                    ,[PURTD].[UDF10]  AS PURTDUDF10
                                    ,[TB_EB_USER].USER_GUID,NAME
                                    ,(SELECT TOP 1 MV002 FROM [TK].dbo.CMSMV WHERE MV001=TC011) AS 'MV002'
                                    ,(SELECT TOP 1 MA002 FROM [TK].dbo.PURMA WHERE MA001=TC004) AS 'MA002'
                                    ,(SELECT ISNULL(SUM(LA005*LA011),0) FROM [TK].dbo.INVLA WITH(NOLOCK) WHERE LA001=TD004 AND LA009 IN ('20004','20006','20008','20019','20020')) AS SUMLA011
                                    ,(SELECT TOP 1 CONVERT(NVARCHAR,TB005)+',需求日:'+CONVERT(NVARCHAR,TB011)+',數量:'+CONVERT(NVARCHAR,TB009)+' '+CONVERT(NVARCHAR,TB007) FROM  [TK].dbo.PURTB WHERE TB001=[PURTD].TD026 AND TB002=[PURTD].TD027 AND TB003=[PURTD].TD028) AS TB005
                                    FROM [TK].dbo.PURTD,[TK].dbo.PURTC
                                    LEFT JOIN [192.168.1.223].[UOF].[dbo].[TB_EB_USER] ON [TB_EB_USER].ACCOUNT= TC011 COLLATE Chinese_Taiwan_Stroke_BIN
                                    WHERE TC001=TD001 AND TC002=TD002
                                    AND TC001='{0}' AND TC002='{1}'
                                    ) AS TEMP
                              
                                    ", TC001, TC002);


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    return ds1.Tables["ds1"];

                }
                else
                {
                    return null;
                }

            }
            catch
            {
                return null;
            }
            finally
            {
                sqlConn.Close();
            }
        }

        public void NEWPURTEPURTF()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp22"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                DataSet ds1 = new DataSet();
                SqlDataAdapter adapter1 = new SqlDataAdapter();
                SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();

                sbSql.Clear();
                sbSqlQuery.Clear();


                sbSql.AppendFormat(@" 
                                    SELECT TE001,TE002,TE003,UDF01
                                    FROM [TK].dbo.PURTE
                                    WHERE TE017='N' AND (UDF01 IN ('Y','y') )
                                    ORDER BY TE001,TE002,TE003
                                    ");

                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");


                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    foreach (DataRow dr in ds1.Tables["ds1"].Rows)
                    {
                        ADD_PURTEPURTF_TB_WKF_EXTERNAL_TASK(dr["TE001"].ToString().Trim(), dr["TE002"].ToString().Trim(), dr["TE003"].ToString().Trim());
                    }


                    //ADDTB_WKF_EXTERNAL_TASK("A311", "20210415007");
                }
                else
                {

                }

            }
            catch
            {

            }
            finally
            {
                sqlConn.Close();
            }

            UPDATEPURTEUDF01();
        }

        public void ADD_PURTEPURTF_TB_WKF_EXTERNAL_TASK(string TE001,string TE002,string TE003)
        {

            DataTable DT = SEARCHPURTEPURTF(TE001, TE002, TE003);
            DataTable DTUPFDEP = SEARCHUOFDEP(DT.Rows[0]["TE037"].ToString());

            string account = DT.Rows[0]["TE037"].ToString();
            string groupId = DT.Rows[0]["GROUP_ID"].ToString();
            string jobTitleId = DT.Rows[0]["TITLE_ID"].ToString();
            string fillerName = DT.Rows[0]["MV002"].ToString();
            string fillerUserGuid = DT.Rows[0]["USER_GUID"].ToString();

            string DEPNAME = DTUPFDEP.Rows[0]["DEPNAME"].ToString();
            string DEPNO = DTUPFDEP.Rows[0]["DEPNO"].ToString();

            string EXTERNAL_FORM_NBR = DT.Rows[0]["TE001"].ToString().Trim() + DT.Rows[0]["TE002"].ToString().Trim() + DT.Rows[0]["TE003"].ToString().Trim();

            int rowscounts = 0;

            XmlDocument xmlDoc = new XmlDocument();
            //建立根節點
            XmlElement Form = xmlDoc.CreateElement("Form");

            //正式的id
            string PURTEID = SEARCHFORM_UOF_VERSION_ID("PUR50.採購變更單");

            if (!string.IsNullOrEmpty(PURTEID))
            {
                Form.SetAttribute("formVersionId", PURTEID);
            }


            Form.SetAttribute("urgentLevel", "2");
            //加入節點底下
            xmlDoc.AppendChild(Form);

            ////建立節點Applicant
            XmlElement Applicant = xmlDoc.CreateElement("Applicant");
            Applicant.SetAttribute("account", account);
            Applicant.SetAttribute("groupId", groupId);
            Applicant.SetAttribute("jobTitleId", jobTitleId);
            //加入節點底下
            Form.AppendChild(Applicant);

            //建立節點 Comment
            XmlElement Comment = xmlDoc.CreateElement("Comment");
            Comment.InnerText = "申請者意見";
            //加入至節點底下
            Applicant.AppendChild(Comment);

            //建立節點 FormFieldValue
            XmlElement FormFieldValue = xmlDoc.CreateElement("FormFieldValue");
            //加入至節點底下
            Form.AppendChild(FormFieldValue);

            //建立節點FieldItem
            //ID 表單編號	
            XmlElement FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "ID");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TE001	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TE001");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TE001"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TE002	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TE002");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TE002"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TE003	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TE003");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TE003"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TE004
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TE004");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TE004"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TE006
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TE006");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TE006"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TE005
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TE005");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TE005"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TE005NAME
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TE005NAME");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TE005NAME"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TE007
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TE007");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TE007"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TE008
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TE008");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TE008"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TE009
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TE009");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TE009"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TE010
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TE010");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TE010"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TE023
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TE023");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TE023"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TE011
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TE011");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TE011"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TE012
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TE012");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TE012"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TE015
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TE015");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TE015"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TE018
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TE018");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TE018"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TE018NAME
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TE018NAME");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TE018NAME"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TE019
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TE019");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TE019"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TE020
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TE020");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TE020"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TE022
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TE022");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TE022"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TE024
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TE024");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TE024"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TE027
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TE027");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TE027"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TE037
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TE037");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TE037"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TE037NAME
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TE037NAME");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TE037NAME"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TE043
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TE043");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TE043"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TE045
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TE045");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TE045"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TE046
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TE046");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TE046"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);







            //建立節點FieldItem
            //PURTF
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "PURTF");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點 DataGrid
            XmlElement DataGrid = xmlDoc.CreateElement("DataGrid");
            //DataGrid 加入至 TB 節點底下
            XmlNode PURTD = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='PURTF']");
            PURTD.AppendChild(DataGrid);


            foreach (DataRow od in DT.Rows)
            {
                // 新增 Row
                XmlElement Row = xmlDoc.CreateElement("Row");
                Row.SetAttribute("order", (rowscounts).ToString());

                //Row	TF004
                XmlElement Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TF004");
                Cell.SetAttribute("fieldValue", od["TF004"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TF005
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TF005");
                Cell.SetAttribute("fieldValue", od["TF005"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TF006
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TF006");
                Cell.SetAttribute("fieldValue", od["TF006"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TF007
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TF007");
                Cell.SetAttribute("fieldValue", od["TF007"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TF008
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TF008");
                Cell.SetAttribute("fieldValue", od["TF008"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TF009
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TF009");
                Cell.SetAttribute("fieldValue", od["TF009"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TF010
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TF010");
                Cell.SetAttribute("fieldValue", od["TF010"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TF011
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TF011");
                Cell.SetAttribute("fieldValue", od["TF011"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TF012
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TF012");
                Cell.SetAttribute("fieldValue", od["TF012"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TF013
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TF013");
                Cell.SetAttribute("fieldValue", od["TF013"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TF014
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TF014");
                Cell.SetAttribute("fieldValue", od["TF014"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TF015
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TF015");
                Cell.SetAttribute("fieldValue", od["TF015"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TF017
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TF017");
                Cell.SetAttribute("fieldValue", od["TF017"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TF018
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TF018");
                Cell.SetAttribute("fieldValue", od["TF018"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TF021
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TF021");
                Cell.SetAttribute("fieldValue", od["TF021"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TF022
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TF022");
                Cell.SetAttribute("fieldValue", od["TF022"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TF030
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TF030");
                Cell.SetAttribute("fieldValue", od["TF030"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);


                rowscounts = rowscounts + 1;

                XmlNode DataGridS = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='PURTF']/DataGrid");
                DataGridS.AppendChild(Row);

            }


            ////用ADDTACK，直接啟動起單
            //ADDTACK(Form);

            //ADD TO DB
            ////string connectionString = ConfigurationManager.ConnectionStrings["dbUOF"].ToString();

            //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
            //sqlConn = new SqlConnection(connectionString);

            //20210902密
            Class1 TKID = new Class1();//用new 建立類別實體
            SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

            //資料庫使用者密碼解密
            sqlsb.Password = TKID.Decryption(sqlsb.Password);
            sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

            String connectionString;
            sqlConn = new SqlConnection(sqlsb.ConnectionString);
            connectionString = sqlConn.ConnectionString.ToString();

            StringBuilder queryString = new StringBuilder();




            queryString.AppendFormat(@" INSERT INTO [{0}].dbo.TB_WKF_EXTERNAL_TASK
                                         (EXTERNAL_TASK_ID,FORM_INFO,STATUS,EXTERNAL_FORM_NBR)
                                        VALUES (NEWID(),@XML,2,'{1}')
                                        ", DBNAME, EXTERNAL_FORM_NBR);

            try
            {
                using (SqlConnection connection = new SqlConnection(connectionString))
                {

                    SqlCommand command = new SqlCommand(queryString.ToString(), connection);
                    command.Parameters.Add("@XML", SqlDbType.NVarChar).Value = Form.OuterXml;

                    command.Connection.Open();

                    int count = command.ExecuteNonQuery();

                    connection.Close();
                    connection.Dispose();

                }
            }
            catch
            {

            }
            finally
            {

            }
        }

        public DataTable SEARCHPURTEPURTF(string TE001,string TE002,string TE003)
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);


                sbSql.Clear();
                sbSqlQuery.Clear();

                //庫存數量看LA009 IN ('20004','20006','20008','20019','20020'

                sbSql.AppendFormat(@"  
                                   SELECT *
                                    ,USER_GUID,NAME
                                    ,(SELECT TOP 1 GROUP_ID FROM [192.168.1.223].[UOF].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'GROUP_ID'
                                    ,(SELECT TOP 1 TITLE_ID FROM [192.168.1.223].[UOF].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'TITLE_ID'
                                    ,SUMLA011
                                    ,MA002 AS TE005NAME
                                    ,(CASE WHEN TE018='1' THEN '1.應稅內含'  WHEN TE018='2' THEN '2.應稅外加'  WHEN TE018='3' THEN '3.零稅率' WHEN TE018='4' THEN '4.免稅' WHEN TE018='9' THEN '9.不計稅' END) AS TE018NAME
                                    ,NAME AS TE037NAME
                                    FROM 
                                    (
                                    SELECT 
                                    [PURTE].[COMPANY]
                                    ,[PURTE].[CREATOR]
                                    ,[PURTE].[USR_GROUP]
                                    ,[PURTE].[CREATE_DATE]
                                    ,[PURTE].[MODIFIER]
                                    ,[PURTE].[MODI_DATE]
                                    ,[PURTE].[FLAG]
                                    ,[PURTE].[CREATE_TIME]
                                    ,[PURTE].[MODI_TIME]
                                    ,[PURTE].[TRANS_TYPE]
                                    ,[PURTE].[TRANS_NAME]
                                    ,[PURTE].[sync_date]
                                    ,[PURTE].[sync_time]
                                    ,[PURTE].[sync_mark]
                                    ,[PURTE].[sync_count]
                                    ,[PURTE].[DataUser]
                                    ,[PURTE].[DataGroup]
                                    ,[PURTE].[TE001]
                                    ,[PURTE].[TE002]
                                    ,[PURTE].[TE003]
                                    ,[PURTE].[TE004]
                                    ,[PURTE].[TE005]
                                    ,[PURTE].[TE006]
                                    ,[PURTE].[TE007]
                                    ,[PURTE].[TE008]
                                    ,[PURTE].[TE009]
                                    ,[PURTE].[TE010]
                                    ,[PURTE].[TE011]
                                    ,[PURTE].[TE012]
                                    ,[PURTE].[TE013]
                                    ,[PURTE].[TE014]
                                    ,[PURTE].[TE015]
                                    ,[PURTE].[TE016]
                                    ,[PURTE].[TE017]
                                    ,[PURTE].[TE018]
                                    ,[PURTE].[TE019]
                                    ,[PURTE].[TE020]
                                    ,[PURTE].[TE021]
                                    ,[PURTE].[TE022]
                                    ,[PURTE].[TE023]
                                    ,[PURTE].[TE024]
                                    ,[PURTE].[TE025]
                                    ,[PURTE].[TE026]
                                    ,[PURTE].[TE027]
                                    ,[PURTE].[TE028]
                                    ,[PURTE].[TE029]
                                    ,[PURTE].[TE030]
                                    ,[PURTE].[TE031]
                                    ,[PURTE].[TE032]
                                    ,[PURTE].[TE033]
                                    ,[PURTE].[TE034]
                                    ,[PURTE].[TE035]
                                    ,[PURTE].[TE036]
                                    ,[PURTE].[TE037]
                                    ,[PURTE].[TE038]
                                    ,[PURTE].[TE039]
                                    ,[PURTE].[TE040]
                                    ,[PURTE].[TE041]
                                    ,[PURTE].[TE042]
                                    ,[PURTE].[TE043]
                                    ,[PURTE].[TE045]
                                    ,[PURTE].[TE046]
                                    ,[PURTE].[TE047]
                                    ,[PURTE].[TE048]
                                    ,[PURTE].[TE103]
                                    ,[PURTE].[TE107]
                                    ,[PURTE].[TE108]
                                    ,[PURTE].[TE109]
                                    ,[PURTE].[TE110]
                                    ,[PURTE].[TE113]
                                    ,[PURTE].[TE114]
                                    ,[PURTE].[TE115]
                                    ,[PURTE].[TE118]
                                    ,[PURTE].[TE119]
                                    ,[PURTE].[TE120]
                                    ,[PURTE].[TE121]
                                    ,[PURTE].[TE122]
                                    ,[PURTE].[TE123]
                                    ,[PURTE].[TE124]
                                    ,[PURTE].[TE125]
                                    ,[PURTE].[TE134]
                                    ,[PURTE].[TE135]
                                    ,[PURTE].[TE136]
                                    ,[PURTE].[TE137]
                                    ,[PURTE].[TE138]
                                    ,[PURTE].[TE139]
                                    ,[PURTE].[TE140]
                                    ,[PURTE].[TE141]
                                    ,[PURTE].[TE142]
                                    ,[PURTE].[TE143]
                                    ,[PURTE].[TE144]
                                    ,[PURTE].[TE145]
                                    ,[PURTE].[TE146]
                                    ,[PURTE].[TE147]
                                    ,[PURTE].[TE148]
                                    ,[PURTE].[TE149]
                                    ,[PURTE].[TE150]
                                    ,[PURTE].[TE151]
                                    ,[PURTE].[TE152]
                                    ,[PURTE].[TE153]
                                    ,[PURTE].[TE154]
                                    ,[PURTE].[TE155]
                                    ,[PURTE].[TE156]
                                    ,[PURTE].[TE157]
                                    ,[PURTE].[TE158]
                                    ,[PURTE].[TE159]
                                    ,[PURTE].[TE160]
                                    ,[PURTE].[TE161]
                                    ,[PURTE].[TE162]
                                    ,[PURTE].[UDF01]  AS 'PURTFUDE01'
                                    ,[PURTE].[UDF02]  AS 'PURTFUDE02'
                                    ,[PURTE].[UDF03]  AS 'PURTFUDE03'
                                    ,[PURTE].[UDF04]  AS 'PURTFUDE04'
                                    ,[PURTE].[UDF05]  AS 'PURTFUDE05'
                                    ,[PURTE].[UDF06]  AS 'PURTFUDE06'
                                    ,[PURTE].[UDF07]  AS 'PURTFUDE07'
                                    ,[PURTE].[UDF08]  AS 'PURTFUDE08'
                                    ,[PURTE].[UDF09]  AS 'PURTFUDE09'
                                    ,[PURTE].[UDF10]  AS 'PURTFUDE10'
                                    ,[PURTF].[TF001]
                                    ,[PURTF].[TF002]
                                    ,[PURTF].[TF003]
                                    ,[PURTF].[TF004]
                                    ,[PURTF].[TF005]
                                    ,[PURTF].[TF006]
                                    ,[PURTF].[TF007]
                                    ,[PURTF].[TF008]
                                    ,[PURTF].[TF009]
                                    ,[PURTF].[TF010]
                                    ,[PURTF].[TF011]
                                    ,[PURTF].[TF012]
                                    ,[PURTF].[TF013]
                                    ,[PURTF].[TF014]
                                    ,[PURTF].[TF015]
                                    ,[PURTF].[TF016]
                                    ,[PURTF].[TF017]
                                    ,[PURTF].[TF018]
                                    ,[PURTF].[TF019]
                                    ,[PURTF].[TF020]
                                    ,[PURTF].[TF021]
                                    ,[PURTF].[TF022]
                                    ,[PURTF].[TF023]
                                    ,[PURTF].[TF024]
                                    ,[PURTF].[TF025]
                                    ,[PURTF].[TF026]
                                    ,[PURTF].[TF027]
                                    ,[PURTF].[TF028]
                                    ,[PURTF].[TF029]
                                    ,[PURTF].[TF030]
                                    ,[PURTF].[TF031]
                                    ,[PURTF].[TF032]
                                    ,[PURTF].[TF033]
                                    ,[PURTF].[TF034]
                                    ,[PURTF].[TF035]
                                    ,[PURTF].[TF036]
                                    ,[PURTF].[TF037]
                                    ,[PURTF].[TF038]
                                    ,[PURTF].[TF039]
                                    ,[PURTF].[TF040]
                                    ,[PURTF].[TF041]
                                    ,[PURTF].[TF104]
                                    ,[PURTF].[TF105]
                                    ,[PURTF].[TF106]
                                    ,[PURTF].[TF107]
                                    ,[PURTF].[TF108]
                                    ,[PURTF].[TF109]
                                    ,[PURTF].[TF110]
                                    ,[PURTF].[TF111]
                                    ,[PURTF].[TF112]
                                    ,[PURTF].[TF113]
                                    ,[PURTF].[TF114]
                                    ,[PURTF].[TF118]
                                    ,[PURTF].[TF119]
                                    ,[PURTF].[TF120]
                                    ,[PURTF].[TF121]
                                    ,[PURTF].[TF122]
                                    ,[PURTF].[TF123]
                                    ,[PURTF].[TF124]
                                    ,[PURTF].[TF125]
                                    ,[PURTF].[TF126]
                                    ,[PURTF].[TF127]
                                    ,[PURTF].[TF128]
                                    ,[PURTF].[TF129]
                                    ,[PURTF].[TF130]
                                    ,[PURTF].[TF131]
                                    ,[PURTF].[TF132]
                                    ,[PURTF].[TF133]
                                    ,[PURTF].[TF134]
                                    ,[PURTF].[TF135]
                                    ,[PURTF].[TF136]
                                    ,[PURTF].[TF137]
                                    ,[PURTF].[TF138]
                                    ,[PURTF].[TF139]
                                    ,[PURTF].[TF140]
                                    ,[PURTF].[TF141]
                                    ,[PURTF].[TF142]
                                    ,[PURTF].[TF143]
                                    ,[PURTF].[TF144]
                                    ,[PURTF].[TF145]
                                    ,[PURTF].[TF146]
                                    ,[PURTF].[TF147]
                                    ,[PURTF].[TF148]
                                    ,[PURTF].[TF149]
                                    ,[PURTF].[TF150]
                                    ,[PURTF].[TF151]
                                    ,[PURTF].[TF152]
                                    ,[PURTF].[TF153]
                                    ,[PURTF].[TF154]
                                    ,[PURTF].[TF155]
                                    ,[PURTF].[TF156]
                                    ,[PURTF].[TF157]
                                    ,[PURTF].[TF158]
                                    ,[PURTF].[TF159]
                                    ,[PURTF].[TF160]
                                    ,[PURTF].[TF161]
                                    ,[PURTF].[TF162]
                                    ,[PURTF].[TF163]
                                    ,[PURTF].[TF164]
                                    ,[PURTF].[TF165]
                                    ,[PURTF].[TF166]
                                    ,[PURTF].[TF167]
                                    ,[PURTF].[TF168]
                                    ,[PURTF].[TF169]
                                    ,[PURTF].[TF170]
                                    ,[PURTF].[TF171]
                                    ,[PURTF].[TF172]
                                    ,[PURTF].[TF173]
                                    ,[PURTF].[UDF01] AS 'PURTFUDF01'
                                    ,[PURTF].[UDF02] AS 'PURTFUDF02'
                                    ,[PURTF].[UDF03] AS 'PURTFUDF03'
                                    ,[PURTF].[UDF04] AS 'PURTFUDF04'
                                    ,[PURTF].[UDF05] AS 'PURTFUDF05'
                                    ,[PURTF].[UDF06] AS 'PURTFUDF06'
                                    ,[PURTF].[UDF07] AS 'PURTFUDF07'
                                    ,[PURTF].[UDF08] AS 'PURTFUDF08'
                                    ,[PURTF].[UDF09] AS 'PURTFUDF09'
                                    ,[PURTF].[UDF10] AS 'PURTFUDF10'
                                    ,[TB_EB_USER].USER_GUID,NAME
                                    ,(SELECT TOP 1 MV002 FROM [TK].dbo.CMSMV WHERE MV001=TE037) AS 'MV002'
                                    ,(SELECT TOP 1 MA002 FROM [TK].dbo.PURMA WHERE MA001=TE005) AS 'MA002'
                                    ,(SELECT ISNULL(SUM(LA005*LA011),0) FROM [TK].dbo.INVLA WITH(NOLOCK) WHERE LA001=TF005 AND LA009 IN ('20004','20006','20008','20019','20020')) AS SUMLA011
                                    FROM [TK].dbo.PURTF,[TK].dbo.PURTE
                                    LEFT JOIN [192.168.1.223].[UOF].[dbo].[TB_EB_USER] ON [TB_EB_USER].ACCOUNT= TE037 COLLATE Chinese_Taiwan_Stroke_BIN
                                    WHERE TE001=TF001 AND TE002=TF002 AND TE003=TF003
                                    AND TE001='{0}' AND TE002='{1}' AND TE003='{2}'
                                    ) AS TEMP
                              
                                    ", TE001, TE002, TE003);


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    return ds1.Tables["ds1"];

                }
                else
                {
                    return null;
                }

            }
            catch
            {
                return null;
            }
            finally
            {
                sqlConn.Close();
            }
        }

        public void UPDATEPURTEUDF01()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sqlConn.Close();
                sqlConn.Open();
                tran = sqlConn.BeginTransaction();

                sbSql.Clear();

                sbSql.AppendFormat(@"
                                    UPDATE  [TK].dbo.PURTE  
                                    SET UDF01 = 'UOF'
                                    WHERE TE017 = 'N' AND (UDF01 IN ('Y','y') )
                                    ");

                cmd.Connection = sqlConn;
                cmd.CommandTimeout = 60;
                cmd.CommandText = sbSql.ToString();
                cmd.Transaction = tran;
                result = cmd.ExecuteNonQuery();

                if (result == 0)
                {
                    tran.Rollback();    //交易取消
                }
                else
                {
                    tran.Commit();      //執行交易  
                }

            }
            catch
            {

            }

            finally
            {
                sqlConn.Close();
            }
        }

        public void  ADDTOERPTKMOCUE()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sqlConn.Close();
                sqlConn.Open();
                tran = sqlConn.BeginTransaction();

                sbSql.Clear();

                sbSql.AppendFormat(@"                                   
                                    INSERT INTO [TK].dbo.MOCUE
                                    (

                                    [COMPANY]
                                    ,[CREATOR]
                                    ,[USR_GROUP]
                                    ,[CREATE_DATE]
                                    ,[MODIFIER]
                                    ,[MODI_DATE]
                                    ,[FLAG]
                                    ,[CREATE_TIME]
                                    ,[MODI_TIME]
                                    ,[TRANS_TYPE]
                                    ,[TRANS_NAME]
                                    ,[sync_date]
                                    ,[sync_time]
                                    ,[sync_mark]
                                    ,[sync_count]
                                    ,[DataUser]
                                    ,[DataGroup]
                                    ,[UE001]
                                    ,[UE002]
                                    ,[UE003]
                                    ,[UE004]
                                    ,[UE005]
                                    ,[UE006]
                                    ,[UE007]
                                    ,[UE008]
                                    ,[UE009]
                                    ,[UE010]
                                    ,[UE011]
                                    ,[UE012]
                                    ,[UE013]
                                    ,[UE014]
                                    ,[UE015]
                                    ,[UE016]
                                    ,[UE017]
                                    ,[UE018]
                                    ,[UE019]
                                    ,[UE020]
                                    ,[UE021]
                                    ,[UE022]
                                    ,[UDF01]
                                    ,[UDF02]
                                    ,[UDF03]
                                    ,[UDF04]
                                    ,[UDF05]
                                    ,[UDF06]
                                    ,[UDF07]
                                    ,[UDF08]
                                    ,[UDF09]
                                    ,[UDF10]
                                    )
                                    SELECT 
                                    '' AS [COMPANY]
                                    ,'' AS [CREATOR]
                                    ,'' AS [USR_GROUP]
                                    ,'' AS [CREATE_DATE]
                                    ,'' AS [MODIFIER]
                                    ,'' AS [MODI_DATE]
                                    ,0 AS [FLAG]
                                    ,'' AS [CREATE_TIME]
                                    ,'' AS [MODI_TIME]
                                    ,'' AS [TRANS_TYPE]
                                    ,'' AS [TRANS_NAME]
                                    ,'' AS [sync_date]
                                    ,'' AS [sync_time]
                                    ,'' AS [sync_mark]
                                    ,0 AS [sync_count]
                                    ,'' AS [DataUser]
                                    ,'' AS [DataGroup]
                                    ,MOCTA.TA001 AS [UE001]
                                    ,MOCTA.TA002 AS [UE002]
                                    ,RIGHT('0000'+CAST(row_number() OVER(PARTITION BY MOCTA.TA001+MOCTA.TA002 ORDER BY MOCTA.TA001+MOCTA.TA002) AS nvarchar(50)),4)    AS [UE003]
                                    ,[MOCMANULINE].COPTD001 AS [UE004]
                                    ,[MOCMANULINE].COPTD002 AS [UE005]
                                    ,[MOCMANULINE].COPTD003 AS [UE006]
                                    ,'' AS [UE007]
                                    ,'0' AS [UE008]
                                    ,'' AS [UE009]
                                    ,'' AS [UE010]
                                    ,'' AS [UE011]
                                    ,'' AS [UE012]
                                    ,'' AS [UE013]
                                    ,'' AS [UE014]
                                    ,'' AS [UE015]
                                    ,'' AS [UE016]
                                    ,'' AS [UE017]
                                    ,0 AS [UE018]
                                    ,0 AS [UE019]
                                    ,0 AS [UE020]
                                    ,'' AS [UE021]
                                    ,'' AS [UE022]
                                    ,'' AS [UDF01]
                                    ,'' AS [UDF02]
                                    ,'' AS [UDF03]
                                    ,'' AS [UDF04]
                                    ,'' AS [UDF05]
                                    ,0 AS [UDF06]
                                    ,0 AS [UDF07]
                                    ,0 AS [UDF08]
                                    ,0 AS [UDF09]
                                    ,0 AS [UDF10]
                                    FROM [TKMOC].[dbo].[MOCMANULINEMERGE],[TKMOC].[dbo].[MOCMANULINE],[TK].dbo.MOCTA
                                    WHERE 1=1
                                    AND [MOCMANULINEMERGE].[SID]=[MOCMANULINE].ID
                                    AND [MOCMANULINEMERGE].[NO]=MOCTA.TA033
                                    AND MOCTA.TA013 IN ('Y')
                                    AND MOCTA.TA033 LIKE CONVERT(nvarchar,DATEPART(YEAR,GETDATE()))+'%'
                                    AND MOCTA.TA001+MOCTA.TA002 NOT IN 
                                    (
                                    SELECT UE001+UE002
                                    FROM [TK].dbo.MOCUE
                                    GROUP BY UE001+UE002
                                    )
                                    ORDER BY MOCTA.TA001,MOCTA.TA002,MOCTA.TA033,[MOCMANULINE].COPTD001,[MOCMANULINE].COPTD002,[MOCMANULINE].COPTD003


                                    ");

                cmd.Connection = sqlConn;
                cmd.CommandTimeout = 60;
                cmd.CommandText = sbSql.ToString();
                cmd.Transaction = tran;
                result = cmd.ExecuteNonQuery();

                if (result == 0)
                {
                    tran.Rollback();    //交易取消
                }
                else
                {
                    tran.Commit();      //執行交易  
                }

            }
            catch
            {

            }

            finally
            {
                sqlConn.Close();
            }
        }

        public void ADDTKQCQCPURTH()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sqlConn.Close();
                sqlConn.Open();
                tran = sqlConn.BeginTransaction();

                sbSql.Clear();

                sbSql.AppendFormat(@"                                   
                                   
                                        INSERT INTO [TKQC].[dbo].[QCPURTH]
                                        (

                                        [TH001]
                                        ,[TH002]
                                        ,[TH003]
                                        ,[TG003]
                                        ,[TG005]
                                        ,[TG021]
                                        ,[TH004]
                                        ,[TH005]
                                        ,[TH006]
                                        ,[TH007]
                                        ,[TH008]
                                        ,[TH009]
                                        ,[SAMPLENUMS]
                                        ,[CARNO]
                                        ,[CHECKITEMS]
                                        ,[COA]
                                        ,[INNERCHECKS]
                                        ,[INUMS]
                                        ,[BACKNUMS]
                                        ,[DATES]
                                        ,[QCMAN]
                                        ,[COMMENTS]
                                        ,[ISIN]

                                        )

                                        SELECT 
                                        [TH001]
                                        ,[TH002]
                                        ,[TH003]
                                        ,[TG003]
                                        ,[TG005]
                                        ,[TG021]
                                        ,[TH004]
                                        ,[TH005]
                                        ,[TH006]
                                        ,[TH007]
                                        ,[TH008]
                                        ,[TH009]
                                        ,0 [SAMPLENUMS]
                                        ,'' [CARNO]
                                        ,'' [CHECKITEMS]
                                        ,'' [COA]
                                        ,'' [INNERCHECKS]
                                        ,0 [INUMS]
                                        ,0 [BACKNUMS]
                                        ,'' [DATES]
                                        ,'' [QCMAN]
                                        ,'' [COMMENTS]
                                        ,'N' [ISIN]
                                        FROM [TK].dbo.PURTG,[TK].dbo.PURTH
                                        WHERE TG001=TH001 AND TG002=TH002
                                        AND TG003>='20220726'
                                        AND TH001+TH002+TH003 NOT IN (SELECT  TH001+TH002+TH003 FROM  [TKQC].[dbo].[QCPURTH])

                                    ");

                cmd.Connection = sqlConn;
                cmd.CommandTimeout = 60;
                cmd.CommandText = sbSql.ToString();
                cmd.Transaction = tran;
                result = cmd.ExecuteNonQuery();

                if (result == 0)
                {
                    tran.Rollback();    //交易取消
                }
                else
                {
                    tran.Commit();      //執行交易  
                }

            }
            catch
            {

            }

            finally
            {
                sqlConn.Close();
            }
        }

        public void NEWPURTLPURTMPURTN()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp22"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                DataSet ds1 = new DataSet();
                SqlDataAdapter adapter1 = new SqlDataAdapter();
                SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();

                sbSql.Clear();
                sbSqlQuery.Clear();

                //TL006='N' AND (UDF01 IN ('Y','y') ) 
                sbSql.AppendFormat(@" 
                                    SELECT TL001,TL002,UDF01
                                    FROM [TK].dbo.PURTL
                                    WHERE UDF01='Y'
                                    ORDER BY TL001,TL002


                                    ");

                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");


                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    foreach (DataRow dr in ds1.Tables["ds1"].Rows)
                    {
                        ADD_PURTLPURTMPURTN_TB_WKF_EXTERNAL_TASK(dr["TL001"].ToString().Trim(), dr["TL002"].ToString().Trim());
                    }
                    
                }
                else
                {

                }

            }
            catch
            {

            }
            finally
            {
                sqlConn.Close();
            }

            UPDATEPURTLUDF01();
        }

      

        public void ADD_PURTLPURTMPURTN_TB_WKF_EXTERNAL_TASK(string TL001, string TL002)
        {

            DataTable DT = SEARCHPURTLPURTMPURTN(TL001, TL002);
            DataTable DTUPFDEP = SEARCHUOFDEP(DT.Rows[0]["CREATOR"].ToString());

            string account = DT.Rows[0]["CREATOR"].ToString();
            string groupId = DT.Rows[0]["GROUP_ID"].ToString();
            string jobTitleId = DT.Rows[0]["TITLE_ID"].ToString();
            string fillerName = DT.Rows[0]["MV002"].ToString();
            string fillerUserGuid = DT.Rows[0]["USER_GUID"].ToString();

            string DEPNAME = DTUPFDEP.Rows[0]["DEPNAME"].ToString();
            string DEPNO = DTUPFDEP.Rows[0]["DEPNO"].ToString();

            string EXTERNAL_FORM_NBR = DT.Rows[0]["TL001"].ToString().Trim() + DT.Rows[0]["TL002"].ToString().Trim();

            int rowscounts = 0;

            XmlDocument xmlDoc = new XmlDocument();
            //建立根節點
            XmlElement Form = xmlDoc.CreateElement("Form");

            //正式的id
            string PURTLID = SEARCHFORM_UOF_VERSION_ID("PUR30..採購核價單");

            if (!string.IsNullOrEmpty(PURTLID))
            {
                Form.SetAttribute("formVersionId", PURTLID);
            }


            Form.SetAttribute("urgentLevel", "2");
            //加入節點底下
            xmlDoc.AppendChild(Form);

            ////建立節點Applicant
            XmlElement Applicant = xmlDoc.CreateElement("Applicant");
            Applicant.SetAttribute("account", account);
            Applicant.SetAttribute("groupId", groupId);
            Applicant.SetAttribute("jobTitleId", jobTitleId);
            //加入節點底下
            Form.AppendChild(Applicant);

            //建立節點 Comment
            XmlElement Comment = xmlDoc.CreateElement("Comment");
            Comment.InnerText = "申請者意見";
            //加入至節點底下
            Applicant.AppendChild(Comment);

            //建立節點 FormFieldValue
            XmlElement FormFieldValue = xmlDoc.CreateElement("FormFieldValue");
            //加入至節點底下
            Form.AppendChild(FormFieldValue);

            //建立節點FieldItem
            //ID 表單編號	
            XmlElement FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "ID");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TL001	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TL001");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TL001"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TL002	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TL002");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TL002"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TL003	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TL003");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TL003"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TL004	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TL004");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TL004"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TL004NAME	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TL004NAME");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TL004NAME"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TL005	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TL005");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TL005"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TL008	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TL008");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TL008"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TL007	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TL007");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TL007"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);


            //建立節點FieldItem
            //PURTM
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "PURTM");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點 DataGrid
            XmlElement DataGrid = xmlDoc.CreateElement("DataGrid");
            //DataGrid 加入至 TB 節點底下
            XmlNode PURTD = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='PURTM']");
            PURTD.AppendChild(DataGrid);


            foreach (DataRow od in DT.Rows)
            {
                // 新增 Row
                XmlElement Row = xmlDoc.CreateElement("Row");
                Row.SetAttribute("order", (rowscounts).ToString());

                //Row	TM003
                XmlElement Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TM003");
                Cell.SetAttribute("fieldValue", od["TM003"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TM004
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TM004");
                Cell.SetAttribute("fieldValue", od["TM004"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TM005
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TM005");
                Cell.SetAttribute("fieldValue", od["TM005"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TM006
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TM006");
                Cell.SetAttribute("fieldValue", od["TM006"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TM009
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TM009");
                Cell.SetAttribute("fieldValue", od["TM009"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TM010
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TM010");
                Cell.SetAttribute("fieldValue", od["TM010"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TM014
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TM014");
                Cell.SetAttribute("fieldValue", od["TM014"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TM015
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TM015");
                Cell.SetAttribute("fieldValue", od["TM015"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TN007
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TN007");
                Cell.SetAttribute("fieldValue", od["TN007"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TN008
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TN008");
                Cell.SetAttribute("fieldValue", od["TN008"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TM012
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TM012");
                Cell.SetAttribute("fieldValue", od["TM012"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);



                rowscounts = rowscounts + 1;

                //DataGrid PURTM
                XmlNode DataGridS = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='PURTM']/DataGrid");
                DataGridS.AppendChild(Row);

            }


            ////用ADDTACK，直接啟動起單
            //ADDTACK(Form);

            //ADD TO DB
            ////string connectionString = ConfigurationManager.ConnectionStrings["dbUOF"].ToString();

            //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
            //sqlConn = new SqlConnection(connectionString);

            //20210902密
            Class1 TKID = new Class1();//用new 建立類別實體
            SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

            //資料庫使用者密碼解密
            sqlsb.Password = TKID.Decryption(sqlsb.Password);
            sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

            String connectionString;
            sqlConn = new SqlConnection(sqlsb.ConnectionString);
            connectionString = sqlConn.ConnectionString.ToString();

            StringBuilder queryString = new StringBuilder();




            queryString.AppendFormat(@" INSERT INTO [{0}].dbo.TB_WKF_EXTERNAL_TASK
                                         (EXTERNAL_TASK_ID,FORM_INFO,STATUS,EXTERNAL_FORM_NBR)
                                        VALUES (NEWID(),@XML,2,'{1}')
                                        ", DBNAME, EXTERNAL_FORM_NBR);

            try
            {
                using (SqlConnection connection = new SqlConnection(connectionString))
                {

                    SqlCommand command = new SqlCommand(queryString.ToString(), connection);
                    command.Parameters.Add("@XML", SqlDbType.NVarChar).Value = Form.OuterXml;

                    command.Connection.Open();

                    int count = command.ExecuteNonQuery();

                    connection.Close();
                    connection.Dispose();

                }
            }
            catch
            {

            }
            finally
            {

            }
        }

        public DataTable SEARCHPURTLPURTMPURTN(string TL001, string TL002)
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);


                sbSql.Clear();
                sbSqlQuery.Clear();

                //庫存數量看LA009 IN ('20004','20006','20008','20019','20020'

                sbSql.AppendFormat(@"  
                                    SELECT *
                                    ,USER_GUID,NAME
                                    ,(SELECT TOP 1 GROUP_ID FROM [192.168.1.223].[UOF].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'GROUP_ID'
                                    ,(SELECT TOP 1 TITLE_ID FROM [192.168.1.223].[UOF].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'TITLE_ID'
                                    ,MA002 AS TL004NAME
                                    ,NAME AS NAME
                                    FROM 
                                    (
                                    SELECT 

                                    PURMA.MA001
                                    ,PURMA.MA002
                                    ,PURMA.MA003

                                    ,PURTL.TL001
                                    ,PURTL.TL002
                                    ,PURTL.TL003
                                    ,PURTL.TL004
                                    ,PURTL.TL005
                                    ,PURTL.TL006
                                    ,PURTL.TL007
                                    ,PURTL.TL008
                                    ,PURTL.TL010
                                    ,PURTM.TM003
                                    ,PURTM.TM004
                                    ,PURTM.TM005
                                    ,PURTM.TM006
                                    ,PURTM.TM007
                                    ,PURTM.TM008
                                    ,PURTM.TM009
                                    ,PURTM.TM010
                                    ,PURTM.TM012
                                    ,PURTM.TM014
                                    ,PURTM.TM015

                                    ,PURTN.TN007
                                    ,PURTN.TN008
                                    ,PURTN.TN009
                                    
                                    ,PURTM.CREATOR
                                    ,[TB_EB_USER].USER_GUID,NAME
                                    ,(SELECT TOP 1 MV002 FROM [TK].dbo.CMSMV WHERE MV001=PURTM.CREATOR) AS 'MV002'

                                    FROM [TK].dbo.PURMA,[TK].dbo.PURTL,[TK].dbo.PURTM
                                    LEFT JOIN [192.168.1.223].[UOF].[dbo].[TB_EB_USER] ON [TB_EB_USER].ACCOUNT= PURTM.CREATOR COLLATE Chinese_Taiwan_Stroke_BIN
                                    LEFT JOIN [TK].dbo.PURTN ON TM001=TN001 AND TM002=TN002 AND TM003=TN003
                                    WHERE 1=1
                                    AND MA001=TL004
                                    AND TL001=TM001 AND TL002=TM002
                                    AND TL001='{0}' AND TL002='{1}'

                                    ) AS TEMP
                              
                                    ", TL001, TL002);


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    return ds1.Tables["ds1"];

                }
                else
                {
                    return null;
                }

            }
            catch
            {
                return null;
            }
            finally
            {
                sqlConn.Close();
            }
        }

        public void UPDATEPURTLUDF01()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dbconn"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sqlConn.Close();
                sqlConn.Open();
                tran = sqlConn.BeginTransaction();

                sbSql.Clear();

                sbSql.AppendFormat(@"
                                    UPDATE  [TK].dbo.PURTL 
                                    SET UDF01 = 'UOF'
                                    WHERE  UDF01='Y'                                             

                                    ");

                cmd.Connection = sqlConn;
                cmd.CommandTimeout = 60;
                cmd.CommandText = sbSql.ToString();
                cmd.Transaction = tran;
                result = cmd.ExecuteNonQuery();

                if (result == 0)
                {
                    tran.Rollback();    //交易取消
                }
                else
                {
                    tran.Commit();      //執行交易  
                }

            }
            catch
            {

            }

            finally
            {
                sqlConn.Close();
            }
        }

        public void ADDPURMBPURMC()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dbconn"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sqlConn.Close();
                sqlConn.Open();
                tran = sqlConn.BeginTransaction();

                sbSql.Clear();

                sbSql.AppendFormat(@"
                                 
                                    ");

                cmd.Connection = sqlConn;
                cmd.CommandTimeout = 60;
                cmd.CommandText = sbSql.ToString();
                cmd.Transaction = tran;
                result = cmd.ExecuteNonQuery();

                if (result == 0)
                {
                    tran.Rollback();    //交易取消
                }
                else
                {
                    tran.Commit();      //執行交易  
                }

            }
            catch
            {

            }

            finally
            {
                sqlConn.Close();
            }
        }


        public void NEWPURTGPURTH()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp22"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                DataSet ds1 = new DataSet();
                SqlDataAdapter adapter1 = new SqlDataAdapter();
                SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();

                sbSql.Clear();
                sbSqlQuery.Clear();

                //TL006='N' AND (UDF01 IN ('Y','y') ) 
                sbSql.AppendFormat(@" 
                                    SELECT TG001,TG002,UDF01
                                    FROM [TK].dbo.PURTG
                                    WHERE TG013='N'
                                    AND UDF01 IN ('Y','y')
                                    ORDER BY TG001,TG002


                                    ");

                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");


                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    foreach (DataRow dr in ds1.Tables["ds1"].Rows)
                    {
                        //PUR60.進貨單
                        //ADD_PURTGPURTH_TB_WKF_EXTERNAL_TASK(dr["TG001"].ToString().Trim(), dr["TG002"].ToString().Trim());

                        //PURA0.進貨-原物料品質驗收單
                        //PURA0.進貨-進貨品質驗收單
                        ADD_PURTGPURTH_TB_WKF_EXTERNAL_TASK2(dr["TG001"].ToString().Trim(), dr["TG002"].ToString().Trim());
                    }

                }
                else
                {

                }

            }
            catch
            {

            }
            finally
            {
                sqlConn.Close();
            }

            UPDATEPURTGUDF01();
        }
        public void ADD_PURTGPURTH_TB_WKF_EXTERNAL_TASK2(string TG001, string TG002)
        {

            DataTable DT = SEARCHPURTGPURTH(TG001, TG002);
            DataTable DTUPFDEP = SEARCHUOFDEP(DT.Rows[0]["CREATOR"].ToString());

            string account = DT.Rows[0]["CREATOR"].ToString();
            string groupId = DT.Rows[0]["GROUP_ID"].ToString();
            string jobTitleId = DT.Rows[0]["TITLE_ID"].ToString();
            string fillerName = DT.Rows[0]["MV002"].ToString();
            string fillerUserGuid = DT.Rows[0]["USER_GUID"].ToString();

            string DEPNAME = DTUPFDEP.Rows[0]["DEPNAME"].ToString();
            string DEPNO = DTUPFDEP.Rows[0]["DEPNO"].ToString();

            string EXTERNAL_FORM_NBR = DT.Rows[0]["TG001"].ToString().Trim() + DT.Rows[0]["TG002"].ToString().Trim();

            int rowscounts = 0;

            XmlDocument xmlDoc = new XmlDocument();
            //建立根節點
            XmlElement Form = xmlDoc.CreateElement("Form");

            //正式的id
            string PURTGID = SEARCHFORM_UOF_VERSION_ID("PURA0.進貨-進貨品質驗收單");

            if (!string.IsNullOrEmpty(PURTGID))
            {
                Form.SetAttribute("formVersionId", PURTGID);
            }


            Form.SetAttribute("urgentLevel", "2");
            //加入節點底下
            xmlDoc.AppendChild(Form);

            ////建立節點Applicant
            XmlElement Applicant = xmlDoc.CreateElement("Applicant");
            Applicant.SetAttribute("account", account);
            Applicant.SetAttribute("groupId", groupId);
            Applicant.SetAttribute("jobTitleId", jobTitleId);
            //加入節點底下
            Form.AppendChild(Applicant);

            //建立節點 Comment
            XmlElement Comment = xmlDoc.CreateElement("Comment");
            Comment.InnerText = "申請者意見";
            //加入至節點底下
            Applicant.AppendChild(Comment);

            //建立節點 FormFieldValue
            XmlElement FormFieldValue = xmlDoc.CreateElement("FormFieldValue");
            //加入至節點底下
            Form.AppendChild(FormFieldValue);

            //建立節點FieldItem
            //ID 表單編號	
            XmlElement FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "ID");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TG003	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TG003");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TG003"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TG005	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TG005");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TG005"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TG021	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TG021");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TG021"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TG001	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TG001");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TG001"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TG002	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TG002");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TG002"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);


            //DataGrid
            //建立節點FieldItem
            //PURTH
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "PURTH");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點 DataGrid
            XmlElement DataGrid = xmlDoc.CreateElement("DataGrid");
            //DataGrid 加入至 TB 節點底下
            XmlNode PURTD = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='PURTH']");
            PURTD.AppendChild(DataGrid);


            foreach (DataRow od in DT.Rows)
            {
                // 新增 Row
                XmlElement Row = xmlDoc.CreateElement("Row");
                Row.SetAttribute("order", (rowscounts).ToString());

                //Row	TH003
                XmlElement Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TH003");
                Cell.SetAttribute("fieldValue", od["TH003"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TH004
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TH004");
                Cell.SetAttribute("fieldValue", od["TH004"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TH005
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TH005");
                Cell.SetAttribute("fieldValue", od["TH005"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TH006
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TH006");
                Cell.SetAttribute("fieldValue", od["TH006"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TH007
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TH007");
                Cell.SetAttribute("fieldValue", od["TH007"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TH008
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TH008");
                Cell.SetAttribute("fieldValue", od["TH008"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TH010
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TH010");
                Cell.SetAttribute("fieldValue", od["TH010"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TH015
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TH015");
                Cell.SetAttribute("fieldValue", od["TH015"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	CHECK
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "CHECK");
                Cell.SetAttribute("fieldValue", "Y");
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "@null");
                Cell.SetAttribute("enableSearch", "True");
                Cell.SetAttribute("fieldMessage", "Y");
                //Row
                Row.AppendChild(Cell);

                //Row	DETAIL01
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "DETAIL01");
                Cell.SetAttribute("fieldValue", "");
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Cell.SetAttribute("fieldMessage", "Y");
                //Row
                Row.AppendChild(Cell);

                //Row	DETAIL02
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "DETAIL02");
                Cell.SetAttribute("fieldValue", "V");
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "@null");
                Cell.SetAttribute("enableSearch", "True");
                Cell.SetAttribute("fieldMessage", "Y");
                //Row
                Row.AppendChild(Cell);

                ////Row	DETAIL03
                //Cell = xmlDoc.CreateElement("Cell");
                //Cell.SetAttribute("fieldId", "DETAIL03");
                //Cell.SetAttribute("fieldValue", "N");
                //Cell.SetAttribute("realValue", "");
                //Cell.SetAttribute("customValue", "@null");
                //Cell.SetAttribute("enableSearch", "True");
                //Cell.SetAttribute("fieldMessage", "Y");
                ////Row
                //Row.AppendChild(Cell);

                //Row	DETAIL04
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "DETAIL04");
                Cell.SetAttribute("fieldValue", "N");
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "@null");
                Cell.SetAttribute("enableSearch", "True");
                Cell.SetAttribute("fieldMessage", "Y");
                //Row
                Row.AppendChild(Cell);

                //Row	DETAIL05
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "DETAIL05");
                Cell.SetAttribute("fieldValue", "0");
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Cell.SetAttribute("fieldMessage", "Y");
                //Row
                Row.AppendChild(Cell);

                //Row	DETAIL06
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "DETAIL06");
                Cell.SetAttribute("fieldValue", "");
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Cell.SetAttribute("fieldMessage", "Y");
                //Row
                Row.AppendChild(Cell);

                //TH036 有效日期
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TH036");
                Cell.SetAttribute("fieldValue", od["TH036"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Cell.SetAttribute("fieldMessage", "Y");
                //Row
                Row.AppendChild(Cell);


                //TH117 製造日期
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TH117");
                Cell.SetAttribute("fieldValue", od["TH117"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Cell.SetAttribute("fieldMessage", "Y");
                //Row
                Row.AppendChild(Cell);

                rowscounts = rowscounts + 1;

                //DataGrid PURTM
                XmlNode DataGridS = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='PURTH']/DataGrid");
                DataGridS.AppendChild(Row);

            }


            ////用ADDTACK，直接啟動起單
            //ADDTACK(Form);

            //ADD TO DB
            ////string connectionString = ConfigurationManager.ConnectionStrings["dbUOF"].ToString();

            //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
            //sqlConn = new SqlConnection(connectionString);

            //20210902密
            Class1 TKID = new Class1();//用new 建立類別實體
            SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

            //資料庫使用者密碼解密
            sqlsb.Password = TKID.Decryption(sqlsb.Password);
            sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

            String connectionString;
            sqlConn = new SqlConnection(sqlsb.ConnectionString);
            connectionString = sqlConn.ConnectionString.ToString();

            StringBuilder queryString = new StringBuilder();




            queryString.AppendFormat(@" INSERT INTO [{0}].dbo.TB_WKF_EXTERNAL_TASK
                                         (EXTERNAL_TASK_ID,FORM_INFO,STATUS,EXTERNAL_FORM_NBR)
                                        VALUES (NEWID(),@XML,2,'{1}')
                                        ", DBNAME, EXTERNAL_FORM_NBR);

            try
            {
                using (SqlConnection connection = new SqlConnection(connectionString))
                {

                    SqlCommand command = new SqlCommand(queryString.ToString(), connection);
                    command.Parameters.Add("@XML", SqlDbType.NVarChar).Value = Form.OuterXml;

                    command.Connection.Open();

                    int count = command.ExecuteNonQuery();

                    connection.Close();
                    connection.Dispose();

                }
            }
            catch
            {

            }
            finally
            {

            }
        }

        public void ADD_PURTGPURTH_TB_WKF_EXTERNAL_TASK(string TG001, string TG002)
        {

            DataTable DT = SEARCHPURTGPURTH(TG001, TG002);
            DataTable DTUPFDEP = SEARCHUOFDEP(DT.Rows[0]["CREATOR"].ToString());

            string account = DT.Rows[0]["CREATOR"].ToString();
            string groupId = DT.Rows[0]["GROUP_ID"].ToString();
            string jobTitleId = DT.Rows[0]["TITLE_ID"].ToString();
            string fillerName = DT.Rows[0]["MV002"].ToString();
            string fillerUserGuid = DT.Rows[0]["USER_GUID"].ToString();

            string DEPNAME = DTUPFDEP.Rows[0]["DEPNAME"].ToString();
            string DEPNO = DTUPFDEP.Rows[0]["DEPNO"].ToString();

            string EXTERNAL_FORM_NBR = DT.Rows[0]["TG001"].ToString().Trim() + DT.Rows[0]["TG002"].ToString().Trim();

            int rowscounts = 0;

            XmlDocument xmlDoc = new XmlDocument();
            //建立根節點
            XmlElement Form = xmlDoc.CreateElement("Form");

            //正式的id
            string PURTGID = SEARCHFORM_UOF_VERSION_ID("PUR60.進貨單");

            if (!string.IsNullOrEmpty(PURTGID))
            {
                Form.SetAttribute("formVersionId", PURTGID);
            }


            Form.SetAttribute("urgentLevel", "2");
            //加入節點底下
            xmlDoc.AppendChild(Form);

            ////建立節點Applicant
            XmlElement Applicant = xmlDoc.CreateElement("Applicant");
            Applicant.SetAttribute("account", account);
            Applicant.SetAttribute("groupId", groupId);
            Applicant.SetAttribute("jobTitleId", jobTitleId);
            //加入節點底下
            Form.AppendChild(Applicant);

            //建立節點 Comment
            XmlElement Comment = xmlDoc.CreateElement("Comment");
            Comment.InnerText = "申請者意見";
            //加入至節點底下
            Applicant.AppendChild(Comment);

            //建立節點 FormFieldValue
            XmlElement FormFieldValue = xmlDoc.CreateElement("FormFieldValue");
            //加入至節點底下
            Form.AppendChild(FormFieldValue);

            //建立節點FieldItem
            //ID 表單編號	
            XmlElement FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "ID");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TG001	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TG001");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TG001"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TG002	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TG002");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TG002"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TG003	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TG003");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TG003"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TG004	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TG004");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TG004"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TG005	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TG005");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TG005"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TG021	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TG021");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TG021"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TG022	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TG022");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TG022"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TG009	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TG009");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TG009"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TG010	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TG010");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TG010"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TG011	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TG011");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TG011"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TG017	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TG017");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TG017"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TG019	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TG019");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TG019"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TG020	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TG020");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TG020"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TG007	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TG007");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TG007"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TG008	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TG008");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TG008"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TG016	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TG016");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TG016"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);



            //DataGrid
            //建立節點FieldItem
            //PURTH
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "PURTH");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點 DataGrid
            XmlElement DataGrid = xmlDoc.CreateElement("DataGrid");
            //DataGrid 加入至 TB 節點底下
            XmlNode PURTD = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='PURTH']");
            PURTD.AppendChild(DataGrid);


            foreach (DataRow od in DT.Rows)
            {
                // 新增 Row
                XmlElement Row = xmlDoc.CreateElement("Row");
                Row.SetAttribute("order", (rowscounts).ToString());

                //Row	TH003
                XmlElement Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TH003");
                Cell.SetAttribute("fieldValue", od["TH003"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TH004
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TH004");
                Cell.SetAttribute("fieldValue", od["TH004"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TH005
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TH005");
                Cell.SetAttribute("fieldValue", od["TH005"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TH006
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TH006");
                Cell.SetAttribute("fieldValue", od["TH006"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TH007
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TH007");
                Cell.SetAttribute("fieldValue", od["TH007"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TH008
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TH008");
                Cell.SetAttribute("fieldValue", od["TH008"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TH009
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TH009");
                Cell.SetAttribute("fieldValue", od["TH009"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TH010
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TH010");
                Cell.SetAttribute("fieldValue", od["TH010"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TH011
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TH011");
                Cell.SetAttribute("fieldValue", od["TH011"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TH012
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TH012");
                Cell.SetAttribute("fieldValue", od["TH012"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TH013
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TH013");
                Cell.SetAttribute("fieldValue", od["TH013"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TH014
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TH014");
                Cell.SetAttribute("fieldValue", od["TH014"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TH015
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TH015");
                Cell.SetAttribute("fieldValue", od["TH015"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TH016
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TH016");
                Cell.SetAttribute("fieldValue", od["TH016"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TH017
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TH017");
                Cell.SetAttribute("fieldValue", od["TH017"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);





                rowscounts = rowscounts + 1;

                //DataGrid PURTM
                XmlNode DataGridS = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='PURTH']/DataGrid");
                DataGridS.AppendChild(Row);

            }


            ////用ADDTACK，直接啟動起單
            //ADDTACK(Form);

            //ADD TO DB
            ////string connectionString = ConfigurationManager.ConnectionStrings["dbUOF"].ToString();

            //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
            //sqlConn = new SqlConnection(connectionString);

            //20210902密
            Class1 TKID = new Class1();//用new 建立類別實體
            SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

            //資料庫使用者密碼解密
            sqlsb.Password = TKID.Decryption(sqlsb.Password);
            sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

            String connectionString;
            sqlConn = new SqlConnection(sqlsb.ConnectionString);
            connectionString = sqlConn.ConnectionString.ToString();

            StringBuilder queryString = new StringBuilder();




            queryString.AppendFormat(@" INSERT INTO [{0}].dbo.TB_WKF_EXTERNAL_TASK
                                         (EXTERNAL_TASK_ID,FORM_INFO,STATUS,EXTERNAL_FORM_NBR)
                                        VALUES (NEWID(),@XML,2,'{1}')
                                        ", DBNAME, EXTERNAL_FORM_NBR);

            try
            {
                using (SqlConnection connection = new SqlConnection(connectionString))
                {

                    SqlCommand command = new SqlCommand(queryString.ToString(), connection);
                    command.Parameters.Add("@XML", SqlDbType.NVarChar).Value = Form.OuterXml;

                    command.Connection.Open();

                    int count = command.ExecuteNonQuery();

                    connection.Close();
                    connection.Dispose();

                }
            }
            catch
            {

            }
            finally
            {

            }
        }

        public DataTable SEARCHPURTGPURTH(string TG001, string TG002)
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);


                sbSql.Clear();
                sbSqlQuery.Clear();

                //庫存數量看LA009 IN ('20004','20006','20008','20019','20020'

                sbSql.AppendFormat(@"  
                                    SELECT *
                                    ,USER_GUID,NAME
                                    ,(SELECT TOP 1 GROUP_ID FROM [192.168.1.223].[UOF].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'GROUP_ID'
                                    ,(SELECT TOP 1 TITLE_ID FROM [192.168.1.223].[UOF].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'TITLE_ID'
                                    FROM 
                                    (
                                    SELECT 

                                    [PURTG].[COMPANY]
                                    ,[PURTG].[CREATOR]
                                    ,[PURTG].[USR_GROUP]
                                    ,[PURTG].[CREATE_DATE]
                                    ,[PURTG].[MODIFIER]
                                    ,[PURTG].[MODI_DATE]
                                    ,[PURTG].[FLAG]
                                    ,[PURTG].[CREATE_TIME]
                                    ,[PURTG].[MODI_TIME]
                                    ,[PURTG].[TRANS_TYPE]
                                    ,[PURTG].[TRANS_NAME]
                                    ,[PURTG].[sync_date]
                                    ,[PURTG].[sync_time]
                                    ,[PURTG].[sync_mark]
                                    ,[PURTG].[sync_count]
                                    ,[PURTG].[DataUser]
                                    ,[PURTG].[DataGroup]
                                    ,[PURTG].[TG001]
                                    ,[PURTG].[TG002]
                                    ,[PURTG].[TG003]
                                    ,[PURTG].[TG004]
                                    ,[PURTG].[TG005]
                                    ,[PURTG].[TG006]
                                    ,[PURTG].[TG007]
                                    ,[PURTG].[TG008]
                                    ,[PURTG].[TG009]
                                    ,[PURTG].[TG010]
                                    ,[PURTG].[TG011]
                                    ,[PURTG].[TG012]
                                    ,[PURTG].[TG013]
                                    ,[PURTG].[TG014]
                                    ,[PURTG].[TG015]
                                    ,[PURTG].[TG016]
                                    ,[PURTG].[TG017]
                                    ,[PURTG].[TG018]
                                    ,[PURTG].[TG019]
                                    ,[PURTG].[TG020]
                                    ,[PURTG].[TG021]
                                    ,[PURTG].[TG022]
                                    ,[PURTG].[TG023]
                                    ,[PURTG].[TG024]
                                    ,[PURTG].[TG025]
                                    ,[PURTG].[TG026]
                                    ,[PURTG].[TG027]
                                    ,[PURTG].[TG028]
                                    ,[PURTG].[TG029]
                                    ,[PURTG].[TG030]
                                    ,[PURTG].[TG031]
                                    ,[PURTG].[TG032]
                                    ,[PURTG].[TG033]
                                    ,[PURTG].[TG034]
                                    ,[PURTG].[TG035]
                                    ,[PURTG].[TG036]
                                    ,[PURTG].[TG037]
                                    ,[PURTG].[TG038]
                                    ,[PURTG].[TG039]
                                    ,[PURTG].[TG040]
                                    ,[PURTG].[TG041]
                                    ,[PURTG].[TG042]
                                    ,[PURTG].[TG043]
                                    ,[PURTG].[TG044]
                                    ,[PURTG].[TG045]
                                    ,[PURTG].[TG046]
                                    ,[PURTG].[TG047]
                                    ,[PURTG].[TG048]
                                    ,[PURTG].[TG049]
                                    ,[PURTG].[TG050]
                                    ,[PURTG].[TG051]
                                    ,[PURTG].[TG052]
                                    ,[PURTG].[TG053]
                                    ,[PURTG].[TG054]
                                    ,[PURTG].[TG055]
                                    ,[PURTG].[TG056]
                                    ,[PURTG].[TG057]
                                    ,[PURTG].[TG058]
                                    ,[PURTG].[TG059]
                                    ,[PURTG].[TG060]
                                    ,[PURTG].[TG061]
                                    ,[PURTG].[TG062]
                                    ,[PURTG].[TG063]
                                    ,[PURTG].[TG064]
                                    ,[PURTG].[TG065]
                                    ,[PURTG].[TG066]
                                    ,[PURTG].[TG067]
                                    ,[PURTG].[TG068]
                                    ,[PURTG].[TG069]
                                    ,[PURTG].[TG070]
                                    ,[PURTG].[TG071]
                                    ,[PURTG].[TG072]
                                    ,[PURTG].[TG073]
                                    ,[PURTG].[TG074]
                                    ,[PURTG].[TG075]
                                    ,[PURTG].[TG076]
                                    ,[PURTG].[TG077]
                                    ,[PURTG].[TG078]
                                    ,[PURTG].[TG079]
                                    ,[PURTG].[TG080]
                                    ,[PURTG].[TG081]
                                    ,[PURTG].[TG082]
                                    ,[PURTG].[TG083]
                                    ,[PURTG].[TG084]
                                    ,[PURTG].[TG085]
                                    ,[PURTG].[TG086]
                                    ,[PURTG].[TG087]
                                    ,[PURTG].[TG088]
                                    ,[PURTG].[TG089]
                                    ,[PURTG].[TG090]
                                    ,[PURTG].[UDF01] AS 'PURTGUDF01'
                                    ,[PURTG].[UDF02] AS 'PURTGUDF02'
                                    ,[PURTG].[UDF03] AS 'PURTGUDF03'
                                    ,[PURTG].[UDF04] AS 'PURTGUDF04'
                                    ,[PURTG].[UDF05] AS 'PURTGUDF05'
                                    ,[PURTG].[UDF06] AS 'PURTGUDF06'
                                    ,[PURTG].[UDF07] AS 'PURTGUDF07'
                                    ,[PURTG].[UDF08] AS 'PURTGUDF08'
                                    ,[PURTG].[UDF09] AS 'PURTGUDF09'
                                    ,[PURTG].[UDF10] AS 'PURTGUDF10'
                                    ,[PURTH].[TH001]
                                    ,[PURTH].[TH002]
                                    ,[PURTH].[TH003]
                                    ,[PURTH].[TH004]
                                    ,[PURTH].[TH005]
                                    ,[PURTH].[TH006]
                                    ,[PURTH].[TH007]
                                    ,[PURTH].[TH008]
                                    ,[PURTH].[TH009]
                                    ,[PURTH].[TH010]
                                    ,[PURTH].[TH011]
                                    ,[PURTH].[TH012]
                                    ,[PURTH].[TH013]
                                    ,[PURTH].[TH014]
                                    ,[PURTH].[TH015]
                                    ,[PURTH].[TH016]
                                    ,[PURTH].[TH017]
                                    ,[PURTH].[TH018]
                                    ,[PURTH].[TH019]
                                    ,[PURTH].[TH020]
                                    ,[PURTH].[TH021]
                                    ,[PURTH].[TH022]
                                    ,[PURTH].[TH023]
                                    ,[PURTH].[TH024]
                                    ,[PURTH].[TH025]
                                    ,[PURTH].[TH026]
                                    ,[PURTH].[TH027]
                                    ,[PURTH].[TH028]
                                    ,[PURTH].[TH029]
                                    ,[PURTH].[TH030]
                                    ,[PURTH].[TH031]
                                    ,[PURTH].[TH032]
                                    ,[PURTH].[TH033]
                                    ,[PURTH].[TH034]
                                    ,[PURTH].[TH035]
                                    ,[PURTH].[TH036]
                                    ,[PURTH].[TH037]
                                    ,[PURTH].[TH038]
                                    ,[PURTH].[TH039]
                                    ,[PURTH].[TH040]
                                    ,[PURTH].[TH041]
                                    ,[PURTH].[TH042]
                                    ,[PURTH].[TH043]
                                    ,[PURTH].[TH044]
                                    ,[PURTH].[TH045]
                                    ,[PURTH].[TH046]
                                    ,[PURTH].[TH047]
                                    ,[PURTH].[TH048]
                                    ,[PURTH].[TH049]
                                    ,[PURTH].[TH050]
                                    ,[PURTH].[TH051]
                                    ,[PURTH].[TH052]
                                    ,[PURTH].[TH053]
                                    ,[PURTH].[TH054]
                                    ,[PURTH].[TH055]
                                    ,[PURTH].[TH056]
                                    ,[PURTH].[TH057]
                                    ,[PURTH].[TH058]
                                    ,[PURTH].[TH059]
                                    ,[PURTH].[TH060]
                                    ,[PURTH].[TH061]
                                    ,[PURTH].[TH062]
                                    ,[PURTH].[TH063]
                                    ,[PURTH].[TH064]
                                    ,[PURTH].[TH065]
                                    ,[PURTH].[TH066]
                                    ,[PURTH].[TH067]
                                    ,[PURTH].[TH068]
                                    ,[PURTH].[TH069]
                                    ,[PURTH].[TH070]
                                    ,[PURTH].[TH071]
                                    ,[PURTH].[TH072]
                                    ,[PURTH].[TH073]
                                    ,[PURTH].[TH074]
                                    ,[PURTH].[TH075]
                                    ,[PURTH].[TH076]
                                    ,[PURTH].[TH077]
                                    ,[PURTH].[TH078]
                                    ,[PURTH].[TH079]
                                    ,[PURTH].[TH080]
                                    ,[PURTH].[TH081]
                                    ,[PURTH].[TH082]
                                    ,[PURTH].[TH083]
                                    ,[PURTH].[TH084]
                                    ,[PURTH].[TH085]
                                    ,[PURTH].[TH086]
                                    ,[PURTH].[TH087]
                                    ,[PURTH].[TH088]
                                    ,[PURTH].[TH089]
                                    ,[PURTH].[TH090]
                                    ,[PURTH].[TH091]
                                    ,[PURTH].[TH092]
                                    ,[PURTH].[TH093]
                                    ,[PURTH].[TH094]
                                    ,[PURTH].[TH095]
                                    ,[PURTH].[TH096]
                                    ,[PURTH].[TH097]
                                    ,[PURTH].[TH098]
                                    ,[PURTH].[TH099]
                                    ,[PURTH].[TH100]
                                    ,[PURTH].[TH101]
                                    ,[PURTH].[TH102]
                                    ,[PURTH].[TH103]
                                    ,[PURTH].[TH104]
                                    ,[PURTH].[TH105]
                                    ,[PURTH].[TH106]
                                    ,[PURTH].[TH107]
                                    ,[PURTH].[TH108]
                                    ,[PURTH].[TH109]
                                    ,[PURTH].[TH110]
                                    ,[PURTH].[TH111]
                                    ,[PURTH].[TH112]
                                    ,[PURTH].[TH113]
                                    ,[PURTH].[TH114]
                                    ,[PURTH].[TH115]
                                    ,[PURTH].[TH116]
                                    ,[PURTH].[TH117]
                                    ,[PURTH].[TH118]
                                    ,[PURTH].[TH119]
                                    ,[PURTH].[TH120]
                                    ,[PURTH].[UDF01] AS 'PURTHUDF01'
                                    ,[PURTH].[UDF02] AS 'PURTHUDF02'
                                    ,[PURTH].[UDF03] AS 'PURTHUDF03'
                                    ,[PURTH].[UDF04] AS 'PURTHUDF04'
                                    ,[PURTH].[UDF05] AS 'PURTHUDF05'
                                    ,[PURTH].[UDF06] AS 'PURTHUDF06'
                                    ,[PURTH].[UDF07] AS 'PURTHUDF07'
                                    ,[PURTH].[UDF08] AS 'PURTHUDF08'
                                    ,[PURTH].[UDF09] AS 'PURTHUDF09'
                                    ,[PURTH].[UDF10] AS 'PURTHUDF10'
                                    ,[TB_EB_USER].USER_GUID,NAME
                                    ,(SELECT TOP 1 MV002 FROM [TK].dbo.CMSMV WHERE MV001=PURTH.CREATOR) AS 'MV002'

                                    FROM [TK].dbo.PURMA,[TK].dbo.PURTG,[TK].dbo.PURTH
                                    LEFT JOIN [192.168.1.223].[UOF].[dbo].[TB_EB_USER] ON [TB_EB_USER].ACCOUNT= PURTH.CREATOR COLLATE Chinese_Taiwan_Stroke_BIN
                                    WHERE 1=1
                                    AND TG001=TH001 AND TG002=TH002
                                    AND MA001=TG005
                                    AND TG001='{0}' AND TG002='{1}'

                                    ) AS TEMP
                              
                                    ", TG001, TG002);


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    return ds1.Tables["ds1"];

                }
                else
                {
                    return null;
                }

            }
            catch
            {
                return null;
            }
            finally
            {
                sqlConn.Close();
            }
        }

        public void UPDATEPURTGUDF01()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dbconn"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sqlConn.Close();
                sqlConn.Open();
                tran = sqlConn.BeginTransaction();

                sbSql.Clear();

                sbSql.AppendFormat(@"
                                    UPDATE   [TK].dbo.PURTG
                                    SET UDF01 = 'UOF'
                                    WHERE  UDF01 IN ('Y','y')

                                    ");

                cmd.Connection = sqlConn;
                cmd.CommandTimeout = 60;
                cmd.CommandText = sbSql.ToString();
                cmd.Transaction = tran;
                result = cmd.ExecuteNonQuery();

                if (result == 0)
                {
                    tran.Rollback();    //交易取消
                }
                else
                {
                    tran.Commit();      //執行交易  
                }

            }
            catch
            {

            }

            finally
            {
                sqlConn.Close();
            }
        }

        public void NEWBOMTABOMTBBOMTC()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp22"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                DataSet ds1 = new DataSet();
                SqlDataAdapter adapter1 = new SqlDataAdapter();
                SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();

                sbSql.Clear();
                sbSqlQuery.Clear();

                //TL006='N' AND (UDF01 IN ('Y','y') ) 
                sbSql.AppendFormat(@" 
                                    SELECT TA001,TA002,UDF01
                                    FROM [TK].dbo.BOMTA
                                    WHERE TA007='N'
                                    AND UDF01 IN ('Y','y')
                                    ORDER BY TA001,TA002


                                    ");

                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");


                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    foreach (DataRow dr in ds1.Tables["ds1"].Rows)
                    {
                        ADD_BOMTABOMTBBOMTC_TB_WKF_EXTERNAL_TASK(dr["TA001"].ToString().Trim(), dr["TA002"].ToString().Trim());
                    }

                }
                else
                {

                }

            }
            catch
            {

            }
            finally
            {
                sqlConn.Close();
            }

            UPDATEBOMTAUDF01();
        }

        public void ADD_BOMTABOMTBBOMTC_TB_WKF_EXTERNAL_TASK(string TA001,string TA002)
        {
            DataTable DT = SEARCHBOMTABOMTBBOMTC(TA001, TA002);
            DataTable DTUPFDEP = SEARCHUOFDEP(DT.Rows[0]["CREATOR"].ToString());

            string account = DT.Rows[0]["CREATOR"].ToString();
            string groupId = DT.Rows[0]["GROUP_ID"].ToString();
            string jobTitleId = DT.Rows[0]["TITLE_ID"].ToString();
            string fillerName = DT.Rows[0]["MV002"].ToString();
            string fillerUserGuid = DT.Rows[0]["USER_GUID"].ToString();

            string DEPNAME = DTUPFDEP.Rows[0]["DEPNAME"].ToString();
            string DEPNO = DTUPFDEP.Rows[0]["DEPNO"].ToString();

            string EXTERNAL_FORM_NBR = DT.Rows[0]["TA001"].ToString().Trim() + DT.Rows[0]["TA002"].ToString().Trim();

            string CHECK_TB004 = "";
            string CHECK_TB005 = "";
            string CHECK_TB006 = "";
            string TB004 = "";
            string TB005 = "";
            string TB006 = "";

            int rowscounts = 0;

            XmlDocument xmlDoc = new XmlDocument();
            //建立根節點
            XmlElement Form = xmlDoc.CreateElement("Form");

            //正式的id
            string FORMID = SEARCHFORM_UOF_VERSION_ID("BOM10.BOM變更單");

            if (!string.IsNullOrEmpty(FORMID))
            {
                Form.SetAttribute("formVersionId", FORMID);
            }


            Form.SetAttribute("urgentLevel", "2");
            //加入節點底下
            xmlDoc.AppendChild(Form);

            ////建立節點Applicant
            XmlElement Applicant = xmlDoc.CreateElement("Applicant");
            Applicant.SetAttribute("account", account);
            Applicant.SetAttribute("groupId", groupId);
            Applicant.SetAttribute("jobTitleId", jobTitleId);
            //加入節點底下
            Form.AppendChild(Applicant);

            //建立節點 Comment
            XmlElement Comment = xmlDoc.CreateElement("Comment");
            Comment.InnerText = "申請者意見";
            //加入至節點底下
            Applicant.AppendChild(Comment);

            //建立節點 FormFieldValue
            XmlElement FormFieldValue = xmlDoc.CreateElement("FormFieldValue");
            //加入至節點底下
            Form.AppendChild(FormFieldValue);

            //建立節點FieldItem
            //ID 表單編號	
            XmlElement FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "ID");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TA001	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA001");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA001"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA002	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA002");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA002"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA003	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA003");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA003"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA005	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA005");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA005"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA006	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA006");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA006"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);


            //DataGrid
            //建立節點FieldItem
            //明細
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "BOMTBTC");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點 DataGrid
            XmlElement DataGrid = xmlDoc.CreateElement("DataGrid");
            //DataGrid 加入至 TB 節點底下
            XmlNode PURTD = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='BOMTBTC']");
            PURTD.AppendChild(DataGrid);


            foreach (DataRow od in DT.Rows)
            {
                

                // 新增 Row
                XmlElement Row = xmlDoc.CreateElement("Row");
                Row.SetAttribute("order", (rowscounts).ToString());

                //Row	TB003
                XmlElement Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB003");
                Cell.SetAttribute("fieldValue", od["TB003"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB004
                //如果變更主件重覆，就只顯示在第1筆
                if(!CHECK_TB004.Equals(od["TB004"].ToString()))
                {
                    CHECK_TB004 = od["TB004"].ToString();
                    TB004 = od["TB004"].ToString();
                }
                else
                {
                    TB004 = "";
                }
               

                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB004");
                Cell.SetAttribute("fieldValue", TB004);
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB004MB002
                //如果變更主件重覆，就只顯示在第1筆
                if (!CHECK_TB005.Equals(od["TB004MB002"].ToString()))
                {
                    CHECK_TB005 = od["TB004MB002"].ToString();
                    TB005 = od["TB004MB002"].ToString();
                }
                else
                {
                    TB005 = "";
                }
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB004MB002");
                Cell.SetAttribute("fieldValue", TB005);
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB004BM003
                //如果變更主件重覆，就只顯示在第1筆
                if (!CHECK_TB006.Equals(od["TB004MB003"].ToString()))
                {
                    CHECK_TB006 = od["TB004MB003"].ToString();
                    TB006 = od["TB004MB003"].ToString();
                }
                else
                {
                    TB006 = "";
                }
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB004MB003");
                Cell.SetAttribute("fieldValue", TB006);
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB008
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB008");
                Cell.SetAttribute("fieldValue", od["TB008"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB010
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB010");
                Cell.SetAttribute("fieldValue", od["TB010"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TC004
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TC004");
                Cell.SetAttribute("fieldValue", od["TC004"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TC005
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TC005");
                Cell.SetAttribute("fieldValue", od["TC005"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TC005BM002
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TC005MB002");
                Cell.SetAttribute("fieldValue", od["TC005MB002"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TC005MB003
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TC005MB003");
                Cell.SetAttribute("fieldValue", od["TC005MB003"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Cell.SetAttribute("fieldMessage", "Y");
                //Row
                Row.AppendChild(Cell);

                //Row	TC008
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TC008");
                Cell.SetAttribute("fieldValue", od["TC008"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Cell.SetAttribute("fieldMessage", "Y");
                //Row
                Row.AppendChild(Cell);

                //Row	TC009
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TC009");
                Cell.SetAttribute("fieldValue", od["TC009"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Cell.SetAttribute("fieldMessage", "Y");
                //Row
                Row.AppendChild(Cell);

                //Row	TC010
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TC010");
                Cell.SetAttribute("fieldValue", od["TC010"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Cell.SetAttribute("fieldMessage", "Y");
                //Row
                Row.AppendChild(Cell);

                //Row	OLDMC004
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "OLDMC004");
                Cell.SetAttribute("fieldValue", od["OLDMC004"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Cell.SetAttribute("fieldMessage", "Y");
                //Row
                Row.AppendChild(Cell);

                //Row	OLDMD006
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "OLDMD006");
                Cell.SetAttribute("fieldValue", od["OLDMD006"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Cell.SetAttribute("fieldMessage", "Y");
                //Row
                Row.AppendChild(Cell);

                //Row	BOMTBUDF03
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "BOMTBUDF03");
                Cell.SetAttribute("fieldValue", od["BOMTBUDF03"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Cell.SetAttribute("fieldMessage", "Y");
                //Row
                Row.AppendChild(Cell);

                //Row	BOMTBUDF04
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "BOMTBUDF04");
                Cell.SetAttribute("fieldValue", od["BOMTBUDF04"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Cell.SetAttribute("fieldMessage", "Y");
                //Row
                Row.AppendChild(Cell);

                //Row	BOMTBUDF05
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "BOMTBUDF05");
                Cell.SetAttribute("fieldValue", od["BOMTBUDF05"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Cell.SetAttribute("fieldMessage", "Y");
                //Row
                Row.AppendChild(Cell);

                //Row	MC010
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "MC010");
                Cell.SetAttribute("fieldValue", od["MC010"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Cell.SetAttribute("fieldMessage", "Y");
                //Row
                Row.AppendChild(Cell);

                //Row	OLDMB001
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "OLDMB001");
                Cell.SetAttribute("fieldValue", od["OLDMB001"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Cell.SetAttribute("fieldMessage", "Y");
                //Row
                Row.AppendChild(Cell);

                //Row	OLDMB002
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "OLDMB002");
                Cell.SetAttribute("fieldValue", od["OLDMB002"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Cell.SetAttribute("fieldMessage", "Y");
                //Row
                Row.AppendChild(Cell);

                //Row	OLDMB003
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "OLDMB003");
                Cell.SetAttribute("fieldValue", od["OLDMB003"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Cell.SetAttribute("fieldMessage", "Y");
                //Row
                Row.AppendChild(Cell);

                //Row	OLDMD007
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "OLDMD007");
                Cell.SetAttribute("fieldValue", od["OLDMD007"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Cell.SetAttribute("fieldMessage", "Y");
                //Row
                Row.AppendChild(Cell);

                //Row	OLDMD008
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "OLDMD008");
                Cell.SetAttribute("fieldValue", od["OLDMD008"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Cell.SetAttribute("fieldMessage", "Y");
                //Row
                Row.AppendChild(Cell);



                rowscounts = rowscounts + 1;

                //DataGrid PURTM
                XmlNode DataGridS = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='BOMTBTC']/DataGrid");
                DataGridS.AppendChild(Row);

            }


            ////用ADDTACK，直接啟動起單
            //ADDTACK(Form);

            //ADD TO DB
            ////string connectionString = ConfigurationManager.ConnectionStrings["dbUOF"].ToString();

            //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
            //sqlConn = new SqlConnection(connectionString);

            //20210902密
            Class1 TKID = new Class1();//用new 建立類別實體
            SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

            //資料庫使用者密碼解密
            sqlsb.Password = TKID.Decryption(sqlsb.Password);
            sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

            String connectionString;
            sqlConn = new SqlConnection(sqlsb.ConnectionString);
            connectionString = sqlConn.ConnectionString.ToString();

            StringBuilder queryString = new StringBuilder();




            queryString.AppendFormat(@" INSERT INTO [{0}].dbo.TB_WKF_EXTERNAL_TASK
                                         (EXTERNAL_TASK_ID,FORM_INFO,STATUS,EXTERNAL_FORM_NBR)
                                        VALUES (NEWID(),@XML,2,'{1}')
                                        ", DBNAME, EXTERNAL_FORM_NBR);

            try
            {
                using (SqlConnection connection = new SqlConnection(connectionString))
                {

                    SqlCommand command = new SqlCommand(queryString.ToString(), connection);
                    command.Parameters.Add("@XML", SqlDbType.NVarChar).Value = Form.OuterXml;

                    command.Connection.Open();

                    int count = command.ExecuteNonQuery();

                    connection.Close();
                    connection.Dispose();

                }
            }
            catch
            {

            }
            finally
            {

            }

        }

        public DataTable SEARCHBOMTABOMTBBOMTC(string TA001, string TA002)
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);


                sbSql.Clear();
                sbSqlQuery.Clear();

                //庫存數量看LA009 IN ('20004','20006','20008','20019','20020'
               
                sbSql.AppendFormat(@"  
                                   SELECT 
                                    TEMP.CREATOR
                                    ,TA001,TA002,TA003,TA005,TA006
                                    ,TB003,TB004,TB010,TB004MB002,TB004MB003,BOMTBUDF06 
                                    ,TC004
                                    ,ISNULL(TC005,'') TC005 
                                    ,TC008
                                    ,TC009
                                    ,TC010
                                    ,ISNULL(TC005MB002,'') TC005MB002
                                    ,ISNULL(TC005MB003,'') TC005MB003 
                                    ,TB008
                                    ,TEMP.USER_GUID
                                    ,TEMP.NAME
                                    ,MV002
                                    ,MC004 AS 'OLDMC004'
                                    ,BOMTBUDF03,BOMTBUDF04,BOMTBUDF05
                                    ,ISNULL(OLDMB001,'') OLDMB001  
                                    ,ISNULL(OLDMB002,'') OLDMB002 
                                    ,ISNULL(OLDMB003,'') OLDMB003 
                                    ,ISNULL(OLDMD006,0) OLDMD006
                                    ,ISNULL(OLDMD007,0) OLDMD007
                                    ,ISNULL(OLDMD008,0) OLDMD008
                                    ,BOMMC.MC010
                                    ,(SELECT TOP 1 GROUP_ID FROM [192.168.1.223].[UOF].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'GROUP_ID'
                                    ,(SELECT TOP 1 TITLE_ID FROM [192.168.1.223].[UOF].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'TITLE_ID'
                                    FROM 
                                    (
                                    SELECT 
                                    BOMTA.CREATOR
                                    ,TA001,TA002,TA003,TA005,TA006
                                    ,TB003,TB004,TB010,MB1.MB002 TB004MB002,MB1.MB003 TB004MB003,BOMTB.UDF06 BOMTBUDF06 
                                    ,TC004,TC005,TC008,TC009,TC010,MB2.MB002 TC005MB002,MB2.MB002 TC005MB003
                                    ,TB008
                                    ,BOMTB.UDF03 AS 'BOMTBUDF03' ,BOMTB.UDF04 AS 'BOMTBUDF04' ,BOMTB.UDF05 AS 'BOMTBUDF05' 

                                    ,[TB_EB_USER].USER_GUID,NAME
                                    ,(SELECT TOP 1 MV002 FROM [TK].dbo.CMSMV WHERE MV001=BOMTA.CREATOR) AS 'MV002'
                                    ,MD1.MD003  AS 'OLDMB001',MB3.MB002 AS 'OLDMB002',MB3.MB003 AS 'OLDMB003',MD1.MD006 AS 'OLDMD006',MD1.MD007 AS 'OLDMD007',MD1.MD008 AS 'OLDMD008'
                                    FROM [TK].dbo.BOMTA
                                    LEFT JOIN [192.168.1.223].[UOF].[dbo].[TB_EB_USER] ON [TB_EB_USER].ACCOUNT= BOMTA.CREATOR COLLATE Chinese_Taiwan_Stroke_BIN
                                    ,[TK].dbo.BOMTB
                                    LEFT JOIN [TK].dbo.BOMTC ON TC001=BOMTB.TB001 AND TC002=BOMTB.TB002 AND TC003=BOMTB.TB003

                                    LEFT JOIN [TK].dbo.INVMB MB1 ON TB004=MB1.MB001        

                                    LEFT JOIN [TK].dbo.INVMB MB2 ON TC005=MB2.MB001

                                    LEFT JOIN [TK].dbo.BOMMD MD1 ON MD1.MD001=TB004  AND MD1.MD002=TC004 
                                    LEFT JOIN [TK].dbo.INVMB MB3 ON MB3.MB001=MD1.MD003

                                    WHERE TA001=TB001 AND TA002=TB002 
                                    AND TA001 = '{0}' AND TA002 = '{1}'
                                    ) AS TEMP
                                    LEFT JOIN [TK].dbo.BOMMC ON MC001=TB004
                                    LEFT JOIN [TK].dbo.BOMMD ON MD001=TB004 AND BOMMD.MD003=TC005
                                    ORDER BY TA001,TA002,TB004,TC004
                              
                              
                                    ", TA001, TA002);


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    return ds1.Tables["ds1"];

                }
                else
                {
                    return null;
                }

            }
            catch
            {
                return null;
            }
            finally
            {
                sqlConn.Close();
            }
        }

        public void UPDATEBOMTAUDF01()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dbconn"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sqlConn.Close();
                sqlConn.Open();
                tran = sqlConn.BeginTransaction();

                sbSql.Clear();

                sbSql.AppendFormat(@"
                                    UPDATE   [TK].dbo.BOMTA
                                    SET UDF01 = 'UOF'
                                    WHERE  UDF01 IN ('Y','y')                                        

                                    ");

                cmd.Connection = sqlConn;
                cmd.CommandTimeout = 60;
                cmd.CommandText = sbSql.ToString();
                cmd.Transaction = tran;
                result = cmd.ExecuteNonQuery();

                if (result == 0)
                {
                    tran.Rollback();    //交易取消
                }
                else
                {
                    tran.Commit();      //執行交易  
                }

            }
            catch
            {

            }

            finally
            {
                sqlConn.Close();
            }
        }

        public void ADDTKQCUOFQCPURTGPURTH()
        {
            IEnumerable<DataRow> query2 = null;

            DataTable DT1 = SEARCHUOFQCPURTGPURTH();
            DataTable DT2 = SEARCHTKQCUOFQCPURTGPURTH();

            //找DataTable差集
            //要有相同的欄位名稱
            //找DataTable差集
            //要有相同的欄位名稱
            if (DT1.Rows.Count > 0 && DT2.Rows.Count > 0)
            {
                query2 = DT1.AsEnumerable().Except(DT2.AsEnumerable(), DataRowComparer.Default);
            }



            if (query2.Count() > 0)
            {
                //差集集合
                DataTable dt3 = query2.CopyToDataTable();

                foreach (DataRow dr in dt3.Rows)
                {
                    SEARCHUOFQCPURTGPURTH_TB_WKF_TASK(dr["DOC_NBR"].ToString());
                }
            }

        }

        public DataTable SEARCHUOFQCPURTGPURTH()
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            string THISYEARS = DateTime.Now.ToString("yyyy");
            //取西元年後2位
            THISYEARS = THISYEARS.Substring(2, 2);

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sbSql.Clear();
                sbSqlQuery.Clear();


                //是門市督導單STORE
                //核準過TASK_RESULT='0'
                sbSql.AppendFormat(@"  
                                    SELECT DOC_NBR
                                    FROM [UOF].DBO.TB_WKF_TASK 
                                    WHERE DOC_NBR LIKE 'PURTH{0}%'
                                    AND TASK_RESULT='0'
                                    UNION ALL
                                    SELECT 'PURTH220800003'


                                    ", THISYEARS);


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    return ds1.Tables["ds1"];

                }
                else
                {
                    return null;
                }

            }
            catch
            {
                return null;
            }
            finally
            {
                sqlConn.Close();
            }
        }

        public DataTable SEARCHTKQCUOFQCPURTGPURTH()
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            string THISYEARS = DateTime.Now.ToString("yyyy");
            //取西元年後2位
            THISYEARS = THISYEARS.Substring(2, 2);

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sbSql.Clear();
                sbSqlQuery.Clear();

                //UNION ALL 
                //SELECT 'A'
                //避免回傳NULL

                sbSql.AppendFormat(@"  
                                    SELECT [ID] AS 'DOC_NBR'
                                    FROM [TKQC].[dbo].[UOFQCPURTGPURTH]
                                    WHERE [ID] LIKE 'PURTH{0}%'
                                    UNION ALL 
                                    SELECT 'A'
                                    ", THISYEARS);


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    return ds1.Tables["ds1"];

                }
                else
                {
                    return null;
                }

            }
            catch
            {
                return null;
            }
            finally
            {
                sqlConn.Close();
            }
        }

        public void SEARCHUOFQCPURTGPURTH_TB_WKF_TASK(string DOC_NBR)
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sbSql.Clear();
                sbSqlQuery.Clear();

                //庫存數量看LA009 IN ('20004','20006','20008','20019','20020'

                sbSql.AppendFormat(@"  
                                    SELECT * 
                                    FROM [UOF].DBO.TB_WKF_TASK 
                                    LEFT JOIN [UOF].[dbo].[TB_EB_USER] ON [TB_EB_USER].USER_GUID=TB_WKF_TASK.USER_GUID
                                    WHERE DOC_NBR LIKE '{0}%'

                              
                                    ", DOC_NBR);


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    string NAME = ds1.Tables["ds1"].Rows[0]["NAME"].ToString();

                    XmlDocument xmlDoc = new XmlDocument();
                    xmlDoc.LoadXml(ds1.Tables["ds1"].Rows[0]["CURRENT_DOC"].ToString());

                    //XmlNode node = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='ID']");
                    string Applicantname = xmlDoc.SelectSingleNode($"/Form/Applicant").Attributes["name"].Value;
                    string ID = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='ID']").Attributes["fieldValue"].Value;
                    string TG003 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='TG003']").Attributes["fieldValue"].Value;
                    string TG005 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='TG005']").Attributes["fieldValue"].Value;
                    string TG021 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='TG021']").Attributes["fieldValue"].Value;
                    string TG001 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='TG001']").Attributes["fieldValue"].Value;
                    string TG002 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='TG002']").Attributes["fieldValue"].Value;

                    foreach (XmlNode node in xmlDoc.SelectNodes("./Form/FormFieldValue/FieldItem[@fieldId='PURTH']/DataGrid/Row"))
                    {
                        string TH003 = "";
                        string TH004 = "";
                        string TH005 = "";
                        string TH006 = "";
                        string TH007 = "";
                        string TH008 = "";
                        string TH010 = "";
                        string TH015 = "";
                        string CHECK = "";
                        string DETAIL01 = "";
                        string DETAIL02 = "";
                        string DETAIL03 = "";
                        string DETAIL04 = "";
                        string DETAIL05 = "";
                        string DETAIL06 = "";

                        try
                        {
                             TH003 = node.SelectSingleNode("./Cell[@fieldId='TH003']").Attributes["fieldValue"].Value;
                        }
                        catch
                        {                          
                        }                        
                        try
                        {
                            TH004 = node.SelectSingleNode("./Cell[@fieldId='TH004']").Attributes["fieldValue"].Value;
                            
                        }
                        catch
                        {
                        }
                        try
                        {
                            TH005 = node.SelectSingleNode("./Cell[@fieldId='TH005']").Attributes["fieldValue"].Value;
                            

                        }
                        catch
                        {
                        }
                        try
                        {
                            TH006 = node.SelectSingleNode("./Cell[@fieldId='TH006']").Attributes["fieldValue"].Value;
                            
                        }
                        catch
                        {
                        }
                        try
                        {
                            TH007 = node.SelectSingleNode("./Cell[@fieldId='TH007']").Attributes["fieldValue"].Value;
                           
                        }
                        catch
                        {
                        }
                        try
                        {
                            TH008 = node.SelectSingleNode("./Cell[@fieldId='TH008']").Attributes["fieldValue"].Value;
                           
                        }
                        catch
                        {
                        }
                        try
                        {
                            TH010 = node.SelectSingleNode("./Cell[@fieldId='TH010']").Attributes["fieldValue"].Value;
                           
                        }
                        catch
                        {
                        }
                        try
                        {
                            TH015 = node.SelectSingleNode("./Cell[@fieldId='TH015']").Attributes["fieldValue"].Value;
                            
                        }
                        catch
                        {
                        }
                        try
                        {
                            CHECK = node.SelectSingleNode("./Cell[@fieldId='CHECK']").Attributes["fieldValue"].Value;
                          
                        }
                        catch
                        {
                        }
                        try
                        {
                            DETAIL01 = node.SelectSingleNode("./Cell[@fieldId='DETAIL01']").Attributes["fieldValue"].Value;
                            
                        }
                        catch
                        {
                        }
                        try
                        {
                            DETAIL02 = node.SelectSingleNode("./Cell[@fieldId='DETAIL02']").Attributes["fieldValue"].Value;
                            
                        }
                        catch
                        {
                        }
                        try
                        {
                            //DETAIL03 = node.SelectSingleNode("./Cell[@fieldId='DETAIL03']").Attributes["fieldValue"].Value;
                          
                        }
                        catch
                        {
                        }
                        try
                        {
                            DETAIL04 = node.SelectSingleNode("./Cell[@fieldId='DETAIL04']").Attributes["fieldValue"].Value;
                          
                        }
                        catch
                        {
                        }
                        try
                        {
                            DETAIL05 = node.SelectSingleNode("./Cell[@fieldId='DETAIL05']").Attributes["fieldValue"].Value;
                          
                        }
                        catch
                        {
                        }
                        try
                        {
                            DETAIL06 = node.SelectSingleNode("./Cell[@fieldId='DETAIL06']").Attributes["fieldValue"].Value;
                        }
                        catch
                        {
                        }
                        



                        ADDTOTKQCUOFQCPURTGPURTH(
                            ID
                            , TG003
                            , TG005
                            , TG021
                            , TG001
                            , TG002
                            , TH003
                            , TH004
                            , TH005
                            , TH006
                            , TH007
                            , TH008
                            , TH010
                            , TH015
                            , CHECK
                            , DETAIL01
                            , DETAIL02
                            , DETAIL03
                            , DETAIL04
                            , DETAIL05
                            , DETAIL06
                            , Applicantname
                            );

                        //更新第1站的簽核人當Applicantname
                        UPDATE_UOFQCPURTGPURTH_Applicantname();
                        
                        //MessageBox.Show(TH003+' ' +TH004 + ' ' + TH005 + ' ' + TH006 + ' ' + TH007 + ' ' + TH008 + ' ' + TH010 + ' ' + TH015 + ' ' + CHECK);
                    }
                    //string OK = "";

                    //ADDTOTKMKTBSTORESCHECK(
                    //                        ID

                    //                        );


                }
                else
                {

                }

            }
            catch
            {

            }
            finally
            {
                sqlConn.Close();
            }
        }

        public void ADDTOTKQCUOFQCPURTGPURTH(
                                        string ID
                                        , string TG003
                                        , string TG005
                                        , string TG021
                                        , string TG001
                                        , string TG002
                                        , string TH003
                                        , string TH004
                                        , string TH005
                                        , string TH006
                                        , string TH007
                                        , string TH008
                                        , string TH010
                                        , string TH015
                                        , string CHECK
                                        , string DETAIL01
                                        , string DETAIL02
                                        , string DETAIL03
                                        , string DETAIL04
                                        , string DETAIL05
                                        , string DETAIL06
                                        , string Applicantname
                                        )
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sqlConn.Close();
                sqlConn.Open();
                tran = sqlConn.BeginTransaction();

                sbSql.Clear();

                sbSql.AppendFormat(@"
                                  INSERT INTO [TKQC].[dbo].[UOFQCPURTGPURTH]
                                    (
                                    [ID]
                                    ,[TG003]
                                    ,[TG005]
                                    ,[TG021]
                                    ,[TG001]
                                    ,[TG002]
                                    ,[TH003]
                                    ,[TH004]
                                    ,[TH005]
                                    ,[TH006]
                                    ,[TH007]
                                    ,[TH008]
                                    ,[TH010]
                                    ,[TH015]
                                    ,[CHECK]
                                    ,[DETAIL01]
                                    ,[DETAIL02]
                                    ,[DETAIL03]
                                    ,[DETAIL04]
                                    ,[DETAIL05]
                                    ,[DETAIL06]
                                    ,[Applicantname]
                                    )
                                    VALUES
                                    (
                                    '{0}'
                                    ,'{1}'
                                    ,'{2}'
                                    ,'{3}'
                                    ,'{4}'
                                    ,'{5}'
                                    ,'{6}'
                                    ,'{7}'
                                    ,'{8}'
                                    ,'{9}'
                                    ,'{10}'
                                    ,'{11}'
                                    ,'{12}'
                                    ,'{13}'
                                    ,'{14}'
                                    ,'{15}'
                                    ,'{16}'
                                    ,'{17}'
                                    ,'{18}'
                                    ,'{19}'
                                    ,'{20}'
                                    ,'{21}'
                                    )

                                   ", ID
                                    , TG003
                                    , TG005
                                    , TG021
                                    , TG001
                                    , TG002
                                    , TH003
                                    , TH004
                                    , TH005
                                    , TH006
                                    , TH007
                                    , TH008
                                    , TH010
                                    , TH015
                                    , CHECK
                                    , DETAIL01
                                    , DETAIL02
                                    , DETAIL03
                                    , DETAIL04
                                    , DETAIL05
                                    , DETAIL06
                                    , Applicantname
                                    );

                cmd.Connection = sqlConn;
                cmd.CommandTimeout = 60;
                cmd.CommandText = sbSql.ToString();
                cmd.Transaction = tran;
                result = cmd.ExecuteNonQuery();

                if (result == 0)
                {
                    tran.Rollback();    //交易取消
                }
                else
                {
                    tran.Commit();      //執行交易  
                }

            }
            catch
            {

            }

            finally
            {
                sqlConn.Close();
            }
        }

        public void UPDATE_UOFQCPURTGPURTH_Applicantname()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sqlConn.Close();
                sqlConn.Open();
                tran = sqlConn.BeginTransaction();

                sbSql.Clear();

                sbSql.AppendFormat(@"
                                    UPDATE [TKQC].[dbo].[UOFQCPURTGPURTH]
                                    SET Applicantname=SUBSTRING(REPLACE((REPLACE(PURTH.UDF01,'Y,','')),'N,',''),1,3)
                                    FROM [TKQC].[dbo].[UOFQCPURTGPURTH],[TK].dbo.PURTH
                                    WHERE [UOFQCPURTGPURTH].TG001+[UOFQCPURTGPURTH].TG002+[UOFQCPURTGPURTH].TH003 =PURTH.TH001+PURTH.TH002+PURTH.TH003
                                    AND Applicantname<>SUBSTRING(REPLACE((REPLACE(PURTH.UDF01,'Y,','')),'N,',''),1,3)
                                    AND ISNULL(Applicantname,'')=NULL
                                   "
                                    );

                cmd.Connection = sqlConn;
                cmd.CommandTimeout = 60;
                cmd.CommandText = sbSql.ToString();
                cmd.Transaction = tran;
                result = cmd.ExecuteNonQuery();

                if (result == 0)
                {
                    tran.Rollback();    //交易取消
                }
                else
                {
                    tran.Commit();      //執行交易  
                }

            }
            catch
            {

            }

            finally
            {
                sqlConn.Close();
            }

        }
        public void ADDUOFMOCTAMOCTB()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp22"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                DataSet ds1 = new DataSet();
                SqlDataAdapter adapter1 = new SqlDataAdapter();
                SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();

                sbSql.Clear();
                sbSqlQuery.Clear();

                //TL006='N' AND (UDF01 IN ('Y','y') ) 
                sbSql.AppendFormat(@" 
                                    SELECT TA001,TA002,UDF02
                                    FROM [TK].dbo.MOCTA
                                    WHERE TA013='N'
                                    AND UDF02 IN ('Y','y')
                                    ORDER BY TA001,TA002


                                    ");

                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");


                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    foreach (DataRow dr in ds1.Tables["ds1"].Rows)
                    {
                        ADD_MOCTAMOCTB_TB_WKF_EXTERNAL_TASK(dr["TA001"].ToString().Trim(), dr["TA002"].ToString().Trim());
                    }

                }
                else
                {

                }

            }
            catch
            {

            }
            finally
            {
                sqlConn.Close();
            }

            UPDATEMOCTAUDF02();
        }

        public void UPDATEMOCTAUDF02()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dbconn"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sqlConn.Close();
                sqlConn.Open();
                tran = sqlConn.BeginTransaction();

                sbSql.Clear();

                sbSql.AppendFormat(@"
                                    UPDATE  [TK].dbo.MOCTA
                                    SET UDF02 = 'UOF'
                                    WHERE  UDF02 IN ('Y','y')                                        

                                    ");

                cmd.Connection = sqlConn;
                cmd.CommandTimeout = 60;
                cmd.CommandText = sbSql.ToString();
                cmd.Transaction = tran;
                result = cmd.ExecuteNonQuery();

                if (result == 0)
                {
                    tran.Rollback();    //交易取消
                }
                else
                {
                    tran.Commit();      //執行交易  
                }

            }
            catch
            {

            }

            finally
            {
                sqlConn.Close();
            }
        }

        public void ADD_MOCTAMOCTB_TB_WKF_EXTERNAL_TASK(string TA001, string TA002)
        {
            DataTable DT = SEARCHMOCTAMOCTB(TA001, TA002);
            DataTable DTUPFDEP = SEARCHUOFDEP(DT.Rows[0]["CREATOR"].ToString());

            string account = DT.Rows[0]["CREATOR"].ToString();
            string groupId = DT.Rows[0]["GROUP_ID"].ToString();
            string jobTitleId = DT.Rows[0]["TITLE_ID"].ToString();
            string fillerName = DT.Rows[0]["MV002"].ToString();
            string fillerUserGuid = DT.Rows[0]["USER_GUID"].ToString();

            string DEPNAME = DTUPFDEP.Rows[0]["DEPNAME"].ToString();
            string DEPNO = DTUPFDEP.Rows[0]["DEPNO"].ToString();

            string EXTERNAL_FORM_NBR = DT.Rows[0]["TA001"].ToString().Trim() + DT.Rows[0]["TA002"].ToString().Trim();

            int rowscounts = 0;

            XmlDocument xmlDoc = new XmlDocument();
            //建立根節點
            XmlElement Form = xmlDoc.CreateElement("Form");

            //正式的id
            string FORMID = SEARCHFORM_UOF_VERSION_ID("MOCI02.製令單");

            if (!string.IsNullOrEmpty(FORMID))
            {
                Form.SetAttribute("formVersionId", FORMID);
            }


            Form.SetAttribute("urgentLevel", "2");
            //加入節點底下
            xmlDoc.AppendChild(Form);

            ////建立節點Applicant
            XmlElement Applicant = xmlDoc.CreateElement("Applicant");
            Applicant.SetAttribute("account", account);
            Applicant.SetAttribute("groupId", groupId);
            Applicant.SetAttribute("jobTitleId", jobTitleId);
            //加入節點底下
            Form.AppendChild(Applicant);

            //建立節點 Comment
            XmlElement Comment = xmlDoc.CreateElement("Comment");
            Comment.InnerText = "申請者意見";
            //加入至節點底下
            Applicant.AppendChild(Comment);

            //建立節點 FormFieldValue
            XmlElement FormFieldValue = xmlDoc.CreateElement("FormFieldValue");
            //加入至節點底下
            Form.AppendChild(FormFieldValue);

            //建立節點FieldItem
            //ID 表單編號	
            XmlElement FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "ID");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TA001	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA001");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA001"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA002
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA002");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA002"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA003	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA003");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA003"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA006	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA006");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA006"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA034	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA034");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA034"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA035	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA035");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA035"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA015	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA015");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA015"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA007	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA007");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA007"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA020	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA020");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA020"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA021	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA021");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA021"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA026	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA026");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA026"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA027	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA027");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA027"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA028	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA028");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA028"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA029	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA029");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA029"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA036	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA036");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA036"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);


            //DataGrid
            //建立節點FieldItem
            //明細
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "DETAILS");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點 DataGrid
            XmlElement DataGrid = xmlDoc.CreateElement("DataGrid");
            //DataGrid 加入至 TB 節點底下
            XmlNode DETAILS07 = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='DETAILS']");
            DETAILS07.AppendChild(DataGrid);


            foreach (DataRow od in DT.Rows)
            {
                // 新增 Row
                XmlElement Row = xmlDoc.CreateElement("Row");
                Row.SetAttribute("order", (rowscounts).ToString());

                //Row	TB001
                XmlElement Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB001");
                Cell.SetAttribute("fieldValue", od["TB001"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB002
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB002");
                Cell.SetAttribute("fieldValue", od["TB002"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB003
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB003");
                Cell.SetAttribute("fieldValue", od["TB003"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB012
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB012");
                Cell.SetAttribute("fieldValue", od["TB012"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB013
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB013");
                Cell.SetAttribute("fieldValue", od["TB013"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB004
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB004");
                Cell.SetAttribute("fieldValue", od["TB004"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB007
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB007");
                Cell.SetAttribute("fieldValue", od["TB007"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB017
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB017");
                Cell.SetAttribute("fieldValue", od["TB017"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);




                rowscounts = rowscounts + 1;

                //DataGrid PURTM
                XmlNode DataGridS = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='DETAILS']/DataGrid");
                DataGridS.AppendChild(Row);

            }


            ////用ADDTACK，直接啟動起單
            //ADDTACK(Form);

            //ADD TO DB
            ////string connectionString = ConfigurationManager.ConnectionStrings["dbUOF"].ToString();

            //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
            //sqlConn = new SqlConnection(connectionString);

            //20210902密
            Class1 TKID = new Class1();//用new 建立類別實體
            SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

            //資料庫使用者密碼解密
            sqlsb.Password = TKID.Decryption(sqlsb.Password);
            sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

            String connectionString;
            sqlConn = new SqlConnection(sqlsb.ConnectionString);
            connectionString = sqlConn.ConnectionString.ToString();

            StringBuilder queryString = new StringBuilder();




            queryString.AppendFormat(@" INSERT INTO [{0}].dbo.TB_WKF_EXTERNAL_TASK
                                         (EXTERNAL_TASK_ID,FORM_INFO,STATUS,EXTERNAL_FORM_NBR)
                                        VALUES (NEWID(),@XML,2,'{1}')
                                        ", DBNAME, EXTERNAL_FORM_NBR);

            try
            {
                using (SqlConnection connection = new SqlConnection(connectionString))
                {

                    SqlCommand command = new SqlCommand(queryString.ToString(), connection);
                    command.Parameters.Add("@XML", SqlDbType.NVarChar).Value = Form.OuterXml;

                    command.Connection.Open();

                    int count = command.ExecuteNonQuery();

                    connection.Close();
                    connection.Dispose();

                }
            }
            catch
            {

            }
            finally
            {

            }

        }

        public DataTable SEARCHMOCTAMOCTB(string TA001, string TA002)
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);


                sbSql.Clear();
                sbSqlQuery.Clear();

                //庫存數量看LA009 IN ('20004','20006','20008','20019','20020'

                sbSql.AppendFormat(@"  
                                    SELECT *
                                    ,USER_GUID,NAME
                                    ,(SELECT TOP 1 GROUP_ID FROM [192.168.1.223].[UOF].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'GROUP_ID'
                                    ,(SELECT TOP 1 TITLE_ID FROM [192.168.1.223].[UOF].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'TITLE_ID'
                                    FROM 
                                    (
                                    SELECT 
                                    MOCTA.CREATOR
                                    ,TA001
                                    ,TA002
                                    ,TA003
                                    ,TA006
                                    ,TA034
                                    ,TA035
                                    ,TA015
                                    ,TA007
                                    ,TA020
                                    ,TA021
                                    ,TA026
                                    ,TA027
                                    ,TA028
                                    ,TA029
                                    ,TA036
                                    ,TB001
                                    ,TB002
                                    ,TB003
                                    ,TB012
                                    ,TB013
                                    ,TB004
                                    ,TB007
                                    ,TB017

                                    ,[TB_EB_USER].USER_GUID,NAME
                                    ,(SELECT TOP 1 MV002 FROM [TK].dbo.CMSMV WHERE MV001=MOCTA.CREATOR) AS 'MV002'
                                    FROM [TK].dbo.MOCTB,[TK].dbo.MOCTA
                                    LEFT JOIN [192.168.1.223].[UOF].[dbo].[TB_EB_USER] ON [TB_EB_USER].ACCOUNT= MOCTA.CREATOR COLLATE Chinese_Taiwan_Stroke_BIN

                                    WHERE TA001=TB001 AND TA002=TB002 
                                    AND TA001='{0}' AND TA002='{1}'
                                    ) AS TEMP
                              
                                    ", TA001, TA002);


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    return ds1.Tables["ds1"];

                }
                else
                {
                    return null;
                }

            }
            catch
            {
                return null;
            }
            finally
            {
                sqlConn.Close();
            }
        }

        public void ADDUOFMOCTOMOCTP()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp22"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                DataSet ds1 = new DataSet();
                SqlDataAdapter adapter1 = new SqlDataAdapter();
                SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();

                sbSql.Clear();
                sbSqlQuery.Clear();

                //TL006='N' AND (UDF01 IN ('Y','y') ) 
                sbSql.AppendFormat(@" 
                                    SELECT TO001,TO002,UDF01
                                    FROM [TK].dbo.MOCTO
                                    WHERE TO041='N'
                                    AND UDF01 IN ('Y','y')
                                    ORDER BY TO001,TO002


                                    ");

                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");


                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    foreach (DataRow dr in ds1.Tables["ds1"].Rows)
                    {
                        ADD_MOCTOMOCTP_TB_WKF_EXTERNAL_TASK(dr["TA001"].ToString().Trim(), dr["TA002"].ToString().Trim());
                    }

                }
                else
                {

                }

            }
            catch
            {

            }
            finally
            {
                sqlConn.Close();
            }

            UPDATEMOCTAOUDF01();
        }

        public void UPDATEMOCTAOUDF01()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dbconn"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sqlConn.Close();
                sqlConn.Open();
                tran = sqlConn.BeginTransaction();

                sbSql.Clear();

                sbSql.AppendFormat(@"
                                    UPDATE  [TK].dbo.MOCTO
                                    SET UDF01 = 'UOF'
                                    WHERE  UDF01 IN ('Y','y')                                        

                                    ");

                cmd.Connection = sqlConn;
                cmd.CommandTimeout = 60;
                cmd.CommandText = sbSql.ToString();
                cmd.Transaction = tran;
                result = cmd.ExecuteNonQuery();

                if (result == 0)
                {
                    tran.Rollback();    //交易取消
                }
                else
                {
                    tran.Commit();      //執行交易  
                }

            }
            catch
            {

            }

            finally
            {
                sqlConn.Close();
            }
        }

        public void ADD_MOCTOMOCTP_TB_WKF_EXTERNAL_TASK(string TO001,string TO002)
        {
            DataTable DT = SEARCHMOCTOMOCTP(TO001, TO002);
            DataTable DTUPFDEP = SEARCHUOFDEP(DT.Rows[0]["CREATOR"].ToString());

            string account = DT.Rows[0]["CREATOR"].ToString();
            string groupId = DT.Rows[0]["GROUP_ID"].ToString();
            string jobTitleId = DT.Rows[0]["TITLE_ID"].ToString();
            string fillerName = DT.Rows[0]["MV002"].ToString();
            string fillerUserGuid = DT.Rows[0]["USER_GUID"].ToString();

            string DEPNAME = DTUPFDEP.Rows[0]["DEPNAME"].ToString();
            string DEPNO = DTUPFDEP.Rows[0]["DEPNO"].ToString();

            string EXTERNAL_FORM_NBR = DT.Rows[0]["TA001"].ToString().Trim() + DT.Rows[0]["TA002"].ToString().Trim();

            int rowscounts = 0;

            XmlDocument xmlDoc = new XmlDocument();
            //建立根節點
            XmlElement Form = xmlDoc.CreateElement("Form");

            //正式的id
            string FORMID = SEARCHFORM_UOF_VERSION_ID("MOCI12.製令變更單");

            if (!string.IsNullOrEmpty(FORMID))
            {
                Form.SetAttribute("formVersionId", FORMID);
            }


            Form.SetAttribute("urgentLevel", "2");
            //加入節點底下
            xmlDoc.AppendChild(Form);

            ////建立節點Applicant
            XmlElement Applicant = xmlDoc.CreateElement("Applicant");
            Applicant.SetAttribute("account", account);
            Applicant.SetAttribute("groupId", groupId);
            Applicant.SetAttribute("jobTitleId", jobTitleId);
            //加入節點底下
            Form.AppendChild(Applicant);

            //建立節點 Comment
            XmlElement Comment = xmlDoc.CreateElement("Comment");
            Comment.InnerText = "申請者意見";
            //加入至節點底下
            Applicant.AppendChild(Comment);

            //建立節點 FormFieldValue
            XmlElement FormFieldValue = xmlDoc.CreateElement("FormFieldValue");
            //加入至節點底下
            Form.AppendChild(FormFieldValue);

            //建立節點FieldItem
            //ID 表單編號	
            XmlElement FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "ID");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TO001	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TO001");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TO001"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TO002
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TO002");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TO002"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TO003
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TO003");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TO003"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TO004
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TO004");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TO004"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //TO005
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TO005");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TO005"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TO006
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TO006");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TO006"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TO009
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TO009");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TO009"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TO012
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TO012");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TO012"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TO013
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TO013");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TO013"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TO014
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TO014");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TO014"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TO017
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TO017");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TO017"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TO022
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TO022");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TO022"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TO023
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TO023");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TO023"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TO035
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TO035");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TO035"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TO036
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TO036");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TO036"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);



            //DataGrid
            //建立節點FieldItem
            //明細
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "DETAILS");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點 DataGrid
            XmlElement DataGrid = xmlDoc.CreateElement("DataGrid");
            //DataGrid 加入至 TB 節點底下
            XmlNode DETAILS07 = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='DETAILS']");
            DETAILS07.AppendChild(DataGrid);


            foreach (DataRow od in DT.Rows)
            {
                // 新增 Row
                XmlElement Row = xmlDoc.CreateElement("Row");
                Row.SetAttribute("order", (rowscounts).ToString());

                //Row	TP001
                XmlElement Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TP001");
                Cell.SetAttribute("fieldValue", od["TP001"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TP002
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TP002");
                Cell.SetAttribute("fieldValue", od["TP002"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TP003
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TP003");
                Cell.SetAttribute("fieldValue", od["TP003"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TP004
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TP004");
                Cell.SetAttribute("fieldValue", od["TP004"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TP005
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TP005");
                Cell.SetAttribute("fieldValue", od["TP005"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TP010
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TP010");
                Cell.SetAttribute("fieldValue", od["TP010"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);





                rowscounts = rowscounts + 1;

                //DataGrid PURTM
                XmlNode DataGridS = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='DETAILS']/DataGrid");
                DataGridS.AppendChild(Row);

            }


            ////用ADDTACK，直接啟動起單
            //ADDTACK(Form);

            //ADD TO DB
            ////string connectionString = ConfigurationManager.ConnectionStrings["dbUOF"].ToString();

            //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
            //sqlConn = new SqlConnection(connectionString);

            //20210902密
            Class1 TKID = new Class1();//用new 建立類別實體
            SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

            //資料庫使用者密碼解密
            sqlsb.Password = TKID.Decryption(sqlsb.Password);
            sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

            String connectionString;
            sqlConn = new SqlConnection(sqlsb.ConnectionString);
            connectionString = sqlConn.ConnectionString.ToString();

            StringBuilder queryString = new StringBuilder();




            queryString.AppendFormat(@" INSERT INTO [{0}].dbo.TB_WKF_EXTERNAL_TASK
                                         (EXTERNAL_TASK_ID,FORM_INFO,STATUS,EXTERNAL_FORM_NBR)
                                        VALUES (NEWID(),@XML,2,'{1}')
                                        ", DBNAME, EXTERNAL_FORM_NBR);

            try
            {
                using (SqlConnection connection = new SqlConnection(connectionString))
                {

                    SqlCommand command = new SqlCommand(queryString.ToString(), connection);
                    command.Parameters.Add("@XML", SqlDbType.NVarChar).Value = Form.OuterXml;

                    command.Connection.Open();

                    int count = command.ExecuteNonQuery();

                    connection.Close();
                    connection.Dispose();

                }
            }
            catch
            {

            }
            finally
            {

            }

        }

        public DataTable SEARCHMOCTOMOCTP(string TA001, string TA002)
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);


                sbSql.Clear();
                sbSqlQuery.Clear();

                //庫存數量看LA009 IN ('20004','20006','20008','20019','20020'

                sbSql.AppendFormat(@"  
                                   SELECT *
                                    ,USER_GUID,NAME
                                    ,(SELECT TOP 1 GROUP_ID FROM [192.168.1.223].[UOF].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'GROUP_ID'
                                    ,(SELECT TOP 1 TITLE_ID FROM [192.168.1.223].[UOF].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'TITLE_ID'
                                    FROM 
                                    (
                                    SELECT 
                                    MOCTO.CREATOR
                                    ,TO001
                                    ,TO002
                                    ,TO003
                                    ,TO004
                                    ,TO005
                                    ,TO006
                                    ,TO009
                                    ,TO012
                                    ,TO013
                                    ,TO014
                                    ,TO017
                                    ,TO022
                                    ,TO023
                                    ,TO035
                                    ,TO036
                                    ,TP001
                                    ,TP002
                                    ,TP003
                                    ,TP004
                                    ,TP005
                                    ,TP010


                                    ,[TB_EB_USER].USER_GUID,NAME
                                    ,(SELECT TOP 1 MV002 FROM [TK].dbo.CMSMV WHERE MV001=MOCTO.CREATOR) AS 'MV002'
                                    FROM [TK].dbo.MOCTP,[TK].dbo.MOCTO
                                    LEFT JOIN [192.168.1.223].[UOF].[dbo].[TB_EB_USER] ON [TB_EB_USER].ACCOUNT= MOCTO.CREATOR COLLATE Chinese_Taiwan_Stroke_BIN

                                    WHERE TO001=TP001 AND TO002=TP002 
                                    AND TO001='{0}' AND TO002='{1}'
                                    ) AS TEMP
                              
                                    ", TA001, TA002);


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    return ds1.Tables["ds1"];

                }
                else
                {
                    return null;
                }

            }
            catch
            {
                return null;
            }
            finally
            {
                sqlConn.Close();
            }
        }

        public void ADDUOFACRTAACRTB()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp22"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                DataSet ds1 = new DataSet();
                SqlDataAdapter adapter1 = new SqlDataAdapter();
                SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();

                sbSql.Clear();
                sbSqlQuery.Clear();

                //TL006='N' AND (UDF01 IN ('Y','y') ) 
                sbSql.AppendFormat(@" 
                                    SELECT TA001,TA002,UDF01
                                    FROM [TK].dbo.ACRTA
                                    WHERE TA025='N'
                                    AND UDF01 IN ('Y','y')
                                    ORDER BY TA001,TA002


                                    ");

                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");


                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    foreach (DataRow dr in ds1.Tables["ds1"].Rows)
                    {
                        ADD_ACRTAACRTB_TB_WKF_EXTERNAL_TASK(dr["TA001"].ToString().Trim(), dr["TA002"].ToString().Trim());
                    }

                }
                else
                {

                }

            }
            catch
            {

            }
            finally
            {
                sqlConn.Close();
            }

            UPDATEACRTAUDF01();
        }

        public void UPDATEACRTAUDF01()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dbconn"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sqlConn.Close();
                sqlConn.Open();
                tran = sqlConn.BeginTransaction();

                sbSql.Clear();

                sbSql.AppendFormat(@"
                                    UPDATE  [TK].dbo.ACRTA
                                    SET UDF01 = 'UOF'
                                    WHERE  UDF01 IN ('Y','y')                                        

                                    ");

                cmd.Connection = sqlConn;
                cmd.CommandTimeout = 60;
                cmd.CommandText = sbSql.ToString();
                cmd.Transaction = tran;
                result = cmd.ExecuteNonQuery();

                if (result == 0)
                {
                    tran.Rollback();    //交易取消
                }
                else
                {
                    tran.Commit();      //執行交易  
                }

            }
            catch
            {

            }

            finally
            {
                sqlConn.Close();
            }
        }

        public void ADD_ACRTAACRTB_TB_WKF_EXTERNAL_TASK(string TA001, string TA002)
        {
            DataTable DT = SEARCHACRTAACRTB(TA001, TA002);
            DataTable DTUPFDEP = SEARCHUOFDEP(DT.Rows[0]["CREATOR"].ToString());

            string account = DT.Rows[0]["CREATOR"].ToString();
            string groupId = DT.Rows[0]["GROUP_ID"].ToString();
            string jobTitleId = DT.Rows[0]["TITLE_ID"].ToString();
            string fillerName = DT.Rows[0]["MV002"].ToString();
            string fillerUserGuid = DT.Rows[0]["USER_GUID"].ToString();

            string DEPNAME = DTUPFDEP.Rows[0]["DEPNAME"].ToString();
            string DEPNO = DTUPFDEP.Rows[0]["DEPNO"].ToString();

            string EXTERNAL_FORM_NBR = DT.Rows[0]["TA001"].ToString().Trim() + DT.Rows[0]["TA002"].ToString().Trim();

            int rowscounts = 0;

            XmlDocument xmlDoc = new XmlDocument();
            //建立根節點
            XmlElement Form = xmlDoc.CreateElement("Form");

            //正式的id
            string FORMID = SEARCHFORM_UOF_VERSION_ID("ACRI02.結帳單");

            if (!string.IsNullOrEmpty(FORMID))
            {
                Form.SetAttribute("formVersionId", FORMID);
            }


            Form.SetAttribute("urgentLevel", "2");
            //加入節點底下
            xmlDoc.AppendChild(Form);

            ////建立節點Applicant
            XmlElement Applicant = xmlDoc.CreateElement("Applicant");
            Applicant.SetAttribute("account", account);
            Applicant.SetAttribute("groupId", groupId);
            Applicant.SetAttribute("jobTitleId", jobTitleId);
            //加入節點底下
            Form.AppendChild(Applicant);

            //建立節點 Comment
            XmlElement Comment = xmlDoc.CreateElement("Comment");
            Comment.InnerText = "申請者意見";
            //加入至節點底下
            Applicant.AppendChild(Comment);

            //建立節點 FormFieldValue
            XmlElement FormFieldValue = xmlDoc.CreateElement("FormFieldValue");
            //加入至節點底下
            Form.AppendChild(FormFieldValue);

            //建立節點FieldItem
            //ID 表單編號	
            XmlElement FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "ID");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TA001	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA001");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA001"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA002
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA002");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA002"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA003
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA003");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA003"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA004
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA004");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA004"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA005
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA005");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA005"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA007
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA007");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA007"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA008
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA008");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA008"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA009
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA009");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA009"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA010
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA010");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA010"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA011
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA011");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA011"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA012
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA012");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA012"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA015
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA015");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA015"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA016
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA016");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA016"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA017
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA017");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA017"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA018
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA018");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA018"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA020
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA020");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA020"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA029
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA029");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA029"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA030
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA030");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA030"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA031
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA031");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA031"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA041
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA041");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA041"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA042
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA042");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA042"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA043
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA043");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA043"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);


            //DataGrid
            //建立節點FieldItem
            //明細
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "DETAILS");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點 DataGrid
            XmlElement DataGrid = xmlDoc.CreateElement("DataGrid");
            //DataGrid 加入至 TB 節點底下
            XmlNode DETAILS07 = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='DETAILS']");
            DETAILS07.AppendChild(DataGrid);


            foreach (DataRow od in DT.Rows)
            {
                // 新增 Row
                XmlElement Row = xmlDoc.CreateElement("Row");
                Row.SetAttribute("order", (rowscounts).ToString());

                //Row	TB001
                XmlElement Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB001");
                Cell.SetAttribute("fieldValue", od["TB001"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB002
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB002");
                Cell.SetAttribute("fieldValue", od["TB002"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB003
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB003");
                Cell.SetAttribute("fieldValue", od["TB003"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB004
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB004");
                Cell.SetAttribute("fieldValue", od["TB004"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB005
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB005");
                Cell.SetAttribute("fieldValue", od["TB005"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB006
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB006");
                Cell.SetAttribute("fieldValue", od["TB006"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB007
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB007");
                Cell.SetAttribute("fieldValue", od["TB007"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB008
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB008");
                Cell.SetAttribute("fieldValue", od["TB008"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB009
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB009");
                Cell.SetAttribute("fieldValue", od["TB009"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB010
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB010");
                Cell.SetAttribute("fieldValue", od["TB010"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB011
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB011");
                Cell.SetAttribute("fieldValue", od["TB011"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB013
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB013");
                Cell.SetAttribute("fieldValue", od["TB013"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB017
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB017");
                Cell.SetAttribute("fieldValue", od["TB017"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB018
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB018");
                Cell.SetAttribute("fieldValue", od["TB018"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB019
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB019");
                Cell.SetAttribute("fieldValue", od["TB019"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB020
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB020");
                Cell.SetAttribute("fieldValue", od["TB020"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB021
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB021");
                Cell.SetAttribute("fieldValue", od["TB021"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);





                rowscounts = rowscounts + 1;

                //DataGrid PURTM
                XmlNode DataGridS = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='DETAILS']/DataGrid");
                DataGridS.AppendChild(Row);

            }


            ////用ADDTACK，直接啟動起單
            //ADDTACK(Form);

            //ADD TO DB
            ////string connectionString = ConfigurationManager.ConnectionStrings["dbUOF"].ToString();

            //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
            //sqlConn = new SqlConnection(connectionString);

            //20210902密
            Class1 TKID = new Class1();//用new 建立類別實體
            SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

            //資料庫使用者密碼解密
            sqlsb.Password = TKID.Decryption(sqlsb.Password);
            sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

            String connectionString;
            sqlConn = new SqlConnection(sqlsb.ConnectionString);
            connectionString = sqlConn.ConnectionString.ToString();

            StringBuilder queryString = new StringBuilder();




            queryString.AppendFormat(@" INSERT INTO [{0}].dbo.TB_WKF_EXTERNAL_TASK
                                         (EXTERNAL_TASK_ID,FORM_INFO,STATUS,EXTERNAL_FORM_NBR)
                                        VALUES (NEWID(),@XML,2,'{1}')
                                        ", DBNAME, EXTERNAL_FORM_NBR);

            try
            {
                using (SqlConnection connection = new SqlConnection(connectionString))
                {

                    SqlCommand command = new SqlCommand(queryString.ToString(), connection);
                    command.Parameters.Add("@XML", SqlDbType.NVarChar).Value = Form.OuterXml;

                    command.Connection.Open();

                    int count = command.ExecuteNonQuery();

                    connection.Close();
                    connection.Dispose();

                }
            }
            catch
            {

            }
            finally
            {

            }

        }

        public DataTable SEARCHACRTAACRTB(string TA001, string TA002)
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);


                sbSql.Clear();
                sbSqlQuery.Clear();

                //庫存數量看LA009 IN ('20004','20006','20008','20019','20020'

                sbSql.AppendFormat(@"  
                                   SELECT *
                                    ,USER_GUID,NAME
                                    ,(SELECT TOP 1 GROUP_ID FROM [192.168.1.223].[UOF].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'GROUP_ID'
                                    ,(SELECT TOP 1 TITLE_ID FROM [192.168.1.223].[UOF].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'TITLE_ID'
                                    FROM 
                                    (
                                    SELECT 
                                    ACRTA.CREATOR
                                    ,TA001
                                    ,TA002
                                    ,TA003
                                    ,TA004
                                    ,TA005
                                    ,TA007
                                    ,TA008
                                    ,TA009
                                    ,TA010
                                    ,TA011
                                    ,TA012
                                    ,TA015
                                    ,TA016
                                    ,TA017
                                    ,TA018
                                    ,TA020
                                    ,TA029
                                    ,TA030
                                    ,TA031
                                    ,TA041
                                    ,TA042
                                    ,TA043
                                    ,TB001
                                    ,TB002
                                    ,TB003
                                    ,TB004
                                    ,TB005
                                    ,TB006
                                    ,TB007
                                    ,TB008
                                    ,TB009
                                    ,TB010
                                    ,TB011
                                    ,TB013
                                    ,TB017
                                    ,TB018
                                    ,TB019
                                    ,TB020
                                    ,TB021
                                    

                                    ,[TB_EB_USER].USER_GUID,NAME
                                    ,(SELECT TOP 1 MV002 FROM [TK].dbo.CMSMV WHERE MV001=ACRTA.CREATOR) AS 'MV002'
                                    FROM [TK].dbo.ACRTB,[TK].dbo.ACRTA
                                    LEFT JOIN [192.168.1.223].[UOF].[dbo].[TB_EB_USER] ON [TB_EB_USER].ACCOUNT= ACRTA.CREATOR COLLATE Chinese_Taiwan_Stroke_BIN

                                    WHERE TA001=TB001 AND TA002=TB002 
                                    AND TA001='{0}' AND TA002='{1}'
                                    ) AS TEMP
                              
                                    ", TA001, TA002);


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    return ds1.Tables["ds1"];

                }
                else
                {
                    return null;
                }

            }
            catch
            {
                return null;
            }
            finally
            {
                sqlConn.Close();
            }
        }

        public void ADDUOFACRTCACRTD()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp22"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                DataSet ds1 = new DataSet();
                SqlDataAdapter adapter1 = new SqlDataAdapter();
                SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();

                sbSql.Clear();
                sbSqlQuery.Clear();

                //TL006='N' AND (UDF01 IN ('Y','y') ) 
                sbSql.AppendFormat(@" 
                                    SELECT TC001,TC002,UDF01
                                    FROM [TK].dbo.ACRTC
                                    WHERE TC008='N'
                                    AND UDF01 IN ('Y','y')
                                    ORDER BY TC001,TC002


                                    ");

                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");


                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    foreach (DataRow dr in ds1.Tables["ds1"].Rows)
                    {
                        ADD_ACRTCACRTD_TB_WKF_EXTERNAL_TASK(dr["TC001"].ToString().Trim(), dr["TC002"].ToString().Trim());
                    }

                }
                else
                {

                }

            }
            catch
            {

            }
            finally
            {
                sqlConn.Close();
            }

            UPDATEACRTCUDF01();
        }


        public void UPDATEACRTCUDF01()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dbconn"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sqlConn.Close();
                sqlConn.Open();
                tran = sqlConn.BeginTransaction();

                sbSql.Clear();

                sbSql.AppendFormat(@"
                                    UPDATE  [TK].dbo.ACRTC
                                    SET UDF01 = 'UOF'
                                    WHERE  UDF01 IN ('Y','y')                                        

                                    ");

                cmd.Connection = sqlConn;
                cmd.CommandTimeout = 60;
                cmd.CommandText = sbSql.ToString();
                cmd.Transaction = tran;
                result = cmd.ExecuteNonQuery();

                if (result == 0)
                {
                    tran.Rollback();    //交易取消
                }
                else
                {
                    tran.Commit();      //執行交易  
                }

            }
            catch
            {

            }

            finally
            {
                sqlConn.Close();
            }
        }

        public void ADD_ACRTCACRTD_TB_WKF_EXTERNAL_TASK(string TC001, string TC002)
        {
            DataTable DT = SEARCHACRTCACRTD(TC001, TC002);
            DataTable DTUPFDEP = SEARCHUOFDEP(DT.Rows[0]["CREATOR"].ToString());

            string account = DT.Rows[0]["CREATOR"].ToString();
            string groupId = DT.Rows[0]["GROUP_ID"].ToString();
            string jobTitleId = DT.Rows[0]["TITLE_ID"].ToString();
            string fillerName = DT.Rows[0]["MV002"].ToString();
            string fillerUserGuid = DT.Rows[0]["USER_GUID"].ToString();

            string DEPNAME = DTUPFDEP.Rows[0]["DEPNAME"].ToString();
            string DEPNO = DTUPFDEP.Rows[0]["DEPNO"].ToString();

            string EXTERNAL_FORM_NBR = DT.Rows[0]["TC001"].ToString().Trim() + DT.Rows[0]["TC002"].ToString().Trim();

            int rowscounts = 0;

            XmlDocument xmlDoc = new XmlDocument();
            //建立根節點
            XmlElement Form = xmlDoc.CreateElement("Form");

            //正式的id
            string FORMID = SEARCHFORM_UOF_VERSION_ID("ACRI03.收款單");

            if (!string.IsNullOrEmpty(FORMID))
            {
                Form.SetAttribute("formVersionId", FORMID);
            }


            Form.SetAttribute("urgentLevel", "2");
            //加入節點底下
            xmlDoc.AppendChild(Form);

            ////建立節點Applicant
            XmlElement Applicant = xmlDoc.CreateElement("Applicant");
            Applicant.SetAttribute("account", account);
            Applicant.SetAttribute("groupId", groupId);
            Applicant.SetAttribute("jobTitleId", jobTitleId);
            //加入節點底下
            Form.AppendChild(Applicant);

            //建立節點 Comment
            XmlElement Comment = xmlDoc.CreateElement("Comment");
            Comment.InnerText = "申請者意見";
            //加入至節點底下
            Applicant.AppendChild(Comment);

            //建立節點 FormFieldValue
            XmlElement FormFieldValue = xmlDoc.CreateElement("FormFieldValue");
            //加入至節點底下
            Form.AppendChild(FormFieldValue);

            //建立節點FieldItem
            //ID 表單編號	
            XmlElement FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "ID");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC001	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC001");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC001"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TC002
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC002");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC002"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TC003
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC003");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC003"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TC004
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC004");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC004"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TC005
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC005");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC005"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TC011
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC011");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC011"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TC012
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC012");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC012"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TC013
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC013");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC013"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TC014
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC014");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC014"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);



            //DataGrid
            //建立節點FieldItem
            //明細
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "DETAILS");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點 DataGrid
            XmlElement DataGrid = xmlDoc.CreateElement("DataGrid");
            //DataGrid 加入至 TB 節點底下
            XmlNode DETAILS07 = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='DETAILS']");
            DETAILS07.AppendChild(DataGrid);


            foreach (DataRow od in DT.Rows)
            {
                // 新增 Row
                XmlElement Row = xmlDoc.CreateElement("Row");
                Row.SetAttribute("order", (rowscounts).ToString());

                //Row	TD001
                XmlElement Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD001");
                Cell.SetAttribute("fieldValue", od["TD001"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD002
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD002");
                Cell.SetAttribute("fieldValue", od["TD002"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD003
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD003");
                Cell.SetAttribute("fieldValue", od["TD003"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD004
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD004");
                Cell.SetAttribute("fieldValue", od["TD004"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD005
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD005");
                Cell.SetAttribute("fieldValue", od["TD005"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD006
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD006");
                Cell.SetAttribute("fieldValue", od["TD006"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD007
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD007");
                Cell.SetAttribute("fieldValue", od["TD007"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD008
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD008");
                Cell.SetAttribute("fieldValue", od["TD008"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD009
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD009");
                Cell.SetAttribute("fieldValue", od["TD009"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD010
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD010");
                Cell.SetAttribute("fieldValue", od["TD010"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD011
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD011");
                Cell.SetAttribute("fieldValue", od["TD011"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD012
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD012");
                Cell.SetAttribute("fieldValue", od["TD012"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD013
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD013");
                Cell.SetAttribute("fieldValue", od["TD013"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD014
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD014");
                Cell.SetAttribute("fieldValue", od["TD014"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD015
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD015");
                Cell.SetAttribute("fieldValue", od["TD015"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD016
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD016");
                Cell.SetAttribute("fieldValue", od["TD016"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD017
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD017");
                Cell.SetAttribute("fieldValue", od["TD017"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD022
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD022");
                Cell.SetAttribute("fieldValue", od["TD022"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);






                rowscounts = rowscounts + 1;

                //DataGrid PURTM
                XmlNode DataGridS = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='DETAILS']/DataGrid");
                DataGridS.AppendChild(Row);

            }


            ////用ADDTACK，直接啟動起單
            //ADDTACK(Form);

            //ADD TO DB
            ////string connectionString = ConfigurationManager.ConnectionStrings["dbUOF"].ToString();

            //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
            //sqlConn = new SqlConnection(connectionString);

            //20210902密
            Class1 TKID = new Class1();//用new 建立類別實體
            SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

            //資料庫使用者密碼解密
            sqlsb.Password = TKID.Decryption(sqlsb.Password);
            sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

            String connectionString;
            sqlConn = new SqlConnection(sqlsb.ConnectionString);
            connectionString = sqlConn.ConnectionString.ToString();

            StringBuilder queryString = new StringBuilder();




            queryString.AppendFormat(@" INSERT INTO [{0}].dbo.TB_WKF_EXTERNAL_TASK
                                         (EXTERNAL_TASK_ID,FORM_INFO,STATUS,EXTERNAL_FORM_NBR)
                                        VALUES (NEWID(),@XML,2,'{1}')
                                        ", DBNAME, EXTERNAL_FORM_NBR);

            try
            {
                using (SqlConnection connection = new SqlConnection(connectionString))
                {

                    SqlCommand command = new SqlCommand(queryString.ToString(), connection);
                    command.Parameters.Add("@XML", SqlDbType.NVarChar).Value = Form.OuterXml;

                    command.Connection.Open();

                    int count = command.ExecuteNonQuery();

                    connection.Close();
                    connection.Dispose();

                }
            }
            catch
            {

            }
            finally
            {

            }

        }

        public DataTable SEARCHACRTCACRTD(string TC001, string TC002)
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);


                sbSql.Clear();
                sbSqlQuery.Clear();

                //庫存數量看LA009 IN ('20004','20006','20008','20019','20020'

                sbSql.AppendFormat(@"  
                                  SELECT *
                                    ,USER_GUID,NAME
                                    ,(SELECT TOP 1 GROUP_ID FROM [192.168.1.223].[UOF].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'GROUP_ID'
                                    ,(SELECT TOP 1 TITLE_ID FROM [192.168.1.223].[UOF].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'TITLE_ID'
                                    FROM 
                                    (
                                    SELECT 
                                    ACRTC.CREATOR
                                    ,TC001
                                    ,TC002
                                    ,TC003
                                    ,TC004
                                    ,TC005
                                    ,TC011
                                    ,TC012
                                    ,TC013
                                    ,TC014
                                    ,TD001
                                    ,TD002
                                    ,TD003
                                    ,TD004
                                    ,TD005
                                    ,TD006
                                    ,TD007
                                    ,TD008
                                    ,TD009
                                    ,TD010
                                    ,TD011
                                    ,TD012
                                    ,TD013
                                    ,TD014
                                    ,TD015
                                    ,TD016
                                    ,TD017
                                    ,TD022

                                    

                                    ,[TB_EB_USER].USER_GUID,NAME
                                    ,(SELECT TOP 1 MV002 FROM [TK].dbo.CMSMV WHERE MV001=ACRTC.CREATOR) AS 'MV002'
                                    FROM [TK].dbo.ACRTD,[TK].dbo.ACRTC
                                    LEFT JOIN [192.168.1.223].[UOF].[dbo].[TB_EB_USER] ON [TB_EB_USER].ACCOUNT= ACRTC.CREATOR COLLATE Chinese_Taiwan_Stroke_BIN

                                    WHERE TC001=TD001 AND TC002=TD002 
                                    AND TC001='{0}' AND TC002='{1}'
                                    ) AS TEMP
                              
                                    ", TC001, TC002);


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    return ds1.Tables["ds1"];

                }
                else
                {
                    return null;
                }

            }
            catch
            {
                return null;
            }
            finally
            {
                sqlConn.Close();
            }
        }

        public void ADDUOFACPTAACPTB()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp22"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                DataSet ds1 = new DataSet();
                SqlDataAdapter adapter1 = new SqlDataAdapter();
                SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();

                sbSql.Clear();
                sbSqlQuery.Clear();

                //TL006='N' AND (UDF01 IN ('Y','y') ) 
                sbSql.AppendFormat(@" 
                                    SELECT TA001,TA002,UDF01
                                    FROM [TK].dbo.ACPTA
                                    WHERE TA024='N'
                                    AND UDF01 IN ('Y','y')
                                    ORDER BY TA001,TA002


                                    ");

                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");


                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    foreach (DataRow dr in ds1.Tables["ds1"].Rows)
                    {
                        ADD_ACPTAACPTB_TB_WKF_EXTERNAL_TASK(dr["TA001"].ToString().Trim(), dr["TA002"].ToString().Trim());
                    }

                }
                else
                {

                }

            }
            catch
            {

            }
            finally
            {
                sqlConn.Close();
            }

            UPDATEACPTAUDF01();
        }


        public void UPDATEACPTAUDF01()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dbconn"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sqlConn.Close();
                sqlConn.Open();
                tran = sqlConn.BeginTransaction();

                sbSql.Clear();

                sbSql.AppendFormat(@"
                                    UPDATE  [TK].dbo.ACPTA
                                    SET UDF01 = 'UOF'
                                    WHERE  UDF01 IN ('Y','y')                                        

                                    ");

                cmd.Connection = sqlConn;
                cmd.CommandTimeout = 60;
                cmd.CommandText = sbSql.ToString();
                cmd.Transaction = tran;
                result = cmd.ExecuteNonQuery();

                if (result == 0)
                {
                    tran.Rollback();    //交易取消
                }
                else
                {
                    tran.Commit();      //執行交易  
                }

            }
            catch
            {

            }

            finally
            {
                sqlConn.Close();
            }
        }
        public void ADD_ACPTAACPTB_TB_WKF_EXTERNAL_TASK(string TA001, string TA002)
        {
            DataTable DT = SEARCHACPTAACPTB(TA001, TA002);
            DataTable DTUPFDEP = SEARCHUOFDEP(DT.Rows[0]["CREATOR"].ToString());

            string account = DT.Rows[0]["CREATOR"].ToString();
            string groupId = DT.Rows[0]["GROUP_ID"].ToString();
            string jobTitleId = DT.Rows[0]["TITLE_ID"].ToString();
            string fillerName = DT.Rows[0]["MV002"].ToString();
            string fillerUserGuid = DT.Rows[0]["USER_GUID"].ToString();

            string DEPNAME = DTUPFDEP.Rows[0]["DEPNAME"].ToString();
            string DEPNO = DTUPFDEP.Rows[0]["DEPNO"].ToString();

            string EXTERNAL_FORM_NBR = DT.Rows[0]["TA001"].ToString().Trim() + DT.Rows[0]["TA002"].ToString().Trim();

            int rowscounts = 0;

            XmlDocument xmlDoc = new XmlDocument();
            //建立根節點
            XmlElement Form = xmlDoc.CreateElement("Form");

            //正式的id
            string FORMID = SEARCHFORM_UOF_VERSION_ID("ACPI02.應付憑單");

            if (!string.IsNullOrEmpty(FORMID))
            {
                Form.SetAttribute("formVersionId", FORMID);
            }


            Form.SetAttribute("urgentLevel", "2");
            //加入節點底下
            xmlDoc.AppendChild(Form);

            ////建立節點Applicant
            XmlElement Applicant = xmlDoc.CreateElement("Applicant");
            Applicant.SetAttribute("account", account);
            Applicant.SetAttribute("groupId", groupId);
            Applicant.SetAttribute("jobTitleId", jobTitleId);
            //加入節點底下
            Form.AppendChild(Applicant);

            //建立節點 Comment
            XmlElement Comment = xmlDoc.CreateElement("Comment");
            Comment.InnerText = "申請者意見";
            //加入至節點底下
            Applicant.AppendChild(Comment);

            //建立節點 FormFieldValue
            XmlElement FormFieldValue = xmlDoc.CreateElement("FormFieldValue");
            //加入至節點底下
            Form.AppendChild(FormFieldValue);

            //建立節點FieldItem
            //ID 表單編號	
            XmlElement FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "ID");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TA001	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA001");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA001"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA002
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA002");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA002"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA003
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA003");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA003"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA004
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA004");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA004"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA006
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA006");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA006"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA008
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA008");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA008"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA009
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA009");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA009"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA010
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA010");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA010"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA011
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA011");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA011"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA012
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA012");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA012"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA014
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA014");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA014"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA015
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA015");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA015"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA016
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA016");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA016"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA017
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA017");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA017"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA019
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA019");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA019"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA028
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA028");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA028"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA029
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA029");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA029"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA030
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA030");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA030"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA037
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA037");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA037"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA038
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA038");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA038"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);



            //DataGrid
            //建立節點FieldItem
            //明細
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "DETAILS");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點 DataGrid
            XmlElement DataGrid = xmlDoc.CreateElement("DataGrid");
            //DataGrid 加入至 TB 節點底下
            XmlNode DETAILS07 = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='DETAILS']");
            DETAILS07.AppendChild(DataGrid);


            foreach (DataRow od in DT.Rows)
            {
                // 新增 Row
                XmlElement Row = xmlDoc.CreateElement("Row");
                Row.SetAttribute("order", (rowscounts).ToString());

                //Row	TB001
                XmlElement Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB001");
                Cell.SetAttribute("fieldValue", od["TB001"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB002
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB002");
                Cell.SetAttribute("fieldValue", od["TB002"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB003
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB003");
                Cell.SetAttribute("fieldValue", od["TB003"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB004
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB004");
                Cell.SetAttribute("fieldValue", od["TB004"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB005
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB005");
                Cell.SetAttribute("fieldValue", od["TB005"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB006
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB006");
                Cell.SetAttribute("fieldValue", od["TB006"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB007
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB007");
                Cell.SetAttribute("fieldValue", od["TB007"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB008
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB008");
                Cell.SetAttribute("fieldValue", od["TB008"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB009
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB009");
                Cell.SetAttribute("fieldValue", od["TB009"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB013
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB013");
                Cell.SetAttribute("fieldValue", od["TB013"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB014
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB014");
                Cell.SetAttribute("fieldValue", od["TB014"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB017
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB017");
                Cell.SetAttribute("fieldValue", od["TB017"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB018
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB018");
                Cell.SetAttribute("fieldValue", od["TB018"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);







                rowscounts = rowscounts + 1;

                //DataGrid PURTM
                XmlNode DataGridS = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='DETAILS']/DataGrid");
                DataGridS.AppendChild(Row);

            }


            ////用ADDTACK，直接啟動起單
            //ADDTACK(Form);

            //ADD TO DB
            ////string connectionString = ConfigurationManager.ConnectionStrings["dbUOF"].ToString();

            //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
            //sqlConn = new SqlConnection(connectionString);

            //20210902密
            Class1 TKID = new Class1();//用new 建立類別實體
            SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

            //資料庫使用者密碼解密
            sqlsb.Password = TKID.Decryption(sqlsb.Password);
            sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

            String connectionString;
            sqlConn = new SqlConnection(sqlsb.ConnectionString);
            connectionString = sqlConn.ConnectionString.ToString();

            StringBuilder queryString = new StringBuilder();




            queryString.AppendFormat(@" INSERT INTO [{0}].dbo.TB_WKF_EXTERNAL_TASK
                                         (EXTERNAL_TASK_ID,FORM_INFO,STATUS,EXTERNAL_FORM_NBR)
                                        VALUES (NEWID(),@XML,2,'{1}')
                                        ", DBNAME, EXTERNAL_FORM_NBR);

            try
            {
                using (SqlConnection connection = new SqlConnection(connectionString))
                {

                    SqlCommand command = new SqlCommand(queryString.ToString(), connection);
                    command.Parameters.Add("@XML", SqlDbType.NVarChar).Value = Form.OuterXml;

                    command.Connection.Open();

                    int count = command.ExecuteNonQuery();

                    connection.Close();
                    connection.Dispose();

                }
            }
            catch
            {

            }
            finally
            {

            }

        }

        public DataTable SEARCHACPTAACPTB(string TA001, string TA002)
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);


                sbSql.Clear();
                sbSqlQuery.Clear();

                //庫存數量看LA009 IN ('20004','20006','20008','20019','20020'

                sbSql.AppendFormat(@"  
                                     SELECT *
                                    ,USER_GUID,NAME
                                    ,(SELECT TOP 1 GROUP_ID FROM [192.168.1.223].[UOF].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'GROUP_ID'
                                    ,(SELECT TOP 1 TITLE_ID FROM [192.168.1.223].[UOF].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'TITLE_ID'
                                    FROM 
                                    (
                                    SELECT 
                                    ACPTA.CREATOR                                   
                                    ,TA001
                                    ,TA002
                                    ,TA003
                                    ,TA004
                                    ,TA006
                                    ,TA008
                                    ,TA009
                                    ,TA010
                                    ,TA011
                                    ,TA012
                                    ,TA014
                                    ,TA015
                                    ,TA016
                                    ,TA017
                                    ,TA019
                                    ,TA028
                                    ,TA029
                                    ,TA030
                                    ,TA037
                                    ,TA038
                                    ,TB001
                                    ,TB002
                                    ,TB003
                                    ,TB004
                                    ,TB005
                                    ,TB006
                                    ,TB007
                                    ,TB008
                                    ,TB009
                                    ,TB013
                                    ,TB014
                                    ,TB017
                                    ,TB018
                                   

                                    

                                    ,[TB_EB_USER].USER_GUID,NAME
                                    ,(SELECT TOP 1 MV002 FROM [TK].dbo.CMSMV WHERE MV001=ACPTA.CREATOR) AS 'MV002'
                                    FROM [TK].dbo.ACPTB,[TK].dbo.ACPTA
                                    LEFT JOIN [192.168.1.223].[UOF].[dbo].[TB_EB_USER] ON [TB_EB_USER].ACCOUNT= ACPTA.CREATOR COLLATE Chinese_Taiwan_Stroke_BIN

                                    WHERE TA001=TB001 AND TA002=TB002 
                                    AND TA001='{0}' AND TA002='{1}'
                                    ) AS TEMP
                              
                                    ", TA001, TA002);


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    return ds1.Tables["ds1"];

                }
                else
                {
                    return null;
                }

            }
            catch
            {
                return null;
            }
            finally
            {
                sqlConn.Close();
            }
        }

        public void ADDUOFACPTCACPTB()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp22"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                DataSet ds1 = new DataSet();
                SqlDataAdapter adapter1 = new SqlDataAdapter();
                SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();

                sbSql.Clear();
                sbSqlQuery.Clear();

                //TL006='N' AND (UDF01 IN ('Y','y') ) 
                sbSql.AppendFormat(@" 
                                    SELECT TC001,TC002,UDF01
                                    FROM [TK].dbo.ACPTC
                                    WHERE TC008='N'
                                    AND UDF01 IN ('Y','y')
                                    ORDER BY TC001,TC002


                                    ");

                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");


                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    foreach (DataRow dr in ds1.Tables["ds1"].Rows)
                    {
                        ADD_ACPTCACPTD_TB_WKF_EXTERNAL_TASK(dr["TC001"].ToString().Trim(), dr["TC002"].ToString().Trim());
                    }

                }
                else
                {

                }

            }
            catch
            {

            }
            finally
            {
                sqlConn.Close();
            }

            UPDATEACPTCUDF01();
        }


        public void UPDATEACPTCUDF01()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dbconn"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sqlConn.Close();
                sqlConn.Open();
                tran = sqlConn.BeginTransaction();

                sbSql.Clear();

                sbSql.AppendFormat(@"
                                    UPDATE [TK].dbo.ACPTC
                                    SET UDF01 = 'UOF'
                                    WHERE  UDF01 IN ('Y','y')                                        

                                    ");

                cmd.Connection = sqlConn;
                cmd.CommandTimeout = 60;
                cmd.CommandText = sbSql.ToString();
                cmd.Transaction = tran;
                result = cmd.ExecuteNonQuery();

                if (result == 0)
                {
                    tran.Rollback();    //交易取消
                }
                else
                {
                    tran.Commit();      //執行交易  
                }

            }
            catch
            {

            }

            finally
            {
                sqlConn.Close();
            }
        }

        public void ADD_ACPTCACPTD_TB_WKF_EXTERNAL_TASK(string TC001, string TC002)
        {
            DataTable DT = SEARCHACPTCACPTD(TC001, TC002);
            DataTable DTUPFDEP = SEARCHUOFDEP(DT.Rows[0]["CREATOR"].ToString());

            string account = DT.Rows[0]["CREATOR"].ToString();
            string groupId = DT.Rows[0]["GROUP_ID"].ToString();
            string jobTitleId = DT.Rows[0]["TITLE_ID"].ToString();
            string fillerName = DT.Rows[0]["MV002"].ToString();
            string fillerUserGuid = DT.Rows[0]["USER_GUID"].ToString();

            string DEPNAME = DTUPFDEP.Rows[0]["DEPNAME"].ToString();
            string DEPNO = DTUPFDEP.Rows[0]["DEPNO"].ToString();

            string EXTERNAL_FORM_NBR = DT.Rows[0]["TC001"].ToString().Trim() + DT.Rows[0]["TC002"].ToString().Trim();

            int rowscounts = 0;

            XmlDocument xmlDoc = new XmlDocument();
            //建立根節點
            XmlElement Form = xmlDoc.CreateElement("Form");

            //正式的id
            string FORMID = SEARCHFORM_UOF_VERSION_ID("ACPI03.付款單");

            if (!string.IsNullOrEmpty(FORMID))
            {
                Form.SetAttribute("formVersionId", FORMID);
            }


            Form.SetAttribute("urgentLevel", "2");
            //加入節點底下
            xmlDoc.AppendChild(Form);

            ////建立節點Applicant
            XmlElement Applicant = xmlDoc.CreateElement("Applicant");
            Applicant.SetAttribute("account", account);
            Applicant.SetAttribute("groupId", groupId);
            Applicant.SetAttribute("jobTitleId", jobTitleId);
            //加入節點底下
            Form.AppendChild(Applicant);

            //建立節點 Comment
            XmlElement Comment = xmlDoc.CreateElement("Comment");
            Comment.InnerText = "申請者意見";
            //加入至節點底下
            Applicant.AppendChild(Comment);

            //建立節點 FormFieldValue
            XmlElement FormFieldValue = xmlDoc.CreateElement("FormFieldValue");
            //加入至節點底下
            Form.AppendChild(FormFieldValue);

            //建立節點FieldItem
            //ID 表單編號	
            XmlElement FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "ID");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC001	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC001");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC001"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TC002
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC002");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC002"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TC003
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC003");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC003"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TC004
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC004");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC004"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TC005
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC005");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC005"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TC011
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC011");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC011"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TC012
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC012");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC012"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TC013
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC013");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC013"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TC014
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC014");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC014"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TC016
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC016");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC016"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //DataGrid
            //建立節點FieldItem
            //明細
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "DETAILS");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點 DataGrid
            XmlElement DataGrid = xmlDoc.CreateElement("DataGrid");
            //DataGrid 加入至 TB 節點底下
            XmlNode DETAILS07 = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='DETAILS']");
            DETAILS07.AppendChild(DataGrid);


            foreach (DataRow od in DT.Rows)
            {
                // 新增 Row
                XmlElement Row = xmlDoc.CreateElement("Row");
                Row.SetAttribute("order", (rowscounts).ToString());

                //Row	TD001
                XmlElement Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD001");
                Cell.SetAttribute("fieldValue", od["TD001"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD002
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD002");
                Cell.SetAttribute("fieldValue", od["TD002"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD003
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD003");
                Cell.SetAttribute("fieldValue", od["TD003"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD004
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD004");
                Cell.SetAttribute("fieldValue", od["TD004"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD005
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD005");
                Cell.SetAttribute("fieldValue", od["TD005"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD006
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD006");
                Cell.SetAttribute("fieldValue", od["TD006"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD007
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD007");
                Cell.SetAttribute("fieldValue", od["TD007"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD008
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD008");
                Cell.SetAttribute("fieldValue", od["TD008"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD009
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD009");
                Cell.SetAttribute("fieldValue", od["TD009"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD010
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD010");
                Cell.SetAttribute("fieldValue", od["TD010"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD011
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD011");
                Cell.SetAttribute("fieldValue", od["TD011"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD012
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD012");
                Cell.SetAttribute("fieldValue", od["TD012"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD013
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD013");
                Cell.SetAttribute("fieldValue", od["TD013"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD014
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD014");
                Cell.SetAttribute("fieldValue", od["TD014"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD015
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD015");
                Cell.SetAttribute("fieldValue", od["TD015"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD016
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD016");
                Cell.SetAttribute("fieldValue", od["TD016"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD017
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD017");
                Cell.SetAttribute("fieldValue", od["TD017"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD022
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD022");
                Cell.SetAttribute("fieldValue", od["TD022"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD023
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD023");
                Cell.SetAttribute("fieldValue", od["TD023"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);






                rowscounts = rowscounts + 1;

                //DataGrid PURTM
                XmlNode DataGridS = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='DETAILS']/DataGrid");
                DataGridS.AppendChild(Row);

            }


            ////用ADDTACK，直接啟動起單
            //ADDTACK(Form);

            //ADD TO DB
            ////string connectionString = ConfigurationManager.ConnectionStrings["dbUOF"].ToString();

            //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
            //sqlConn = new SqlConnection(connectionString);

            //20210902密
            Class1 TKID = new Class1();//用new 建立類別實體
            SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

            //資料庫使用者密碼解密
            sqlsb.Password = TKID.Decryption(sqlsb.Password);
            sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

            String connectionString;
            sqlConn = new SqlConnection(sqlsb.ConnectionString);
            connectionString = sqlConn.ConnectionString.ToString();

            StringBuilder queryString = new StringBuilder();




            queryString.AppendFormat(@" INSERT INTO [{0}].dbo.TB_WKF_EXTERNAL_TASK
                                         (EXTERNAL_TASK_ID,FORM_INFO,STATUS,EXTERNAL_FORM_NBR)
                                        VALUES (NEWID(),@XML,2,'{1}')
                                        ", DBNAME, EXTERNAL_FORM_NBR);

            try
            {
                using (SqlConnection connection = new SqlConnection(connectionString))
                {

                    SqlCommand command = new SqlCommand(queryString.ToString(), connection);
                    command.Parameters.Add("@XML", SqlDbType.NVarChar).Value = Form.OuterXml;

                    command.Connection.Open();

                    int count = command.ExecuteNonQuery();

                    connection.Close();
                    connection.Dispose();

                }
            }
            catch
            {

            }
            finally
            {

            }

        }

        public DataTable SEARCHACPTCACPTD(string TC001, string TC002)
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);


                sbSql.Clear();
                sbSqlQuery.Clear();

                //庫存數量看LA009 IN ('20004','20006','20008','20019','20020'

                sbSql.AppendFormat(@"  
                                     SELECT *
                                    ,USER_GUID,NAME
                                    ,(SELECT TOP 1 GROUP_ID FROM [192.168.1.223].[UOF].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'GROUP_ID'
                                    ,(SELECT TOP 1 TITLE_ID FROM [192.168.1.223].[UOF].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'TITLE_ID'
                                    FROM 
                                    (
                                    SELECT 
                                    ACPTC.CREATOR
                                    ,TC001
                                    ,TC002
                                    ,TC003
                                    ,TC004
                                    ,TC005
                                    ,TC011
                                    ,TC012
                                    ,TC013
                                    ,TC014
                                    ,TC016
                                    ,TD001
                                    ,TD002
                                    ,TD003
                                    ,TD004
                                    ,TD005
                                    ,TD006
                                    ,TD007
                                    ,TD008
                                    ,TD009
                                    ,TD010
                                    ,TD011
                                    ,TD012
                                    ,TD013
                                    ,TD014
                                    ,TD015
                                    ,TD022
                                    ,TD023
                                    ,TD017
                                    ,TD016
                                   

                                    ,[TB_EB_USER].USER_GUID,NAME
                                    ,(SELECT TOP 1 MV002 FROM [TK].dbo.CMSMV WHERE MV001=ACPTC.CREATOR) AS 'MV002'
                                    FROM [TK].dbo.ACPTD,[TK].dbo.ACPTC
                                    LEFT JOIN [192.168.1.223].[UOF].[dbo].[TB_EB_USER] ON [TB_EB_USER].ACCOUNT= ACPTC.CREATOR COLLATE Chinese_Taiwan_Stroke_BIN

                                    WHERE TC001=TD001 AND TC002=TD002 
                                    AND TC001='{0}' AND TC002='{1}'
                                    ) AS TEMP
                              
                                    ", TC001, TC002);


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    return ds1.Tables["ds1"];

                }
                else
                {
                    return null;
                }

            }
            catch
            {
                return null;
            }
            finally
            {
                sqlConn.Close();
            }
        }

        public void ADDUOFACTTAACTTB()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp22"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                DataSet ds1 = new DataSet();
                SqlDataAdapter adapter1 = new SqlDataAdapter();
                SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();

                sbSql.Clear();
                sbSqlQuery.Clear();

                //TL006='N' AND (UDF01 IN ('Y','y') ) 
                sbSql.AppendFormat(@" 
                                    SELECT TA001,TA002,UDF01
                                    FROM [TK].dbo.ACTTA
                                    WHERE TA010='N'
                                    AND UDF01 IN ('Y','y')
                                    ORDER BY TA001,TA002


                                    ");

                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");


                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    foreach (DataRow dr in ds1.Tables["ds1"].Rows)
                    {
                        ADD_ACTTAACTTB_TB_WKF_EXTERNAL_TASK(dr["TA001"].ToString().Trim(), dr["TA002"].ToString().Trim());
                    }

                }
                else
                {

                }

            }
            catch
            {

            }
            finally
            {
                sqlConn.Close();
            }

            UPDATEACTTAUDF01();
        }


        public void UPDATEACTTAUDF01()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dbconn"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sqlConn.Close();
                sqlConn.Open();
                tran = sqlConn.BeginTransaction();

                sbSql.Clear();

                sbSql.AppendFormat(@"
                                    UPDATE  [TK].dbo.ACTTA
                                    SET UDF01 = 'UOF'
                                    WHERE  UDF01 IN ('Y','y')                                        

                                    ");

                cmd.Connection = sqlConn;
                cmd.CommandTimeout = 60;
                cmd.CommandText = sbSql.ToString();
                cmd.Transaction = tran;
                result = cmd.ExecuteNonQuery();

                if (result == 0)
                {
                    tran.Rollback();    //交易取消
                }
                else
                {
                    tran.Commit();      //執行交易  
                }

            }
            catch
            {

            }

            finally
            {
                sqlConn.Close();
            }
        }

        public void ADD_ACTTAACTTB_TB_WKF_EXTERNAL_TASK(string TA001, string TA002)
        {
            DataTable DT = SEARCHACTTAACTTB(TA001, TA002);
            DataTable DTUPFDEP = SEARCHUOFDEP(DT.Rows[0]["CREATOR"].ToString());

            string account = DT.Rows[0]["CREATOR"].ToString();
            string groupId = DT.Rows[0]["GROUP_ID"].ToString();
            string jobTitleId = DT.Rows[0]["TITLE_ID"].ToString();
            string fillerName = DT.Rows[0]["MV002"].ToString();
            string fillerUserGuid = DT.Rows[0]["USER_GUID"].ToString();

            string DEPNAME = DTUPFDEP.Rows[0]["DEPNAME"].ToString();
            string DEPNO = DTUPFDEP.Rows[0]["DEPNO"].ToString();

            string EXTERNAL_FORM_NBR = DT.Rows[0]["TA001"].ToString().Trim() + DT.Rows[0]["TA002"].ToString().Trim();

            int rowscounts = 0;

            XmlDocument xmlDoc = new XmlDocument();
            //建立根節點
            XmlElement Form = xmlDoc.CreateElement("Form");

            //正式的id
            string FORMID = SEARCHFORM_UOF_VERSION_ID("ACTI10.會計傳票");

            if (!string.IsNullOrEmpty(FORMID))
            {
                Form.SetAttribute("formVersionId", FORMID);
            }


            Form.SetAttribute("urgentLevel", "2");
            //加入節點底下
            xmlDoc.AppendChild(Form);

            ////建立節點Applicant
            XmlElement Applicant = xmlDoc.CreateElement("Applicant");
            Applicant.SetAttribute("account", account);
            Applicant.SetAttribute("groupId", groupId);
            Applicant.SetAttribute("jobTitleId", jobTitleId);
            //加入節點底下
            Form.AppendChild(Applicant);

            //建立節點 Comment
            XmlElement Comment = xmlDoc.CreateElement("Comment");
            Comment.InnerText = "申請者意見";
            //加入至節點底下
            Applicant.AppendChild(Comment);

            //建立節點 FormFieldValue
            XmlElement FormFieldValue = xmlDoc.CreateElement("FormFieldValue");
            //加入至節點底下
            Form.AppendChild(FormFieldValue);

            //建立節點FieldItem
            //ID 表單編號	
            XmlElement FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "ID");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TA001	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA001");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA001"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA002
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA002");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA002"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA003
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA003");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA003"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA004
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA004");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA004"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA005
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA005");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA005"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA006
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA006");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA006"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA007
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA007");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA007"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA008
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA008");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA008"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA009
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA009");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA009"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA010
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA010");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA010"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA011
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA011");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA011"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA014
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA014");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA014"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA015
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA015");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA015"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA024
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA024");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA024"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

         



            //DataGrid
            //建立節點FieldItem
            //明細
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "DETAILS");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點 DataGrid
            XmlElement DataGrid = xmlDoc.CreateElement("DataGrid");
            //DataGrid 加入至 TB 節點底下
            XmlNode DETAILS07 = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='DETAILS']");
            DETAILS07.AppendChild(DataGrid);


            foreach (DataRow od in DT.Rows)
            {
                // 新增 Row
                XmlElement Row = xmlDoc.CreateElement("Row");
                Row.SetAttribute("order", (rowscounts).ToString());

                //Row	TB001
                XmlElement Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB001");
                Cell.SetAttribute("fieldValue", od["TB001"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB002
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB002");
                Cell.SetAttribute("fieldValue", od["TB002"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB003
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB003");
                Cell.SetAttribute("fieldValue", od["TB003"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB004
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB004");
                Cell.SetAttribute("fieldValue", od["TB004"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB005
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB005");
                Cell.SetAttribute("fieldValue", od["TB005"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB006
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB006");
                Cell.SetAttribute("fieldValue", od["TB006"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB007
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB007");
                Cell.SetAttribute("fieldValue", od["TB007"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB008
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB008");
                Cell.SetAttribute("fieldValue", od["TB008"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB009
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB009");
                Cell.SetAttribute("fieldValue", od["TB009"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB010
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB010");
                Cell.SetAttribute("fieldValue", od["TB010"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB011
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB011");
                Cell.SetAttribute("fieldValue", od["TB011"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB012
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB012");
                Cell.SetAttribute("fieldValue", od["TB012"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB013
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB013");
                Cell.SetAttribute("fieldValue", od["TB013"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB014
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB014");
                Cell.SetAttribute("fieldValue", od["TB014"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB017
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB017");
                Cell.SetAttribute("fieldValue", od["TB017"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB018
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB018");
                Cell.SetAttribute("fieldValue", od["TB018"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB021
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB021");
                Cell.SetAttribute("fieldValue", od["TB021"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB022
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB022");
                Cell.SetAttribute("fieldValue", od["TB022"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB023
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB023");
                Cell.SetAttribute("fieldValue", od["TB023"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB024
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB024");
                Cell.SetAttribute("fieldValue", od["TB024"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB025
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB025");
                Cell.SetAttribute("fieldValue", od["TB025"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB026
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB026");
                Cell.SetAttribute("fieldValue", od["TB026"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);






                rowscounts = rowscounts + 1;

                //DataGrid PURTM
                XmlNode DataGridS = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='DETAILS']/DataGrid");
                DataGridS.AppendChild(Row);

            }


            ////用ADDTACK，直接啟動起單
            //ADDTACK(Form);

            //ADD TO DB
            ////string connectionString = ConfigurationManager.ConnectionStrings["dbUOF"].ToString();

            //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
            //sqlConn = new SqlConnection(connectionString);

            //20210902密
            Class1 TKID = new Class1();//用new 建立類別實體
            SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

            //資料庫使用者密碼解密
            sqlsb.Password = TKID.Decryption(sqlsb.Password);
            sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

            String connectionString;
            sqlConn = new SqlConnection(sqlsb.ConnectionString);
            connectionString = sqlConn.ConnectionString.ToString();

            StringBuilder queryString = new StringBuilder();




            queryString.AppendFormat(@" INSERT INTO [{0}].dbo.TB_WKF_EXTERNAL_TASK
                                         (EXTERNAL_TASK_ID,FORM_INFO,STATUS,EXTERNAL_FORM_NBR)
                                        VALUES (NEWID(),@XML,2,'{1}')
                                        ", DBNAME, EXTERNAL_FORM_NBR);

            try
            {
                using (SqlConnection connection = new SqlConnection(connectionString))
                {

                    SqlCommand command = new SqlCommand(queryString.ToString(), connection);
                    command.Parameters.Add("@XML", SqlDbType.NVarChar).Value = Form.OuterXml;

                    command.Connection.Open();

                    int count = command.ExecuteNonQuery();

                    connection.Close();
                    connection.Dispose();

                }
            }
            catch
            {

            }
            finally
            {

            }

        }

        public DataTable SEARCHACTTAACTTB(string TA001, string TA002)
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);


                sbSql.Clear();
                sbSqlQuery.Clear();

                //庫存數量看LA009 IN ('20004','20006','20008','20019','20020'

                sbSql.AppendFormat(@"
                                    SELECT *
                                    , USER_GUID, NAME
                                    , (SELECT TOP 1 GROUP_ID FROM[192.168.1.223].[UOF].[dbo].[TB_EB_EMPL_DEP] WHERE[TB_EB_EMPL_DEP].USER_GUID = TEMP.USER_GUID) AS 'GROUP_ID'
                                    ,(SELECT TOP 1 TITLE_ID FROM[192.168.1.223].[UOF].[dbo].[TB_EB_EMPL_DEP]
                                            WHERE[TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'TITLE_ID'
                                    FROM
                                    (
                                    SELECT
                                    ACTTA.CREATOR
                                    , TA001
                                    , TA002
                                    , TA003
                                    , TA004
                                    , TA005
                                    , TA006
                                    , TA007
                                    , TA008
                                    , TA009
                                    , TA010
                                    , TA011
                                    , TA014
                                    , TA015
                                    , TA024
                                    , TB001
                                    , TB002
                                    , TB003
                                    , TB004
                                    , TB005
                                    , TB006
                                    , TB007
                                    , TB008
                                    , TB009
                                    , TB010
                                    , TB011
                                    , TB012
                                    , TB013
                                    , TB014
                                    , TB017
                                    , TB018
                                    , TB021
                                    , TB022
                                    , TB023
                                    , TB024
                                    , TB025
                                    , TB026






                                    , [TB_EB_USER].USER_GUID, NAME
                                    ,(SELECT TOP 1 MV002 FROM [TK].dbo.CMSMV WHERE MV001= ACTTA.CREATOR) AS 'MV002'
                                    FROM[TK].dbo.ACTTB,[TK].dbo.ACTTA
                                    LEFT JOIN[192.168.1.223].[UOF].[dbo].[TB_EB_USER]
                                            ON[TB_EB_USER].ACCOUNT= ACTTA.CREATOR COLLATE Chinese_Taiwan_Stroke_BIN

                                    WHERE TA001=TB001 AND TA002=TB002
                                    AND TA001='{0}' AND TA002 = '{1}'
                                    ) AS TEMP
                              
                                    ", TA001, TA002);


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    return ds1.Tables["ds1"];

                }
                else
                {
                    return null;
                }

            }
            catch
            {
                return null;
            }
            finally
            {
                sqlConn.Close();
            }
        }


        public void ADDUOFQCINVTAINVTB()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp22"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                DataSet ds1 = new DataSet();
                SqlDataAdapter adapter1 = new SqlDataAdapter();
                SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();

                sbSql.Clear();
                sbSqlQuery.Clear();

                //TL006='N' AND (UDF01 IN ('Y','y') ) 
                sbSql.AppendFormat(@" 
                                    SELECT TA001,TA002,UDF01
                                    FROM [TK].dbo.INVTA
                                    WHERE TA006='N'
                                    AND UDF01 IN ('Y','y')
                                    ORDER BY TA001,TA002


                                    ");

                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");


                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    foreach (DataRow dr in ds1.Tables["ds1"].Rows)
                    {
                        ADD_QCINVTAINVTB_TB_WKF_EXTERNAL_TASK(dr["TA001"].ToString().Trim(), dr["TA002"].ToString().Trim());
                    }

                }
                else
                {

                }

            }
            catch
            {

            }
            finally
            {
                sqlConn.Close();
            }

            UPDATEQCINVTAINVTBUDF01();
        }

        public void UPDATEQCINVTAINVTBUDF01()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dbconn"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sqlConn.Close();
                sqlConn.Open();
                tran = sqlConn.BeginTransaction();

                sbSql.Clear();

                sbSql.AppendFormat(@"
                                
                                    UPDATE   [TK].dbo.INVTA
                                    SET UDF01 = 'UOF'
                                    WHERE UDF01 IN ('Y','y')                             

                                    ");

                cmd.Connection = sqlConn;
                cmd.CommandTimeout = 60;
                cmd.CommandText = sbSql.ToString();
                cmd.Transaction = tran;
                result = cmd.ExecuteNonQuery();

                if (result == 0)
                {
                    tran.Rollback();    //交易取消
                }
                else
                {
                    tran.Commit();      //執行交易  
                }

            }
            catch
            {

            }

            finally
            {
                sqlConn.Close();
            }
        }

        public void ADD_QCINVTAINVTB_TB_WKF_EXTERNAL_TASK(string TA001, string TA002)
        {

            DataTable DT = SEARCHQCINVTAINVTB(TA001, TA002);
            DataTable DTUPFDEP = SEARCHUOFDEP(DT.Rows[0]["CREATOR"].ToString());

            string account = DT.Rows[0]["CREATOR"].ToString();
            string groupId = DT.Rows[0]["GROUP_ID"].ToString();
            string jobTitleId = DT.Rows[0]["TITLE_ID"].ToString();
            string fillerName = DT.Rows[0]["MV002"].ToString();
            string fillerUserGuid = DT.Rows[0]["USER_GUID"].ToString();

            string DEPNAME = DTUPFDEP.Rows[0]["DEPNAME"].ToString();
            string DEPNO = DTUPFDEP.Rows[0]["DEPNO"].ToString();

            string EXTERNAL_FORM_NBR = DT.Rows[0]["TA001"].ToString().Trim() + DT.Rows[0]["TA002"].ToString().Trim();

            int rowscounts = 0;

            XmlDocument xmlDoc = new XmlDocument();
            //建立根節點
            XmlElement Form = xmlDoc.CreateElement("Form");

            //正式的id
            string PURTGID = SEARCHFORM_UOF_VERSION_ID("PURA1.客供進貨-進貨品質驗收單");

            if (!string.IsNullOrEmpty(PURTGID))
            {
                Form.SetAttribute("formVersionId", PURTGID);
            }


            Form.SetAttribute("urgentLevel", "2");
            //加入節點底下
            xmlDoc.AppendChild(Form);

            ////建立節點Applicant
            XmlElement Applicant = xmlDoc.CreateElement("Applicant");
            Applicant.SetAttribute("account", account);
            Applicant.SetAttribute("groupId", groupId);
            Applicant.SetAttribute("jobTitleId", jobTitleId);
            //加入節點底下
            Form.AppendChild(Applicant);

            //建立節點 Comment
            XmlElement Comment = xmlDoc.CreateElement("Comment");
            Comment.InnerText = "申請者意見";
            //加入至節點底下
            Applicant.AppendChild(Comment);

            //建立節點 FormFieldValue
            XmlElement FormFieldValue = xmlDoc.CreateElement("FormFieldValue");
            //加入至節點底下
            Form.AppendChild(FormFieldValue);

            //建立節點FieldItem
            //ID 表單編號	
            XmlElement FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "ID");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TA003	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA003");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA003"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TG005	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TG005");
            FieldItem.SetAttribute("fieldValue","客供");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TG021	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TG021");
            FieldItem.SetAttribute("fieldValue", "客供");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA001	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA001");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA001"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA002	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA002");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA002"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);


            //DataGrid
            //建立節點FieldItem
            //INVTB
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "INVTB");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點 DataGrid
            XmlElement DataGrid = xmlDoc.CreateElement("DataGrid");
            //DataGrid 加入至 TB 節點底下
            XmlNode PURTD = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='INVTB']");
            PURTD.AppendChild(DataGrid);


            foreach (DataRow od in DT.Rows)
            {
                // 新增 Row
                XmlElement Row = xmlDoc.CreateElement("Row");
                Row.SetAttribute("order", (rowscounts).ToString());

                //Row	TB003
                XmlElement Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB003");
                Cell.SetAttribute("fieldValue", od["TB003"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB004
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB004");
                Cell.SetAttribute("fieldValue", od["TB004"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB005
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB005");
                Cell.SetAttribute("fieldValue", od["TB005"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB006
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB006");
                Cell.SetAttribute("fieldValue", od["TB006"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB007
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB007");
                Cell.SetAttribute("fieldValue", od["TB007"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB008
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB008");
                Cell.SetAttribute("fieldValue", od["TB008"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB014
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB014");
                Cell.SetAttribute("fieldValue", od["TB014"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TH015
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TH015");
                Cell.SetAttribute("fieldValue", od["TB007"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	CHECK
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "CHECK");
                Cell.SetAttribute("fieldValue", "Y");
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "@null");
                Cell.SetAttribute("enableSearch", "True");
                Cell.SetAttribute("fieldMessage", "Y");
                //Row
                Row.AppendChild(Cell);

                //Row	DETAIL01
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "DETAIL01");
                Cell.SetAttribute("fieldValue", "");
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Cell.SetAttribute("fieldMessage", "Y");
                //Row
                Row.AppendChild(Cell);

                //Row	DETAIL02
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "DETAIL02");
                Cell.SetAttribute("fieldValue", "V");
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "@null");
                Cell.SetAttribute("enableSearch", "True");
                Cell.SetAttribute("fieldMessage", "Y");
                //Row
                Row.AppendChild(Cell);

                //Row	DETAIL03
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "DETAIL03");
                Cell.SetAttribute("fieldValue", "N");
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "@null");
                Cell.SetAttribute("enableSearch", "True");
                Cell.SetAttribute("fieldMessage", "Y");
                //Row
                Row.AppendChild(Cell);

                //Row	DETAIL05
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "DETAIL05");
                Cell.SetAttribute("fieldValue", "0");
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Cell.SetAttribute("fieldMessage", "Y");
                //Row
                Row.AppendChild(Cell);

                //Row	DETAIL06
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "DETAIL06");
                Cell.SetAttribute("fieldValue", "");
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Cell.SetAttribute("fieldMessage", "Y");
                //Row
                Row.AppendChild(Cell);

                //Row	DETAIL06
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "DETAIL07");
                Cell.SetAttribute("fieldValue", od["TB033"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Cell.SetAttribute("fieldMessage", "Y");
                //Row
                Row.AppendChild(Cell);
                //Row	DETAIL06
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "DETAIL08");
                Cell.SetAttribute("fieldValue", od["TB015"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Cell.SetAttribute("fieldMessage", "Y");
                //Row
                Row.AppendChild(Cell);



                rowscounts = rowscounts + 1;

                //DataGrid PURTM
                XmlNode DataGridS = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='INVTB']/DataGrid");
                DataGridS.AppendChild(Row);

            }


            ////用ADDTACK，直接啟動起單
            //ADDTACK(Form);

            //ADD TO DB
            ////string connectionString = ConfigurationManager.ConnectionStrings["dbUOF"].ToString();

            //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
            //sqlConn = new SqlConnection(connectionString);

            //20210902密
            Class1 TKID = new Class1();//用new 建立類別實體
            SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

            //資料庫使用者密碼解密
            sqlsb.Password = TKID.Decryption(sqlsb.Password);
            sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

            String connectionString;
            sqlConn = new SqlConnection(sqlsb.ConnectionString);
            connectionString = sqlConn.ConnectionString.ToString();

            StringBuilder queryString = new StringBuilder();




            queryString.AppendFormat(@" INSERT INTO [{0}].dbo.TB_WKF_EXTERNAL_TASK
                                         (EXTERNAL_TASK_ID,FORM_INFO,STATUS,EXTERNAL_FORM_NBR)
                                        VALUES (NEWID(),@XML,2,'{1}')
                                        ", DBNAME, EXTERNAL_FORM_NBR);

            try
            {
                using (SqlConnection connection = new SqlConnection(connectionString))
                {

                    SqlCommand command = new SqlCommand(queryString.ToString(), connection);
                    command.Parameters.Add("@XML", SqlDbType.NVarChar).Value = Form.OuterXml;

                    command.Connection.Open();

                    int count = command.ExecuteNonQuery();

                    connection.Close();
                    connection.Dispose();

                }
            }
            catch
            {

            }
            finally
            {

            }
        }

        public DataTable SEARCHQCINVTAINVTB(string TA001, string TA002)
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);


                sbSql.Clear();
                sbSqlQuery.Clear();

                //庫存數量看LA009 IN ('20004','20006','20008','20019','20020'

                sbSql.AppendFormat(@"  
                                    SELECT *
                                    ,USER_GUID,NAME
                                    ,(SELECT TOP 1 GROUP_ID FROM [192.168.1.223].[UOF].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'GROUP_ID'
                                    ,(SELECT TOP 1 TITLE_ID FROM [192.168.1.223].[UOF].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'TITLE_ID'
                                    FROM 
                                    (
                                    SELECT                                    
                                    INVTA.[CREATOR]
                                    ,INVTA.TA001
                                    ,INVTA.TA002
                                    ,INVTA.TA003
                                    ,INVTB.TB003
                                    ,INVTB.TB004
                                    ,INVTB.TB005
                                    ,INVTB.TB006
                                    ,INVTB.TB007
                                    ,INVTB.TB008
                                    ,INVTB.TB014
                                    ,INVTB.TB015
                                    ,INVTB.TB033  

                                    ,[TB_EB_USER].USER_GUID,NAME
                                    ,(SELECT TOP 1 MV002 FROM [TK].dbo.CMSMV WHERE MV001=INVTA.CREATOR) AS 'MV002'

                                    FROM [TK].dbo.INVTB,[TK].dbo.INVTA
                                    LEFT JOIN [192.168.1.223].[UOF].[dbo].[TB_EB_USER] ON [TB_EB_USER].ACCOUNT= INVTA.CREATOR COLLATE Chinese_Taiwan_Stroke_BIN
                                    WHERE 1=1
                                    AND TA001=TB001 AND TA002=TB002  
                                    AND TA001='{0}' AND TA002='{1}'

                                    ) AS TEMP
                              
                                    ", TA001, TA002);


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    return ds1.Tables["ds1"];

                }
                else
                {
                    return null;
                }

            }
            catch
            {
                return null;
            }
            finally
            {
                sqlConn.Close();
            }
        }

        public void ADDCOPMACOPMBCOPMC()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                DataSet ds1 = new DataSet();
                SqlDataAdapter adapter1 = new SqlDataAdapter();
                SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();

                sbSql.Clear();
                sbSqlQuery.Clear();


                sbSql.AppendFormat(@" 
                                    SELECT TA001,TA002
                                    FROM [TK].dbo.COPTA
                                    WHERE TA019='N' AND  (UDF01 IN ('Y','y') ) 
                                    ORDER BY TA001,TA002
                                    ");

                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");


                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    foreach (DataRow dr in ds1.Tables["ds1"].Rows)
                    {
                        ADD_COPTACOPTBCOPTC_WKF_EXTERNAL_TASK(dr["TA001"].ToString().Trim(), dr["TA002"].ToString().Trim());
                    }
                   
                }
                else
                {

                }

            }
            catch
            {

            }
            finally
            {
                sqlConn.Close();
            }

            UPDATECOPTAUDF01();
        }

        public void UPDATECOPTAUDF01()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dbconn"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sqlConn.Close();
                sqlConn.Open();
                tran = sqlConn.BeginTransaction();

                sbSql.Clear();

                sbSql.AppendFormat(@"
                                    UPDATE  [TK].dbo.COPTA 
                                    SET UDF01 = 'UOF'
                                    WHERE TA019='N' AND  (UDF01 IN ('Y','y') )                                   

                                    ");

                cmd.Connection = sqlConn;
                cmd.CommandTimeout = 60;
                cmd.CommandText = sbSql.ToString();
                cmd.Transaction = tran;
                result = cmd.ExecuteNonQuery();

                if (result == 0)
                {
                    tran.Rollback();    //交易取消
                }
                else
                {
                    tran.Commit();      //執行交易  
                }

            }
            catch
            {

            }

            finally
            {
                sqlConn.Close();
            }
        }

        public void ADD_COPTACOPTBCOPTC_WKF_EXTERNAL_TASK(string TA001, string TA002)
        {
            DataTable DT = SEARCHCOPTACOPTBCOPTC(TA001, TA002);
            DataTable DTUPFDEP = SEARCHUOFDEP(DT.Rows[0]["TA005"].ToString());

            string account = DT.Rows[0]["TA005"].ToString();
            string groupId = DT.Rows[0]["GROUP_ID"].ToString();
            string jobTitleId = DT.Rows[0]["TITLE_ID"].ToString();
            string fillerName = DT.Rows[0]["MV002"].ToString();
            string fillerUserGuid = DT.Rows[0]["USER_GUID"].ToString();

            string DEPNAME = DTUPFDEP.Rows[0]["DEPNAME"].ToString();
            string DEPNO = DTUPFDEP.Rows[0]["DEPNO"].ToString();

            string EXTERNAL_FORM_NBR = DT.Rows[0]["TA001"].ToString().Trim() + DT.Rows[0]["TA002"].ToString().Trim();

            int rowscounts = 0;

            XmlDocument xmlDoc = new XmlDocument();
            //建立根節點
            XmlElement Form = xmlDoc.CreateElement("Form");

            //正式的id
            string COPTAID = SEARCHFORM_UOF_VERSION_ID("COP01.報價單");

            if (!string.IsNullOrEmpty(COPTAID))
            {
                Form.SetAttribute("formVersionId", COPTAID);
            }


            Form.SetAttribute("urgentLevel", "2");
            //加入節點底下
            xmlDoc.AppendChild(Form);

            ////建立節點Applicant
            XmlElement Applicant = xmlDoc.CreateElement("Applicant");
            Applicant.SetAttribute("account", account);
            Applicant.SetAttribute("groupId", groupId);
            Applicant.SetAttribute("jobTitleId", jobTitleId);
            //加入節點底下
            Form.AppendChild(Applicant);

            //建立節點 Comment
            XmlElement Comment = xmlDoc.CreateElement("Comment");
            Comment.InnerText = "申請者意見";
            //加入至節點底下
            Applicant.AppendChild(Comment);

            //建立節點 FormFieldValue
            XmlElement FormFieldValue = xmlDoc.CreateElement("FormFieldValue");
            //加入至節點底下
            Form.AppendChild(FormFieldValue);

            //建立節點FieldItem
            //ID 表單編號	
            XmlElement FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "ID");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TA001	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA001");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA001"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA002	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA002");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA002"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA003	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA003");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA003"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA004	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA004");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA004"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA006	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA006");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA006"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA005	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA005");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA005"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA022
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA022");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA022"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA026	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA026");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA026"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA011NAME	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA011NAME");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA011"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA007	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA007");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA007"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //TA008	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA008");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA008"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //MA010
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "MA010");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["MA010"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);


            //建立節點FieldItem
            //DETAILS 
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "DETAILS");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點 DataGrid
            XmlElement DataGrid = xmlDoc.CreateElement("DataGrid");
            //DataGrid 加入至 TB 節點底下
            XmlNode TB = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='DETAILS']");
            TB.AppendChild(DataGrid);


            foreach (DataRow od in DT.Rows)
            {
                // 新增 Row
                XmlElement Row = xmlDoc.CreateElement("Row");
                Row.SetAttribute("order", (rowscounts).ToString());

                //Row	TB003
                XmlElement Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB003");
                Cell.SetAttribute("fieldValue", od["TB003"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB004
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB004");
                Cell.SetAttribute("fieldValue", od["TB004"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB005
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB005");
                Cell.SetAttribute("fieldValue", od["TB005"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB007
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB007");
                Cell.SetAttribute("fieldValue", od["TB007"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB008
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB008");
                Cell.SetAttribute("fieldValue", od["TB008"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB009
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB009");
                Cell.SetAttribute("fieldValue", od["TB009"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB010
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB010");
                Cell.SetAttribute("fieldValue", od["TB010"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB016
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB016");
                Cell.SetAttribute("fieldValue", od["TB016"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TK004
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TK004");
                Cell.SetAttribute("fieldValue", od["TK004"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TK006
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TK006");
                Cell.SetAttribute("fieldValue", od["TK006"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);


                rowscounts = rowscounts + 1;

                XmlNode DataGridS = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='DETAILS']/DataGrid");
                DataGridS.AppendChild(Row);

            }

            ////用ADDTACK，直接啟動起單
            //ADDTACK(Form);

            //ADD TO DB
            ////string connectionString = ConfigurationManager.ConnectionStrings["dbUOF"].ToString();

            //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
            //sqlConn = new SqlConnection(connectionString);

            //20210902密
            Class1 TKID = new Class1();//用new 建立類別實體
            SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

            //資料庫使用者密碼解密
            sqlsb.Password = TKID.Decryption(sqlsb.Password);
            sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

            String connectionString;
            sqlConn = new SqlConnection(sqlsb.ConnectionString);
            connectionString = sqlConn.ConnectionString.ToString();

            StringBuilder queryString = new StringBuilder();




            queryString.AppendFormat(@" INSERT INTO [{0}].dbo.TB_WKF_EXTERNAL_TASK
                                         (EXTERNAL_TASK_ID,FORM_INFO,STATUS,EXTERNAL_FORM_NBR)
                                        VALUES (NEWID(),@XML,2,'{1}')
                                        ", DBNAME, EXTERNAL_FORM_NBR);

            try
            {
                using (SqlConnection connection = new SqlConnection(connectionString))
                {

                    SqlCommand command = new SqlCommand(queryString.ToString(), connection);
                    command.Parameters.Add("@XML", SqlDbType.NVarChar).Value = Form.OuterXml;

                    command.Connection.Open();

                    int count = command.ExecuteNonQuery();

                    connection.Close();
                    connection.Dispose();

                }
            }
            catch
            {

            }
            finally
            {

            }





        }

        public DataTable SEARCHCOPTACOPTBCOPTC(string TA001, string TA002)
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);


                sbSql.Clear();
                sbSqlQuery.Clear();

                //庫存數量看LA009 IN ('20004','20006','20008','20019','20020'

                sbSql.AppendFormat(@"  
                                   SELECT TEMP.*
                                    ,(SELECT TOP 1 GROUP_ID FROM [192.168.1.223].[UOF].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'GROUP_ID'
                                    ,(SELECT TOP 1 TITLE_ID FROM [192.168.1.223].[UOF].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'TITLE_ID'

                                    FROM 
                                    (
                                    SELECT COPTA.CREATOR,TA001,TA002,TA003,TA004,TA005,TA006,TA007,TA008,TA009,TA010,TA011,TA026
                                    ,(CASE WHEN TA022='1' THEN '內含'  WHEN TA022='2' THEN '外加'  WHEN TA022='3' THEN '零稅率'   WHEN TA022='4' THEN '免稅' WHEN TA022='9' THEN '不計稅' ELSE '空白' END ) TA022
                                    ,TB003,TB004,TB005,TB006,TB007,TB008,TB009,TB010,TB011,TB016
                                    ,ISNULL(TK004,0) AS TK004,ISNULL(TK006,0) AS TK006
                                    ,[TB_EB_USER].USER_GUID,NAME
                                    ,(SELECT TOP 1 MV002 FROM [TK].dbo.CMSMV WHERE MV001=TA005) AS 'MV002'
                                    ,MA010

                                    FROM [TK].dbo.COPTA
                                    LEFT JOIN [192.168.1.223].[UOF].[dbo].[TB_EB_USER] ON [TB_EB_USER].ACCOUNT= TA005 COLLATE Chinese_Taiwan_Stroke_BIN
                                    INNER JOIN [TK].dbo.COPTB ON TA001=TB001 AND TA002=TB002
                                    LEFT JOIN [TK].dbo.COPTK ON  TK001=TB001 AND TK002=TB002 AND TK003=TB003
                                    LEFT JOIN [TK].dbo.COPMA ON MA001=TA004

                                    WHERE 
                                    TA001='{0}' AND TA002='{1}'
                                    ) AS TEMP
                              
                                    ", TA001, TA002);


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    return ds1.Tables["ds1"];

                }
                else
                {
                    return null;
                }

            }
            catch
            {
                return null;
            }
            finally
            {
                sqlConn.Close();
            }
        }

        public void ADDUOFASTMBASTMC()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp22"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                DataSet ds1 = new DataSet();
                SqlDataAdapter adapter1 = new SqlDataAdapter();
                SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();

                sbSql.Clear();
                sbSqlQuery.Clear();

                //TL006='N' AND (UDF01 IN ('Y','y') ) 
                sbSql.AppendFormat(@" 
                                 SELECT MB001,UDF01
                                    FROM [TK].dbo.ASTMB
                                    WHERE MB039='N'
                                    AND UDF01 IN ('Y','y')
                                    ORDER BY MB001


                                    ");

                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");


                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    foreach (DataRow dr in ds1.Tables["ds1"].Rows)
                    {
                        ADD_ASTMBASTMC_TB_WKF_EXTERNAL_TASK(dr["MB001"].ToString().Trim());
                    }

                }
                else
                {

                }

            }
            catch
            {

            }
            finally
            {
                sqlConn.Close();
            }

            UPDATEASTMBASTMCUDF01();
        }

        public void UPDATEASTMBASTMCUDF01()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dbconn"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sqlConn.Close();
                sqlConn.Open();
                tran = sqlConn.BeginTransaction();

                sbSql.Clear();

                sbSql.AppendFormat(@"  
                                    UPDATE  [TK].dbo.ASTMB
                                    SET UDF01 = 'UOF'
                                    WHERE UDF01 IN ('Y','y')                             

                                    ");

                cmd.Connection = sqlConn;
                cmd.CommandTimeout = 60;
                cmd.CommandText = sbSql.ToString();
                cmd.Transaction = tran;
                result = cmd.ExecuteNonQuery();

                if (result == 0)
                {
                    tran.Rollback();    //交易取消
                }
                else
                {
                    tran.Commit();      //執行交易  
                }

            }
            catch
            {

            }

            finally
            {
                sqlConn.Close();
            }
        }
        public void ADD_ASTMBASTMC_TB_WKF_EXTERNAL_TASK(string MB001)
        {

            DataTable DT = SEARCHASTMBASTMC(MB001);
            DataTable DTUPFDEP = SEARCHUOFDEP(DT.Rows[0]["CREATOR"].ToString());

            string account = DT.Rows[0]["CREATOR"].ToString();
            string groupId = DT.Rows[0]["GROUP_ID"].ToString();
            string jobTitleId = DT.Rows[0]["TITLE_ID"].ToString();
            string fillerName = DT.Rows[0]["MV002"].ToString();
            string fillerUserGuid = DT.Rows[0]["USER_GUID"].ToString();

            string DEPNAME = DTUPFDEP.Rows[0]["DEPNAME"].ToString();
            string DEPNO = DTUPFDEP.Rows[0]["DEPNO"].ToString();

            string EXTERNAL_FORM_NBR = DT.Rows[0]["MB001"].ToString().Trim();

            int rowscounts = 0;

            XmlDocument xmlDoc = new XmlDocument();
            //建立根節點
            XmlElement Form = xmlDoc.CreateElement("Form");

            //正式的id
            string FORMID = SEARCHFORM_UOF_VERSION_ID("ASTI02.資產資料建立作業");

            if (!string.IsNullOrEmpty(FORMID))
            {
                Form.SetAttribute("formVersionId", FORMID);
            }


            Form.SetAttribute("urgentLevel", "2");
            //加入節點底下
            xmlDoc.AppendChild(Form);

            ////建立節點Applicant
            XmlElement Applicant = xmlDoc.CreateElement("Applicant");
            Applicant.SetAttribute("account", account);
            Applicant.SetAttribute("groupId", groupId);
            Applicant.SetAttribute("jobTitleId", jobTitleId);
            //加入節點底下
            Form.AppendChild(Applicant);

            //建立節點 Comment
            XmlElement Comment = xmlDoc.CreateElement("Comment");
            Comment.InnerText = "申請者意見";
            //加入至節點底下
            Applicant.AppendChild(Comment);

            //建立節點 FormFieldValue
            XmlElement FormFieldValue = xmlDoc.CreateElement("FormFieldValue");
            //加入至節點底下
            Form.AppendChild(FormFieldValue);

            //建立節點FieldItem
            //ID 表單編號	
            XmlElement FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "ID");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //MB001	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "MB001");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["MB001"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //MB002	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "MB002");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["MB002"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //MB003	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "MB003");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["MB003"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //MB004	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "MB004");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["MB004"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //MB005	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "MB005");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["MB005"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //MB006	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "MB006");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["MB006"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //MB007	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "MB007");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["MB007"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //MB008	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "MB008");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["MB008"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //MB009	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "MB009");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["MB009"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //MB010	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "MB010");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["MB010"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //MB011	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "MB011");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["MB011"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //MB012	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "MB012");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["MB012"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //MB013	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "MB013");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["MB013"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //MB014	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "MB014");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["MB014"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //MB015	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "MB015");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["MB015"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //MB016	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "MB016");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["MB016"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //MB018	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "MB018");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["MB018"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //MB019	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "MB019");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["MB019"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //MB020	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "MB020");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["MB020"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //MB021	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "MB021");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["MB021"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //MB022	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "MB022");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["MB022"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //MB023	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "MB023");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["MB023"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //MB024	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "MB024");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["MB024"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //MB025	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "MB025");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["MB025"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //MB026	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "MB026");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["MB026"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);


            //建立節點FieldItem
            //MB027	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "MB027");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["MB027"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);



            //DataGrid
            //建立節點FieldItem
            //INVTB
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "DETAILS");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點 DataGrid
            XmlElement DataGrid = xmlDoc.CreateElement("DataGrid");
            //DataGrid 加入至 TB 節點底下
            XmlNode DETAILS = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='DETAILS']");
            DETAILS.AppendChild(DataGrid);


            foreach (DataRow od in DT.Rows)
            {
                // 新增 Row
                XmlElement Row = xmlDoc.CreateElement("Row");
                Row.SetAttribute("order", (rowscounts).ToString());

                //Row	MC001
                XmlElement Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "MC001");
                Cell.SetAttribute("fieldValue", od["MC001"].ToString().Trim());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	MC002
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "MC002");
                Cell.SetAttribute("fieldValue", od["MC002"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	MC003
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "MC003");
                Cell.SetAttribute("fieldValue", od["MC003"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	MC004
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "MC004");
                Cell.SetAttribute("fieldValue", od["MC004"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	MC005
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "MC005");
                Cell.SetAttribute("fieldValue", od["MC005"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	MC006
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "MC006");
                Cell.SetAttribute("fieldValue", od["MC006"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);




                rowscounts = rowscounts + 1;

                //DataGrid PURTM
                XmlNode DataGridS = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='DETAILS']/DataGrid");
                DataGridS.AppendChild(Row);

            }


            ////用ADDTACK，直接啟動起單
            //ADDTACK(Form);

            //ADD TO DB
            ////string connectionString = ConfigurationManager.ConnectionStrings["dbUOF"].ToString();

            //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
            //sqlConn = new SqlConnection(connectionString);

            //20210902密
            Class1 TKID = new Class1();//用new 建立類別實體
            SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

            //資料庫使用者密碼解密
            sqlsb.Password = TKID.Decryption(sqlsb.Password);
            sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

            String connectionString;
            sqlConn = new SqlConnection(sqlsb.ConnectionString);
            connectionString = sqlConn.ConnectionString.ToString();

            StringBuilder queryString = new StringBuilder();




            queryString.AppendFormat(@" INSERT INTO [{0}].dbo.TB_WKF_EXTERNAL_TASK
                                         (EXTERNAL_TASK_ID,FORM_INFO,STATUS,EXTERNAL_FORM_NBR)
                                        VALUES (NEWID(),@XML,2,'{1}')
                                        ", DBNAME, EXTERNAL_FORM_NBR);

            try
            {
                using (SqlConnection connection = new SqlConnection(connectionString))
                {

                    SqlCommand command = new SqlCommand(queryString.ToString(), connection);
                    command.Parameters.Add("@XML", SqlDbType.NVarChar).Value = Form.OuterXml;

                    command.Connection.Open();

                    int count = command.ExecuteNonQuery();

                    connection.Close();
                    connection.Dispose();

                }
            }
            catch
            {

            }
            finally
            {

            }
        }

        public DataTable SEARCHASTMBASTMC(string MB001)
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);


                sbSql.Clear();
                sbSqlQuery.Clear();

                //庫存數量看LA009 IN ('20004','20006','20008','20019','20020'

                sbSql.AppendFormat(@"  
                                    SELECT *
                                    ,USER_GUID,NAME
                                    ,(SELECT TOP 1 GROUP_ID FROM [192.168.1.223].[UOF].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'GROUP_ID'
                                    ,(SELECT TOP 1 TITLE_ID FROM [192.168.1.223].[UOF].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'TITLE_ID'
                                    FROM 
                                    (
                                    SELECT                                    
                                    ASTMB.CREATOR
                                    ,MB001
                                    ,MB002
                                    ,MB003
                                    ,MB004
                                    ,MB005
                                    ,MB006
                                    ,MB007
                                    ,MB008
                                    ,MB009
                                    ,MB010
                                    ,MB011
                                    ,MB012
                                    ,MB013
                                    ,MB014
                                    ,MB015
                                    ,MB016
                                    ,MB017
                                    ,MB018
                                    ,MB019
                                    ,MB020
                                    ,MB021
                                    ,MB022
                                    ,MB023
                                    ,MB024
                                    ,MB025
                                    ,MB026
                                    ,MB027
                                    ,MB028
                                    ,MB029
                                    ,MB030
                                    ,MB031
                                    ,MB032
                                    ,MB033
                                    ,MB034
                                    ,MB035
                                    ,MB036
                                    ,MB037
                                    ,MB038
                                    ,MB039
                                    ,MB040
                                    ,MB041
                                    ,MB042
                                    ,MB043
                                    ,MB044
                                    ,MB045
                                    ,MB046
                                    ,MB047
                                    ,MB048
                                    ,MB049
                                    ,MB050
                                    ,MB051
                                    ,MB052
                                    ,MB053
                                    ,MB054
                                    ,MB055
                                    ,MB056
                                    ,MB057
                                    ,MB058
                                    ,MB059
                                    ,MB060
                                    ,MB061
                                    ,MB062
                                    ,MB063
                                    ,MB064
                                    ,MB065
                                    ,MB066
                                    ,MB067
                                    ,MB068
                                    ,MB069
                                    ,MB070
                                    ,MB071
                                    ,MB072
                                    ,MB073
                                    ,MB074
                                    ,MB075
                                    ,MB076
                                    ,MB077
                                    ,MB078
                                    ,MB079
                                    ,MB080
                                    ,MB081
                                    ,MB082
                                    ,MC001
                                    ,MC002
                                    ,MC003
                                    ,MC004
                                    ,MC005
                                    ,MC006

                                   
                                    ,[TB_EB_USER].USER_GUID,NAME
                                    ,(SELECT TOP 1 MV002 FROM [TK].dbo.CMSMV WHERE MV001=ASTMB.CREATOR) AS 'MV002'

                                    FROM [TK].dbo.ASTMC,[TK].dbo.ASTMB
                                    LEFT JOIN [192.168.1.223].[UOF].[dbo].[TB_EB_USER] ON [TB_EB_USER].ACCOUNT= ASTMB.CREATOR COLLATE Chinese_Taiwan_Stroke_BIN
                                    WHERE 1=1
                                    AND MC001=MB001
                                    AND MB001='{0}'

                                    ) AS TEMP
                              
                                    ", MB001);


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    return ds1.Tables["ds1"];

                }
                else
                {
                    return null;
                }

            }
            catch
            {
                return null;
            }
            finally
            {
                sqlConn.Close();
            }
        }

        public void ADD_TO_UOF_QC1001()
        {
            DataTable DT_UOF_QC1002 = FIND_UOF_QC1002();

            if(DT_UOF_QC1002!= null && DT_UOF_QC1002.Rows.Count>0)
            {
                foreach(DataRow DR in DT_UOF_QC1002.Rows)
                {
                    XmlDocument xmlDoc = new XmlDocument();
                    xmlDoc.LoadXml(DR["CURRENT_DOC"].ToString());

                    DataTable UOF_TB_EB_USER = FIND_TB_EB_USER(DR["USER_GUID"].ToString());

                    if(UOF_TB_EB_USER != null && UOF_TB_EB_USER.Rows.Count>0)
                    {
                        string QCFrm002QCC = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002QCC']").Attributes["fieldValue"].Value;
                        if (QCFrm002QCC.Equals("成立"))
                        {
                            NEW_UOF_QC1001(xmlDoc, UOF_TB_EB_USER);
                        }
                    }                                       
                }

                //ADD_TO_TBUOFQC1002HCECK(DT_UOF_QC1002);


            }

            UPDATE_UOF_QC1001_ATTACH_ID();

        }

        /// <summary>
        /// 找UOF的客訴異常單 1002
        /// </summary>
        /// <returns></returns>
        public DataTable FIND_UOF_QC1002()
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            try
            {

                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);


                sbSql.Clear();
                sbSqlQuery.Clear();

                //庫存數量看LA009 IN ('20004','20006','20008','20019','20020'

                sbSql.AppendFormat(@"  
                                    SELECT CURRENT_DOC,*
                                    FROM [UOF].[dbo].TB_WKF_TASK 
                                    WHERE DOC_NBR LIKE 'QC%'
                                    AND FORM_VERSION_ID IN 
                                    (
                                    SELECT 
                                    [FORM_VERSION_ID]      
                                    FROM [UOF].[dbo].[TB_WKF_FORM_VERSION],[UOF].[dbo].[TB_WKF_FORM]
                                    WHERE [TB_WKF_FORM_VERSION].FORM_ID=[TB_WKF_FORM].FORM_ID
                                    AND [FORM_NAME] IN ('1002.客訴異常處理單')
                                    )
                                    AND DOC_NBR  COLLATE  Chinese_Taiwan_Stroke_BIN NOT IN (SELECT  EXTERNAL_FORM_NBR  FROM [UOF].dbo.TB_WKF_EXTERNAL_TASK WHERE EXTERNAL_FORM_NBR LIKE 'QC1002%'AND ISNULL(EXTERNAL_FORM_NBR,'')<>'') 
                                    AND DOC_NBR>='QC1002230100001'
                              
                                    ORDER BY BEGIN_TIME
                              
                                    ");


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    return ds1.Tables["ds1"];

                }
                else
                {
                    return null;
                }
            }
            catch
            {
                return null;
            }


        }


        //找出表單建立者
        public DataTable FIND_TB_EB_USER(string USER_GUID)
        {       
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            try
            {

                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);


                sbSql.Clear();
                sbSqlQuery.Clear();

                //庫存數量看LA009 IN ('20004','20006','20008','20019','20020'

                sbSql.AppendFormat(@"  
                                    SELECT 
                                    [TB_EB_USER].[USER_GUID] AS 'USER_GUID'
                                    ,[ACCOUNT] AS 'CREATOR'
                                    ,[NAME] AS 'NAME'
                                    ,[TB_EB_EMPL_DEP].[GROUP_ID] AS 'GROUP_ID'
                                    ,[TB_EB_EMPL_DEP].[TITLE_ID] AS 'TITLE_ID'
                                    ,[GROUP_NAME] AS 'GROUP_NAME'
                                    ,[TITLE_NAME] AS 'TITLE_NAME'
                                    ,[GROUP_CODE] AS 'GROUP_CODE'

                                    FROM [UOF].[dbo].[TB_EB_USER],[UOF].[dbo].[TB_EB_EMPL_DEP],[UOF].[dbo].[TB_EB_GROUP],[UOF].[dbo].[TB_EB_JOB_TITLE]
                                    WHERE [TB_EB_USER].USER_GUID=[TB_EB_EMPL_DEP].USER_GUID
                                    AND [TB_EB_EMPL_DEP].[GROUP_ID]=[TB_EB_GROUP].[GROUP_ID]
                                    AND [TB_EB_EMPL_DEP].TITLE_ID=[TB_EB_JOB_TITLE].TITLE_ID
                                    AND [TB_EB_USER].USER_GUID='{0}'
                                 
                                    ", USER_GUID);


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    return ds1.Tables["ds1"];

                }
                else
                {
                    return null;
                }
            }
            catch
            {
                return null;
            }
        }
        //新增到品保1001表單
        public void NEW_UOF_QC1001(XmlDocument xmlDocSOURCES,DataTable DT)
        {

            string account = DT.Rows[0]["CREATOR"].ToString();
            string groupId = DT.Rows[0]["GROUP_ID"].ToString();
            string jobTitleId = DT.Rows[0]["TITLE_ID"].ToString();
            string fillerName = DT.Rows[0]["NAME"].ToString();
            string fillerUserGuid = DT.Rows[0]["USER_GUID"].ToString();

            string DEPNAME = DT.Rows[0]["GROUP_NAME"].ToString();
            string DEPNO = DT.Rows[0]["GROUP_CODE"].ToString();

            string QCFrm002SN= xmlDocSOURCES.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002SN']").Attributes["fieldValue"].Value;
            string EXTERNAL_FORM_NBR = QCFrm002SN;

            int rowscounts = 0;

            XmlDocument xmlDoc = new XmlDocument();
            //建立根節點
            XmlElement Form = xmlDoc.CreateElement("Form");

            //正式的id
            string ID = SEARCHFORM_UOF_VERSION_ID("1001.客訴品質異常處理單");

            if (!string.IsNullOrEmpty(ID))
            {
                Form.SetAttribute("formVersionId", ID);
            }


            Form.SetAttribute("urgentLevel", "2");
            //加入節點底下
            xmlDoc.AppendChild(Form);

            ////建立節點Applicant
            XmlElement Applicant = xmlDoc.CreateElement("Applicant");
            Applicant.SetAttribute("account", account);
            Applicant.SetAttribute("groupId", groupId);
            Applicant.SetAttribute("jobTitleId", jobTitleId);
            //加入節點底下
            Form.AppendChild(Applicant);

            //建立節點 Comment
            XmlElement Comment = xmlDoc.CreateElement("Comment");
            Comment.InnerText = "申請者意見";
            //加入至節點底下
            Applicant.AppendChild(Comment);

            //建立節點 FormFieldValue
            XmlElement FormFieldValue = xmlDoc.CreateElement("FormFieldValue");
            //加入至節點底下
            Form.AppendChild(FormFieldValue);           

            //建立節點FieldItem
            //QCFrm001SN 表單編號	
            XmlElement FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "QCFrm001SN");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");

            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);


            //建立節點FieldItem
            //QCFrm001ASN 表單編號	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "QCFrm001ASN");
            FieldItem.SetAttribute("fieldValue", QCFrm002SN);
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");

            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //日期QCFrm002Date>QCFrm001Date  QCFrm002Date
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "QCFrm001Date");
            FieldItem.SetAttribute("fieldValue", xmlDocSOURCES.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002Date']").Attributes["fieldValue"].Value);
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");

            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //申請者 QCFrm002User> QCFrmB001User 
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "QCFrm001User");
            FieldItem.SetAttribute("fieldValue", xmlDocSOURCES.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002User']").Attributes["fieldValue"].Value);
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //部門 QCFrm002Dept> QCFrm001Dept 
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "QCFrm001Dept");
            FieldItem.SetAttribute("fieldValue", xmlDocSOURCES.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002Dept']").Attributes["fieldValue"].Value);
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //職級 QCFrm002Rank> QCFrm001Rank 
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "QCFrm001Rank");
            FieldItem.SetAttribute("fieldValue", xmlDocSOURCES.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002Rank']").Attributes["fieldValue"].Value);
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //供應商/部門單位 QCFrm002CU> QCFrm001CUST 
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "QCFrm001CUST");
            FieldItem.SetAttribute("fieldValue", xmlDocSOURCES.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002CU']").Attributes["fieldValue"].Value);
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //批號 QCFrm002PNO> QCFrm001PNO 
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "QCFrm001PNO");
            FieldItem.SetAttribute("fieldValue", xmlDocSOURCES.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002PNO']").Attributes["fieldValue"].Value);
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //品號 QCFrm002CN> QCFrm001CN 
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "QCFrm001CN");
            FieldItem.SetAttribute("fieldValue", xmlDocSOURCES.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002CN']").Attributes["fieldValue"].Value);
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //品名 QCFrm002PRD> QCFrm001PRD 
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "QCFrm001PRD");
            FieldItem.SetAttribute("fieldValue", xmlDocSOURCES.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002PRD']").Attributes["fieldValue"].Value);
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //受理日期 QCFrm002RDate> QCFrm001RDate 
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "QCFrm001RDate");
            FieldItem.SetAttribute("fieldValue", xmlDocSOURCES.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002RDate']").Attributes["fieldValue"].Value);
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //製造日期 QCFrm002MD> QCFrm001MD 
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "QCFrm001MD");
            FieldItem.SetAttribute("fieldValue", xmlDocSOURCES.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002MD']").Attributes["fieldValue"].Value);
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //有效日期 QCFrm002ED> QCFrm001ND 
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "QCFrm001ND");
            FieldItem.SetAttribute("fieldValue", xmlDocSOURCES.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002ED']").Attributes["fieldValue"].Value);
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //原因分析 QCFrm002Cmf> QCFrm001RCA 
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "QCFrm002Cmf");
            FieldItem.SetAttribute("fieldValue", xmlDocSOURCES.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002Cmf']").Attributes["fieldValue"].Value);
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //原因分析 QCFrm002Abn > QCFrm002Abn 
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "QCFrm002Abn");
            FieldItem.SetAttribute("fieldValue", xmlDocSOURCES.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002Abn']").Attributes["fieldValue"].Value);
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //原因 QCFrm002Abns 
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "QCFrm002Abns");
            FieldItem.SetAttribute("fieldValue", xmlDocSOURCES.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002Abns']").Attributes["fieldValue"].Value);
            FieldItem.SetAttribute("realValue", xmlDocSOURCES.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002Abns']").Attributes["fieldValue"].Value);
            FieldItem.SetAttribute("customValue", xmlDocSOURCES.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002Abns']").Attributes["fieldValue"].Value);
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //20210902密
            Class1 TKID = new Class1();//用new 建立類別實體
            SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

            //資料庫使用者密碼解密
            sqlsb.Password = TKID.Decryption(sqlsb.Password);
            sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

            String connectionString;
            sqlConn = new SqlConnection(sqlsb.ConnectionString);
            connectionString = sqlConn.ConnectionString.ToString();

            StringBuilder queryString = new StringBuilder();




            queryString.AppendFormat(@" INSERT INTO [{0}].dbo.TB_WKF_EXTERNAL_TASK
                                         (EXTERNAL_TASK_ID,FORM_INFO,STATUS,EXTERNAL_FORM_NBR)
                                        VALUES (NEWID(),@XML,2,'{1}')
                                        ", DBNAME, EXTERNAL_FORM_NBR);

            try
            {
                using (SqlConnection connection = new SqlConnection(connectionString))
                {

                    SqlCommand command = new SqlCommand(queryString.ToString(), connection);
                    command.Parameters.Add("@XML", SqlDbType.NVarChar).Value = Form.OuterXml;

                    command.Connection.Open();

                    int count = command.ExecuteNonQuery();

                    connection.Close();
                    connection.Dispose();

                }
            }
            catch
            {

            }
            finally
            {

            }

        }
        /// <summary>
        /// 更新附件 ATTACH_ID 到 新QC1001中
        /// </summary>
        public void UPDATE_UOF_QC1001_ATTACH_ID()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sqlConn.Close();
                sqlConn.Open();
                tran = sqlConn.BeginTransaction();

                sbSql.Clear();

                sbSql.AppendFormat(@"                                    
                                    UPDATE [UOF].[dbo].TB_WKF_TASK
                                    SET ATTACH_ID=TEMP.NEW_ATTACH_ID
                                    FROM 
                                    (
                                    SELECT TB_WKF_TASK.DOC_NBR,TB_WKF_TASK.TASK_ID,TB_WKF_TASK.ATTACH_ID,[TB_WKF_EXTERNAL_TASK].EXTERNAL_FORM_NBR,TB_WKF_TASK2.ATTACH_ID AS  'NEW_ATTACH_ID'
                                    FROM [UOF].[dbo].TB_WKF_TASK,[UOF].[dbo].[TB_WKF_EXTERNAL_TASK],  [UOF].[dbo].TB_WKF_TASK TB_WKF_TASK2
                                    WHERE TB_WKF_TASK.DOC_NBR=[TB_WKF_EXTERNAL_TASK].DOC_NBR
                                    AND [TB_WKF_EXTERNAL_TASK].EXTERNAL_FORM_NBR =TB_WKF_TASK2.DOC_NBR
                                    AND TB_WKF_TASK.DOC_NBR LIKE 'QC%'
                                    AND ISNULL(TB_WKF_TASK.ATTACH_ID,'')<>ISNULL(TB_WKF_TASK2.ATTACH_ID,'')
                                    ) AS TEMP
                                    WHERE TEMP.TASK_ID=TB_WKF_TASK.TASK_ID

                                    "
                                    );

                cmd.Connection = sqlConn;
                cmd.CommandTimeout = 60;
                cmd.CommandText = sbSql.ToString();
                cmd.Transaction = tran;
                result = cmd.ExecuteNonQuery();

                if (result == 0)
                {
                    tran.Rollback();    //交易取消
                }
                else
                {
                    tran.Commit();      //執行交易  
                }

            }
            catch
            {

            }

            finally
            {
                sqlConn.Close();
            }
        }

        //DOC_NBR新增到[TKQC].[dbo].[TBUOFQC1002HCECK]
        public void ADD_TO_TBUOFQC1002HCECK(DataTable DT)
        {
           
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sqlConn.Close();
                sqlConn.Open();
                tran = sqlConn.BeginTransaction();

                sbSql.Clear();

                foreach (DataRow DR in DT.Rows)
                {
                    sbSql.AppendFormat(@"                                    
                                        INSERT INTO [TKQC].[dbo].[TBUOFQC1002HCECK]
                                        (
                                        [DOC_NBR]
                                        )
                                        VALUES
                                        (
                                        '{0}'
                                        )

                                    ", DR["DOC_NBR"].ToString()
                                    );
                }

                sbSql.AppendFormat(@"                                    
                                    
                                    "
                                    );

                cmd.Connection = sqlConn;
                cmd.CommandTimeout = 60;
                cmd.CommandText = sbSql.ToString();
                cmd.Transaction = tran;
                result = cmd.ExecuteNonQuery();

                if (result == 0)
                {
                    tran.Rollback();    //交易取消
                }
                else
                {
                    tran.Commit();      //執行交易  
                }

            }
            catch
            {

            }

            finally
            {
                sqlConn.Close();
            }
        }

        public void NEWBUYITEM()
        {
            IEnumerable<DataRow> query2 = null;

            DataTable DT1 = SEARCHUOFGA();
            DataTable DT2 = SEARCHBUYITEM();


            //找DataTable差集
            //要有相同的欄位名稱
            if (DT1.Rows.Count > 0 && DT2.Rows.Count > 0)
            {
                query2 = DT1.AsEnumerable().Except(DT2.AsEnumerable(), DataRowComparer.Default);
            }


            if (query2.Count() > 0)
            {
                //差集集合
                DataTable dt3 = query2.CopyToDataTable();

                foreach (DataRow dr in dt3.Rows)
                {
                    SEARCHUOFTB_WKF_TASK_TKGRAFFAIRS_1003(dr["DOC_NBR"].ToString());
                }
            }
        }

        public DataTable SEARCHUOFGA()
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            string THISYEARS = DateTime.Now.ToString("yyyy");
            //取西元年後2位
            THISYEARS = THISYEARS.Substring(2, 2);

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sbSql.Clear();
                sbSqlQuery.Clear();


                //是門市督導單STORE
                //核準過TASK_RESULT='0'
                sbSql.AppendFormat(@"  
                                     SELECT DOC_NBR
                                     FROM [UOF].DBO.TB_WKF_TASK 
                                     WHERE DOC_NBR LIKE 'GA1003{0}%'
                                     AND TASK_RESULT='0'
                                        UNION ALL 
                                        SELECT 'GA1003230100002'
                                    ", THISYEARS);


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    return ds1.Tables["ds1"];

                }
                else
                {
                    return null;
                }

            }
            catch
            {
                return null;
            }
            finally
            {
                sqlConn.Close();
            }
        }

        public DataTable SEARCHBUYITEM()
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            string THISYEARS = DateTime.Now.ToString("yyyy");
            //取西元年後2位
            THISYEARS = THISYEARS.Substring(2, 2);

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sbSql.Clear();
                sbSqlQuery.Clear();

                //UNION ALL 
                //SELECT 'A'
                //避免回傳NULL

                sbSql.AppendFormat(@"  
                                    SELECT [DOC_NBR]
                                    FROM  [TKGAFFAIRS].[dbo].[BUYITEM]
                                    WHERE [DOC_NBR] LIKE 'GA1003{0}%'
                                    UNION ALL 
									SELECT 'A'
                                    ", THISYEARS);


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    return ds1.Tables["ds1"];

                }
                else
                {
                    return null;
                }

            }
            catch
            {
                return null;
            }
            finally
            {
                sqlConn.Close();
            }
        }

     

        //找出UOF表單的資料，將CURRENT_DOC的內容，轉成xmlDoc
        //從xmlDoc找出各節點的Attributes
        public void SEARCHUOFTB_WKF_TASK_TKGRAFFAIRS_1003(string DOC_NBR)
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            int ROWS = 0;

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sbSql.Clear();
                sbSqlQuery.Clear();

                //庫存數量看LA009 IN ('20004','20006','20008','20019','20020'

                sbSql.AppendFormat(@"  
                                    SELECT * 
                                    FROM [UOF].DBO.TB_WKF_TASK 
                                    LEFT JOIN [UOF].[dbo].[TB_EB_USER] ON [TB_EB_USER].USER_GUID=TB_WKF_TASK.USER_GUID
                                    WHERE DOC_NBR LIKE '{0}%'
                              
                                    ", DOC_NBR);


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    string NAME = ds1.Tables["ds1"].Rows[0]["NAME"].ToString();

                    XmlDocument xmlDoc = new XmlDocument();

                    xmlDoc.LoadXml(ds1.Tables["ds1"].Rows[0]["CURRENT_DOC"].ToString());

                    //XmlNode node = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='ID']");
                    string BUYNO = "";
                    string BUYDATES = "";
                    string INDATES = "";
                    string GA007 = "";
                    XmlNode XNODES = null;

                    try
                    {
                        BUYNO = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='GA001']").Attributes["fieldValue"].Value;


                    }
                    catch { }
                    try
                    {
                        BUYDATES = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='GA005']").Attributes["fieldValue"].Value;

                    }
                    catch { }
                    try
                    {
                        INDATES = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='GA005']").Attributes["fieldValue"].Value;

                    }
                    catch { }
                    try
                    {
                        GA007 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='GA007']").Attributes["fieldValue"].Value;

                    }
                    catch { }
                    try
                    {
                        XNODES = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='GA008']/DataGrid");

                    }
                    catch { }

                    string SPEC = "";
                    string BUYNAME = "";
                    string GG003 = "";
                    string VENDOR = "";
                    string NUM = "";
                    string GG006 = "";
                    string DEP = "";
                    string GG008 = "";
                    string UNIT = "";


                    foreach (XmlNode nodeDataGrid in XNODES)
                    {
                        try
                        {
                            SPEC = nodeDataGrid.SelectSingleNode("./Cell[@fieldId='GG001']").Attributes["fieldValue"].Value;
                        }
                        catch
                        { }
                        try
                        {
                            BUYNAME = nodeDataGrid.SelectSingleNode("./Cell[@fieldId='GG002']").Attributes["fieldValue"].Value;

                        }
                        catch
                        { }
                        try
                        {
                            GG003 = nodeDataGrid.SelectSingleNode("./Cell[@fieldId='GG003']").Attributes["fieldValue"].Value;

                        }
                        catch
                        { }
                        try
                        {
                            VENDOR = nodeDataGrid.SelectSingleNode("./Cell[@fieldId='GG004']").Attributes["fieldValue"].Value;

                        }
                        catch
                        { }
                        try
                        {
                            NUM = nodeDataGrid.SelectSingleNode("./Cell[@fieldId='GG005']").Attributes["fieldValue"].Value;

                        }
                        catch
                        { }
                        try
                        {
                            GG006 = nodeDataGrid.SelectSingleNode("./Cell[@fieldId='GG006']").Attributes["fieldValue"].Value;

                        }
                        catch
                        { }
                        try
                        {
                            DEP = nodeDataGrid.SelectSingleNode("./Cell[@fieldId='GG007']").Attributes["fieldValue"].Value;

                        }
                        catch
                        { }
                        try
                        {
                            GG008 = nodeDataGrid.SelectSingleNode("./Cell[@fieldId='GG008']").Attributes["fieldValue"].Value;

                        }
                        catch
                        { }
                        try
                        {
                            UNIT = nodeDataGrid.SelectSingleNode("./Cell[@fieldId='GG009']").Attributes["fieldValue"].Value;

                        }
                        catch
                        { }


                        ROWS = ROWS + 1;
                        BUYNO = DOC_NBR + '-' + ROWS;

                        string STATUS = "1.詢價中";
                        //ADDBUYITEM(BUYDATES, BUYNO, NAME, DEP, BUYNAME, SPEC, VENDOR, NUM, UNIT, INDATES, STATUS, DOC_NBR);
                    }

                    //string OK = "";





                }
                else
                {

                }

            }
            catch
            {

            }
            finally
            {
                sqlConn.Close();
            }
        }

        public void ADDBUYITEM(string BUYDATES, string BUYNO, string NAME, string DEP, string BUYNAME, string SPEC, string VENDOR, string NUM, string UNIT, string INDATES, string STATUS, string DOC_NBR)
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sqlConn.Close();
                sqlConn.Open();
                tran = sqlConn.BeginTransaction();

                sbSql.Clear();

                sbSql.AppendFormat(@"
                                    INSERT INTO 
                                    [TKGAFFAIRS].[dbo].[BUYITEM]
                                    ([BUYDATES],[BUYNO],[NAME],[DEP],[BUYNAME],[SPEC],[VENDOR],[NUM],[UNIT],[INDATES],[STATUS],[DOC_NBR])
                                    VALUES
                                    ('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}')
                                    ", BUYDATES, BUYNO, NAME, DEP, BUYNAME, SPEC, VENDOR, NUM, UNIT, INDATES, STATUS, DOC_NBR);

                cmd.Connection = sqlConn;
                cmd.CommandTimeout = 60;
                cmd.CommandText = sbSql.ToString();
                cmd.Transaction = tran;
                result = cmd.ExecuteNonQuery();

                if (result == 0)
                {
                    tran.Rollback();    //交易取消
                }
                else
                {
                    tran.Commit();      //執行交易  
                }

            }
            catch
            {

            }

            finally
            {
                sqlConn.Close();
            }
        }

        public void ADD_UOF_FORM_GRAFFIRS_1005()
        {
            DataTable DT1003 = SEARCH_UOF_GRAFFIRS_1003();

            if(DT1003!=null && DT1003.Rows.Count>=1)
            {
                foreach (DataRow dr in DT1003.Rows)
                {
                    SEARCHUOFTB_WKF_TASK_TKGRAFFAIRS_1003_V2(dr["DOC_NBR"].ToString());
                }
            }

        }

        public DataTable SEARCH_UOF_GRAFFIRS_1003()
        {

            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();
          

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sbSql.Clear();
                sbSqlQuery.Clear();

               
                //AND DOC_NBR = 'GA1003230300113'
                sbSql.AppendFormat(@"  
                                    SELECT DOC_NBR
                                    FROM [UOF].[dbo].TB_WKF_TASK,[UOF].dbo.TB_WKF_FORM,[UOF].dbo.TB_WKF_FORM_VERSION
                                    WHERE TB_WKF_TASK.FORM_VERSION_ID=TB_WKF_FORM_VERSION.FORM_VERSION_ID
                                    AND TB_WKF_FORM.FORM_ID=TB_WKF_FORM_VERSION.FORM_ID
                                    AND TB_WKF_TASK.TASK_STATUS='2' AND TB_WKF_TASK.TASK_RESULT='0'
                                    AND TB_WKF_FORM.FORM_NAME='1003.雜項請購單'
                                    AND DOC_NBR NOT IN (SELECT  EXTERNAL_FORM_NBR FROM [UOF].[dbo].[TB_WKF_EXTERNAL_TASK] WHERE STATUS IN ('1','2')  AND ISNULL(EXTERNAL_FORM_NBR,'')<>'') 
                                    AND DOC_NBR>='GA1003230100138'
                        
                                    ORDER BY DOC_NBR
                                    ");


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    return ds1.Tables["ds1"];

                }
                else
                {
                    return null;
                }

            }
            catch
            {
                return null;
            }
            finally
            {
                sqlConn.Close();
            }
        }

        public void SEARCHUOFTB_WKF_TASK_TKGRAFFAIRS_1003_V2(string DOC_NBR)
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            int ROWS = 0;

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sbSql.Clear();
                sbSqlQuery.Clear();

                //庫存數量看LA009 IN ('20004','20006','20008','20019','20020'

                sbSql.AppendFormat(@"  
                                    SELECT * 
                                    FROM [UOF].DBO.TB_WKF_TASK 
                                    LEFT JOIN [UOF].[dbo].[TB_EB_USER] ON [TB_EB_USER].USER_GUID=TB_WKF_TASK.USER_GUID
                                    WHERE DOC_NBR LIKE '{0}%'
                              
                                    ", DOC_NBR);


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    string NAME = ds1.Tables["ds1"].Rows[0]["NAME"].ToString();
                    string USER_GUID= ds1.Tables["ds1"].Rows[0]["USER_GUID"].ToString();

                    XmlDocument xmlDoc = new XmlDocument();

                    xmlDoc.LoadXml(ds1.Tables["ds1"].Rows[0]["CURRENT_DOC"].ToString());

                    //XmlNode node = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='ID']");

                    string GA001 = "";
                    string GA002 = "";
                    string GA003 = "";
                    string GA004 = "";
                    string GA005 = "";
                    string GA006 = "";
                    string GA007 = "";
                    string GA008 = "";
                    string GA009 = "";
                    string GA010 = "";
                    string GA011 = "";
                    string GA012 = "";
                    string GA013 = "";
                    string GA014 = "";
                    string GA015 = "";
                    string GA016 = "";
                    string GA017 = "";
                    string GA098 = "";
                    string GA099 = "";
                    string GA999 = "";
                    string GG010 = "";

                    XmlNode XNODES = null;

                    try
                    {
                        GA001 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='GA005']").Attributes["fieldValue"].Value;
                    }
                    catch { }
                    try
                    {
                        GA003 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='GA006']").Attributes["fieldValue"].Value;
                    }
                    catch { }
                    try
                    {
                        GA004 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='GA007']").Attributes["fieldValue"].Value;
                    }
                    catch { }
                    try
                    {
                        string TEMP_GA999 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='GA010']").Attributes["fieldValue"].Value;

                        GA999=FIND_TKGAFFAIRS_TBASSINGS(TEMP_GA999);

                        //if(TEMP_GA999.Equals("何翔鈞(190041)"))
                        //{
                        //    GA999 = "何翔鈞";
                        //}
                        //else if (TEMP_GA999.Equals("吳德明(230034)"))
                        //{
                        //    GA999 = "吳德明";
                        //}
                        //else if (TEMP_GA999.Equals("邱筠軒(190029)"))
                        //{
                        //    GA999 = "邱筠軒";
                        //}
                        //else
                        //{
                        //    GA999 = "何翔鈞";
                        //}
                    }
                    catch { }
                    try
                    {
                        string TEMP = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='GA010']").Attributes["fieldValue"].Value;

                        string NAMES = TEMP.Substring(0, 3);
                        DataTable DT = SEARCH_UOF_TB_EB_USER(NAMES);

                        if (DT != null && DT.Rows.Count >= 1)
                        {
                            USER_GUID = DT.Rows[0]["USER_GUID"].ToString();
                        }

                    }
                    catch { }
                    try
                    {
                        XNODES = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='GA008']/DataGrid");

                    }
                    catch { }

                   


                    foreach (XmlNode nodeDataGrid in XNODES)
                    {
                        try
                        {
                            GA005 = nodeDataGrid.SelectSingleNode("./Cell[@fieldId='GG002']").Attributes["fieldValue"].Value;
                        }
                        catch
                        { }
                        try
                        {
                            GA006 = nodeDataGrid.SelectSingleNode("./Cell[@fieldId='GG003']").Attributes["fieldValue"].Value;

                        }
                        catch
                        { }
                        try
                        {
                            GA007 = nodeDataGrid.SelectSingleNode("./Cell[@fieldId='GG009']").Attributes["fieldValue"].Value;

                        }
                        catch
                        { }
                        try
                        {
                            GA008 = nodeDataGrid.SelectSingleNode("./Cell[@fieldId='GG005']").Attributes["fieldValue"].Value;

                        }
                        catch
                        { }                     
                        try
                        {
                            GA011 = nodeDataGrid.SelectSingleNode("./Cell[@fieldId='GG004']").Attributes["fieldValue"].Value;

                        }
                        catch
                        { }
                        try
                        {
                            GG010 = nodeDataGrid.SelectSingleNode("./Cell[@fieldId='GG010']").Attributes["fieldValue"].Value;
                            
                        }
                        catch
                        { }


                        ROWS = ROWS + 1;
                        GA002 = DOC_NBR;
                        GA017 = DOC_NBR + '-' + ROWS;

                        ADD_GRAFFAIRS_1005_TB_WKF_EXTERNAL_TASK(USER_GUID, DOC_NBR
                                                        , GA001
                                                        , GA002
                                                        , GA003
                                                        , GA004
                                                        , GA005
                                                        , GA006
                                                        , GA007
                                                        , GA008
                                                        , GA009
                                                        , GA010
                                                        , GA011
                                                        , GA012
                                                        , GA013
                                                        , GA014
                                                        , GA015
                                                        , GA016
                                                        , GA017
                                                        , GA098
                                                        , GA099
                                                        , GA999
                                                        , GG010
                                                        );


                    }

                    //string OK = "";





                }
                else
                {

                }

            }
            catch
            {

            }
            finally
            {
                sqlConn.Close();
            }
        }

        public DataTable SEARCH_UOF_TB_EB_USER(string NAME)
        {

            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();


            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sbSql.Clear();
                sbSqlQuery.Clear();


                //AND DOC_NBR = 'GA1003230300113'
                sbSql.AppendFormat(@"  
                                    SELECT USER_GUID,NAME
                                    FROM [UOF].[dbo].[TB_EB_USER] 
                                    WHERE [TB_EB_USER].NAME='{0}'
                                    ", NAME);


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    return ds1.Tables["ds1"];

                }
                else
                {
                    return null;
                }

            }
            catch
            {
                return null;
            }
            finally
            {
                sqlConn.Close();
            }
        }


        public void ADD_GRAFFAIRS_1005_TB_WKF_EXTERNAL_TASK(string USER_GUID,string DOC_NBR
            ,string GA001
            , string GA002
            , string GA003
            , string GA004
            , string GA005
            , string GA006
            , string GA007
            , string GA008
            , string GA009
            , string GA010
            , string GA011
            , string GA012
            , string GA013
            , string GA014
            , string GA015
            , string GA016
            , string GA017
            , string GA098
            , string GA099
            , string GA999
            , string GA019
            )
        {

            //DataTable FORM_USERS = FIND_Z_UOF_SET_FORM_USERS("1005.雜項採購單");
            //DataTable DTUSERDEP = SEARCHUOFUSERDEP(FORM_USERS.Rows[0]["USER_GUID"].ToString());
            
            DataTable DTUSERDEP = SEARCHUOFUSERDEP(USER_GUID);
            DataTable DTUSERDEP_Defalut = SEARCHUOFUSERDEP_Defalut();
            //DataTable DTUSERDEP_SET = SEARCHUOFUSERDEP(USER_GUID);
            //string account_SET = DTUSERDEP_SET.Rows[0]["ACCOUNT"].ToString();
            //string groupId_SET = DTUSERDEP_SET.Rows[0]["GROUP_ID"].ToString();
            //string jobTitleId_SET = DTUSERDEP_SET.Rows[0]["TITLE_ID"].ToString();

            string account = "";
            string groupId = "";
            string jobTitleId = "";
            string fillerName = "";
            string fillerUserGuid = "";

            string DEPNAME = "";
            string DEPNO = "";

            if (DTUSERDEP!=null&& DTUSERDEP.Rows.Count>=1)
            {
                account = DTUSERDEP.Rows[0]["ACCOUNT"].ToString();
                groupId = DTUSERDEP.Rows[0]["GROUP_ID"].ToString();
                jobTitleId = DTUSERDEP.Rows[0]["TITLE_ID"].ToString();
                fillerName = DTUSERDEP.Rows[0]["NAME"].ToString();
                fillerUserGuid = DTUSERDEP.Rows[0]["USER_GUID"].ToString();

                DEPNAME = DTUSERDEP.Rows[0]["DEPNAME"].ToString();
                DEPNO = DTUSERDEP.Rows[0]["DEPNO"].ToString();

            }
            else
            {
                account = DTUSERDEP_Defalut.Rows[0]["ACCOUNT"].ToString();
                groupId = DTUSERDEP_Defalut.Rows[0]["GROUP_ID"].ToString();
                jobTitleId = DTUSERDEP_Defalut.Rows[0]["TITLE_ID"].ToString();
                fillerName = DTUSERDEP_Defalut.Rows[0]["NAME"].ToString();
                fillerUserGuid = DTUSERDEP_Defalut.Rows[0]["USER_GUID"].ToString();

                DEPNAME = DTUSERDEP_Defalut.Rows[0]["DEPNAME"].ToString();
                DEPNO = DTUSERDEP_Defalut.Rows[0]["DEPNO"].ToString();
            }

            string  EXTERNAL_FORM_NBR = DOC_NBR;

            


            int rowscounts = 0;

            XmlDocument xmlDoc = new XmlDocument();
            //建立根節點
            XmlElement Form = xmlDoc.CreateElement("Form");

            //正式的id
            string FORMID = SEARCHFORM_UOF_VERSION_ID("1005.雜項採購單");

            if (!string.IsNullOrEmpty(FORMID))
            {
                Form.SetAttribute("formVersionId", FORMID);
            }


            Form.SetAttribute("urgentLevel", "2");
            //加入節點底下
            xmlDoc.AppendChild(Form);

            ////建立節點Applicant
            XmlElement Applicant = xmlDoc.CreateElement("Applicant");
            Applicant.SetAttribute("account", account);
            Applicant.SetAttribute("groupId", groupId);
            Applicant.SetAttribute("jobTitleId", jobTitleId);
            //加入節點底下
            Form.AppendChild(Applicant);

            //建立節點 Comment
            XmlElement Comment = xmlDoc.CreateElement("Comment");
            Comment.InnerText = "申請者意見";
            //加入至節點底下
            Applicant.AppendChild(Comment);

            //建立節點 FormFieldValue
            XmlElement FormFieldValue = xmlDoc.CreateElement("FormFieldValue");
            //加入至節點底下
            Form.AppendChild(FormFieldValue);

            //建立節點FieldItem
            //ID 表單編號	
            XmlElement FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "ID");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //GA001	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "GA001");
            FieldItem.SetAttribute("fieldValue", GA001);
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //GA002	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "GA002");
            FieldItem.SetAttribute("fieldValue", GA002);
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //GA003	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "GA003");
            FieldItem.SetAttribute("fieldValue", GA003);
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //GA004	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "GA004");
            FieldItem.SetAttribute("fieldValue", GA004);
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //GA005	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "GA005");
            FieldItem.SetAttribute("fieldValue", GA005);
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //GA006	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "GA006");
            FieldItem.SetAttribute("fieldValue", GA006);
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //GA007	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "GA007");
            FieldItem.SetAttribute("fieldValue", GA007);
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //GA008	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "GA008");
            FieldItem.SetAttribute("fieldValue", GA008);
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //GA009	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "GA009");
            FieldItem.SetAttribute("fieldValue", GA009);
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //GA010	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "GA010");
            FieldItem.SetAttribute("fieldValue", GA010);
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //GA011	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "GA011");
            FieldItem.SetAttribute("fieldValue", GA011);
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //GA012	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "GA012");
            FieldItem.SetAttribute("fieldValue", GA012);
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //GA013	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "GA013");
            FieldItem.SetAttribute("fieldValue", GA013);
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //GA014	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "GA014");
            FieldItem.SetAttribute("fieldValue", GA014);
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //GA015	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "GA015");
            FieldItem.SetAttribute("fieldValue", GA015);
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //GA016	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "GA016");
            FieldItem.SetAttribute("fieldValue", GA016);
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //GA017	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "GA017");
            FieldItem.SetAttribute("fieldValue", GA017);
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //GA098
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "GA098");
            FieldItem.SetAttribute("fieldValue", GA098);
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //GA099	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "GA099");
            FieldItem.SetAttribute("fieldValue", GA099);
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //GA999	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "GA999");
            FieldItem.SetAttribute("fieldValue", GA999);
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //GA019	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "GA019");
            FieldItem.SetAttribute("fieldValue", GA019);
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);





            ////DataGrid
            ////建立節點FieldItem
            ////INVTB
            //FieldItem = xmlDoc.CreateElement("FieldItem");
            //FieldItem.SetAttribute("fieldId", "DETAILS");
            //FieldItem.SetAttribute("fieldValue", "");
            //FieldItem.SetAttribute("realValue", "");
            //FieldItem.SetAttribute("enableSearch", "True");
            //FieldItem.SetAttribute("fillerName", fillerName);
            //FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            //FieldItem.SetAttribute("fillerAccount", account);
            //FieldItem.SetAttribute("fillSiteId", "");
            ////加入至members節點底下
            //FormFieldValue.AppendChild(FieldItem);

            ////建立節點 DataGrid
            //XmlElement DataGrid = xmlDoc.CreateElement("DataGrid");
            ////DataGrid 加入至 TB 節點底下
            //XmlNode DETAILS = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='DETAILS']");
            //DETAILS.AppendChild(DataGrid);


            //foreach (DataRow od in DT.Rows)
            //{




            //    rowscounts = rowscounts + 1;

            //    //DataGrid PURTM
            //    XmlNode DataGridS = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='DETAILS']/DataGrid");
            //    DataGridS.AppendChild(Row);

            //}


            ////用ADDTACK，直接啟動起單
            //ADDTACK(Form);

            //ADD TO DB
            ////string connectionString = ConfigurationManager.ConnectionStrings["dbUOF"].ToString();

            //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
            //sqlConn = new SqlConnection(connectionString);

            //20210902密
            Class1 TKID = new Class1();//用new 建立類別實體
            SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

            //資料庫使用者密碼解密
            sqlsb.Password = TKID.Decryption(sqlsb.Password);
            sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

            String connectionString;
            sqlConn = new SqlConnection(sqlsb.ConnectionString);
            connectionString = sqlConn.ConnectionString.ToString();

            StringBuilder queryString = new StringBuilder();




            queryString.AppendFormat(@" INSERT INTO [{0}].dbo.TB_WKF_EXTERNAL_TASK
                                         (EXTERNAL_TASK_ID,FORM_INFO,STATUS,EXTERNAL_FORM_NBR)
                                        VALUES (NEWID(),@XML,2,'{1}')
                                        ", DBNAME, EXTERNAL_FORM_NBR);

            try
            {
                using (SqlConnection connection = new SqlConnection(connectionString))
                {

                    SqlCommand command = new SqlCommand(queryString.ToString(), connection);
                    command.Parameters.Add("@XML", SqlDbType.NVarChar).Value = Form.OuterXml;

                    command.Connection.Open();

                    int count = command.ExecuteNonQuery();

                    connection.Close();
                    connection.Dispose();

                }
            }
            catch
            {

            }
            finally
            {

            }
        }

        public DataTable SEARCHUOFUSERDEP(string USER_GUID)
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sbSql.Clear();
                sbSqlQuery.Clear();

                sbSql.AppendFormat(@"  
                                    SELECT 
                                    [GROUP_NAME] AS 'DEPNAME'
                                    ,[TB_EB_EMPL_DEP].[GROUP_ID]+','+[GROUP_NAME]+',False' AS 'DEPNO'
                                    ,[TB_EB_USER].[USER_GUID]
                                    ,[ACCOUNT]
                                    ,[NAME]
                                    ,[TB_EB_EMPL_DEP].[GROUP_ID]
                                    ,[TITLE_ID]     
                                    ,[GROUP_NAME]
                                    ,[GROUP_CODE]
                                    FROM [192.168.1.223].[UOF].[dbo].[TB_EB_USER],[192.168.1.223].[UOF].[dbo].[TB_EB_EMPL_DEP],[192.168.1.223].[UOF].[dbo].[TB_EB_GROUP]
                                    WHERE [TB_EB_USER].[USER_GUID]=[TB_EB_EMPL_DEP].[USER_GUID]
                                    AND [TB_EB_EMPL_DEP].[GROUP_ID]=[TB_EB_GROUP].[GROUP_ID]
                                    AND ISNULL([TB_EB_GROUP].[GROUP_CODE],'')<>''
                                    AND [TB_EB_USER].[USER_GUID]='{0}'
                              
                                    ", USER_GUID);


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    return ds1.Tables["ds1"];

                }
                else
                {
                    return null;
                }

            }
            catch
            {
                return null;
            }
            finally
            {
                sqlConn.Close();
            }
        }
        public DataTable SEARCHUOFUSERDEP_Defalut()
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sbSql.Clear();
                sbSqlQuery.Clear();

                sbSql.AppendFormat(@"  
                                    SELECT 
                                    [ACCOUNT]
                                    ,[GROUP_ID]
                                    ,[TITLE_ID]
                                    ,[NAME]
                                    ,[USER_GUID]
                                    ,[DEPNAME]
                                    ,[DEPNO]
                                    FROM [TKGAFFAIRS].[dbo].[UOF1005DEFALUT]
                              
                                    ");


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    return ds1.Tables["ds1"];

                }
                else
                {
                    return null;
                }

            }
            catch
            {
                return null;
            }
            finally
            {
                sqlConn.Close();
            }
        }

        public void ADD_TKGAFFAIRS_BUYITEMREPORTS()
        {
            DataTable DTSEARCHUOF_GRAFFAIRS_1005 = SEARCHUOF_GRAFFAIRS_1005();

            if (DTSEARCHUOF_GRAFFAIRS_1005 != null && DTSEARCHUOF_GRAFFAIRS_1005.Rows.Count >= 1)
            {
                foreach (DataRow DR in DTSEARCHUOF_GRAFFAIRS_1005.Rows)
                {
                    string USER_GUID = DR["USER_GUID"].ToString();
                    string EMAILTO = DR["EMAIL"].ToString();

                    XmlDocument xmlDoc = new XmlDocument();
                    xmlDoc.LoadXml(DR["CURRENT_DOC"].ToString());

                    //XmlNode node = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='ID']");

                    string ID = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='ID']").Attributes["fieldValue"].Value;
                    string GA001 = "";
                    string GA002 = "";
                    string GA003 = "";
                    string GA004 = "";
                    string GA005 = "";
                    string GA006 = "";
                    string GA007 = "";
                    string GA008 = "";
                    string GA009 = "";
                    string GA010 = "";
                    string GA011 = "";
                    string GA012 = "";
                    string GA013 = "";
                    string GA014 = "";
                    string GA015 = "";
                    string GA016 = "";
                    string GA017 = "";
                    string GA018 = "";
                    string GA099 = "";
                    string GA999 = "";

                    try
                    {
                        GA001 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='GA001']").Attributes["fieldValue"].Value;
                    }
                    catch { }
                    try
                    {
                        GA002 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='GA002']").Attributes["fieldValue"].Value;
                    }
                    catch { }
                    try
                    {
                        GA003 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='GA003']").Attributes["fieldValue"].Value;
                    }
                    catch { }
                    try
                    {
                        GA004 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='GA004']").Attributes["fieldValue"].Value;
                    }
                    catch { }
                    try
                    {
                        GA005 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='GA005']").Attributes["fieldValue"].Value;
                    }
                    catch { }
                    try
                    {
                        GA006 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='GA006']").Attributes["fieldValue"].Value;
                    }
                    catch { }
                    try
                    {
                        GA007 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='GA007']").Attributes["fieldValue"].Value;
                    }
                    catch { }
                    try
                    {
                        GA008 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='GA008']").Attributes["fieldValue"].Value;
                    }
                    catch { }
                    try
                    {
                        GA009 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='GA009']").Attributes["fieldValue"].Value;
                    }
                    catch { }
                    try
                    {
                        GA010 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='GA010']").Attributes["fieldValue"].Value;

                    
                    }
                    catch { }
                    try
                    {
                        GA011 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='GA011']").Attributes["fieldValue"].Value;
                    }
                    catch { }
                    try
                    {
                        GA012 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='GA012']").Attributes["fieldValue"].Value;
                    }
                    catch { }
                    try
                    {
                        GA013 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='GA013']").Attributes["fieldValue"].Value;
                    }
                    catch { }
                    try
                    {
                        GA014 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='GA014']").Attributes["fieldValue"].Value;
                    }
                    catch { }
                    try
                    {
                        GA015 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='GA015']").Attributes["fieldValue"].Value;
                    }
                    catch { }
                    try
                    {
                        GA016 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='GA016']").Attributes["fieldValue"].Value;
                    }
                    catch { }
                    try
                    {
                        GA017 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='GA017']").Attributes["fieldValue"].Value;
                    }
                    catch { }
                    try
                    {
                        GA018 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='GA018']").Attributes["fieldValue"].Value;
                    }
                    catch { }
                    try
                    {
                        GA099 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='GA099']").Attributes["fieldValue"].Value;
                    }
                    catch { }
                    try
                    {
                        GA999 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='GA999']").Attributes["fieldValue"].Value;
                    }
                    catch { }

                    ADD_TO_TKGAFFAIRS_BUYITEMREPORTS(
                                         ID
                                        , GA001
                                        , GA002
                                        , GA003
                                        , GA004
                                        , GA005
                                        , GA006
                                        , GA007
                                        , GA008
                                        , GA009
                                        , GA010
                                        , GA011
                                        , GA012
                                        , GA013
                                        , GA014
                                        , GA015
                                        , GA016
                                        , GA017
                                        , GA018
                                        , GA099
                                        , GA999
                                                    );

                }
            }

        }

        //找出昨天，已核單完成的採購單-1005.雜項採購單
        public DataTable SEARCHUOF_GRAFFAIRS_1005()
        {
            StringBuilder MESS = new StringBuilder();
            DataSet DS_FIND_UOF_TASK_APPLICATION_FORM = new DataSet();

            SqlDataAdapter adapter = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder = new SqlCommandBuilder();

            string END_TIME = DateTime.Now.AddDays(0).ToString("yyyyMMdd");

            try
            {
                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);


                sbSql.Clear();
                sbSqlQuery.Clear();


                sbSql.AppendFormat(@"                                    
                                    SELECT CURRENT_DOC,* 
                                   
                                    FROM [UOF].[dbo].TB_WKF_TASK ,[UOF].[dbo].[TB_EB_USER],[UOF].dbo.TB_WKF_FORM,[UOF].dbo.TB_WKF_FORM_VERSION
                                    WHERE TB_WKF_TASK.USER_GUID=[TB_EB_USER].USER_GUID
                                    AND TB_WKF_TASK.FORM_VERSION_ID=TB_WKF_FORM_VERSION.FORM_VERSION_ID
                                    AND TB_WKF_FORM.FORM_ID=TB_WKF_FORM_VERSION.FORM_ID
                                    AND TB_WKF_FORM.FORM_NAME='1005.雜項採購單'
                                    AND TASK_RESULT='0' AND TASK_STATUS='2'
                                    AND CONVERT(NVARCHAR,END_TIME,112)='{0}'
                                    AND DOC_NBR COLLATE Chinese_Taiwan_Stroke_BIN NOT IN (SELECT  [ID] FROM [192.168.1.105].[TKGAFFAIRS].[dbo].[BUYITEMREPORTS]) 

                                   ", END_TIME);

                adapter = new SqlDataAdapter(@"" + sbSql.ToString(), sqlConn);

                sqlCmdBuilder = new SqlCommandBuilder(adapter);
                sqlConn.Open();
                DS_FIND_UOF_TASK_APPLICATION_FORM.Clear();
                adapter.Fill(DS_FIND_UOF_TASK_APPLICATION_FORM, "DS_FIND_UOF_TASK_APPLICATION_FORM");
                sqlConn.Close();



                if (DS_FIND_UOF_TASK_APPLICATION_FORM.Tables["DS_FIND_UOF_TASK_APPLICATION_FORM"].Rows.Count > 0)
                {

                    return DS_FIND_UOF_TASK_APPLICATION_FORM.Tables["DS_FIND_UOF_TASK_APPLICATION_FORM"];
                }
                else
                {
                    return null;
                }

            }
            catch
            {
                return null;
            }
            finally
            {

            }

        }

        public void ADD_TO_TKGAFFAIRS_BUYITEMREPORTS(
                                         string ID
                                        , string GA001
                                        , string GA002
                                        , string GA003
                                        , string GA004
                                        , string GA005
                                        , string GA006
                                        , string GA007
                                        , string GA008
                                        , string GA009
                                        , string GA010
                                        , string GA011
                                        , string GA012
                                        , string GA013
                                        , string GA014
                                        , string GA015
                                        , string GA016
                                        , string GA017
                                        , string GA018
                                        , string GA099
                                        , string GA999
                                                    )
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sqlConn.Close();
                sqlConn.Open();
                tran = sqlConn.BeginTransaction();

                sbSql.Clear();

                sbSql.AppendFormat(@"
                                    INSERT INTO [TKGAFFAIRS].[dbo].[BUYITEMREPORTS]
                                    (
                                    [ID]
                                    ,[GA001]
                                    ,[GA002]
                                    ,[GA003]
                                    ,[GA004]
                                    ,[GA005]
                                    ,[GA006]
                                    ,[GA007]
                                    ,[GA008]
                                    ,[GA009]
                                    ,[GA010]
                                    ,[GA011]
                                    ,[GA012]
                                    ,[GA013]
                                    ,[GA014]
                                    ,[GA015]
                                    ,[GA016]
                                    ,[GA017]
                                    ,[GA018]
                                    ,[GA099]
                                    ,[GA999]
                                  
                                
                                    )
                                    VALUES
                                    (
                                    '{0}'
                                    ,'{1}'
                                    ,'{2}'
                                    ,'{3}'
                                    ,'{4}'
                                    ,'{5}'
                                    ,'{6}'
                                    ,'{7}'
                                    ,'{8}'
                                    ,'{9}'
                                    ,'{10}'
                                    ,'{11}'
                                    ,'{12}'
                                    ,'{13}'
                                    ,'{14}'
                                    ,'{15}'
                                    ,'{16}'
                                    ,'{17}'
                                    ,'{18}'
                                    ,'{19}'
                                    ,'{20}'

                                    )

                                    ", ID
                                    , GA001
                                    , GA002
                                    , GA003
                                    , GA004
                                    , GA005
                                    , GA006
                                    , GA007
                                    , GA008
                                    , GA009
                                    , GA010
                                    , GA011
                                    , GA012
                                    , GA013
                                    , GA014
                                    , GA015
                                    , GA016
                                    , GA017
                                    , GA018
                                    , GA099
                                    , GA999

                                    );

                cmd.Connection = sqlConn;
                cmd.CommandTimeout = 60;
                cmd.CommandText = sbSql.ToString();
                cmd.Transaction = tran;
                result = cmd.ExecuteNonQuery();

                if (result == 0)
                {
                    tran.Rollback();    //交易取消
                }
                else
                {
                    tran.Commit();      //執行交易  
                }

            }
            catch
            {

            }

            finally
            {
                sqlConn.Close();
            }

        }

        public void ADDUOFASTMBASTMCASTTCASTTD()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp22"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                DataSet ds1 = new DataSet();
                SqlDataAdapter adapter1 = new SqlDataAdapter();
                SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();

                sbSql.Clear();
                sbSqlQuery.Clear();

                //TL006='N' AND (UDF01 IN ('Y','y') ) 
                sbSql.AppendFormat(@" 
                                    SELECT TC001,TC002
                                    FROM [TK].dbo.ASTTC
                                    WHERE  UDF01 IN ('Y','y')
                                    AND TC001 IN ('AC21')
                                    ORDER BY TC001,TC002


                                    ");

                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");


                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    foreach (DataRow dr in ds1.Tables["ds1"].Rows)
                    {
                        ADD_ASTTC_TB_WKF_EXTERNAL_TASK(dr["TC001"].ToString().Trim(), dr["TC002"].ToString().Trim());
                    }

                }
                else
                {

                }

            }
            catch
            {

            }
            finally
            {
                sqlConn.Close();
            }

            UPDATE_ASTTC_UDF01();
        }

        public void UPDATE_ASTTC_UDF01()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dbconn"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sqlConn.Close();
                sqlConn.Open();
                tran = sqlConn.BeginTransaction();

                sbSql.Clear();

                sbSql.AppendFormat(@"  
                                    UPDATE  [TK].dbo.ASTTC
                                    SET UDF01 = 'UOF'
                                    
                                    WHERE UDF01 IN ('Y','y')                             
                                    AND TC001 IN ('AC21')
                                    ");

                cmd.Connection = sqlConn;
                cmd.CommandTimeout = 60;
                cmd.CommandText = sbSql.ToString();
                cmd.Transaction = tran;
                result = cmd.ExecuteNonQuery();

                if (result == 0)
                {
                    tran.Rollback();    //交易取消
                }
                else
                {
                    tran.Commit();      //執行交易  
                }

            }
            catch
            {

            }

            finally
            {
                sqlConn.Close();
            }
        }
        public void ADD_ASTTC_TB_WKF_EXTERNAL_TASK(string TC001,string TC002)
        {

            DataTable DT = SEARCH_ASTTC(TC001, TC002);
            DataTable DTUPFDEP = SEARCHUOFDEP(DT.Rows[0]["CREATOR"].ToString());

            string account = DT.Rows[0]["CREATOR"].ToString();
            string groupId = DT.Rows[0]["GROUP_ID"].ToString();
            string jobTitleId = DT.Rows[0]["TITLE_ID"].ToString();
            string fillerName = DT.Rows[0]["MV002"].ToString();
            string fillerUserGuid = DT.Rows[0]["USER_GUID"].ToString();

            string DEPNAME = DTUPFDEP.Rows[0]["DEPNAME"].ToString();
            string DEPNO = DTUPFDEP.Rows[0]["DEPNO"].ToString();

            string EXTERNAL_FORM_NBR = DT.Rows[0]["TC001"].ToString().Trim()+ DT.Rows[0]["TC002"].ToString().Trim();

            int rowscounts = 0;

            XmlDocument xmlDoc = new XmlDocument();
            //建立根節點
            XmlElement Form = xmlDoc.CreateElement("Form");

            //正式的id
            string FORMID = SEARCHFORM_UOF_VERSION_ID("ASTI06.資產改良建立作業");

            if (!string.IsNullOrEmpty(FORMID))
            {
                Form.SetAttribute("formVersionId", FORMID);
            }


            Form.SetAttribute("urgentLevel", "2");
            //加入節點底下
            xmlDoc.AppendChild(Form);

            ////建立節點Applicant
            XmlElement Applicant = xmlDoc.CreateElement("Applicant");
            Applicant.SetAttribute("account", account);
            Applicant.SetAttribute("groupId", groupId);
            Applicant.SetAttribute("jobTitleId", jobTitleId);
            //加入節點底下
            Form.AppendChild(Applicant);

            //建立節點 Comment
            XmlElement Comment = xmlDoc.CreateElement("Comment");
            Comment.InnerText = "申請者意見";
            //加入至節點底下
            Applicant.AppendChild(Comment);

            //建立節點 FormFieldValue
            XmlElement FormFieldValue = xmlDoc.CreateElement("FormFieldValue");
            //加入至節點底下
            Form.AppendChild(FormFieldValue);

            //建立節點FieldItem
            //ID 表單編號	
            XmlElement FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "ID");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC001	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC001");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC001"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC002	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC002");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC002"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //MB001	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "MB001");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["MB001"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //MB002	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "MB002");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["MB002"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //MB003	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "MB003");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["MB003"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);



            //DataGrid
            //建立節點FieldItem
            //DETAILS
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "DETAILS");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點 DataGrid
            XmlElement DataGrid = xmlDoc.CreateElement("DataGrid");
            //DataGrid 加入至 TB 節點底下
            XmlNode DETAILS = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='DETAILS']");
            DETAILS.AppendChild(DataGrid);


            foreach (DataRow od in DT.Rows)
            {
                // 新增 Row
                XmlElement Row = xmlDoc.CreateElement("Row");
                Row.SetAttribute("order", (rowscounts).ToString());              
                

                //Row	TC003
                XmlElement Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TC003");
                Cell.SetAttribute("fieldValue", od["TC003"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TC004
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TC004");
                Cell.SetAttribute("fieldValue", od["TC004"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TC005
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TC005");
                Cell.SetAttribute("fieldValue", od["TC005"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TC006
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TC006");
                Cell.SetAttribute("fieldValue", od["TC006"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);
                //Row	TC007
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TC007");
                Cell.SetAttribute("fieldValue", od["TC007"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);
                //Row	TC008
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TC008");
                Cell.SetAttribute("fieldValue", od["TC008"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);               

                //Row	TC009
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TC009");
                Cell.SetAttribute("fieldValue", od["TC009"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TC010
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TC010");
                Cell.SetAttribute("fieldValue", od["TC010"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TC019
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TC019");
                Cell.SetAttribute("fieldValue", od["TC019"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TC020
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TC020");
                Cell.SetAttribute("fieldValue", od["TC020"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TC033
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TC033");
                Cell.SetAttribute("fieldValue", od["TC033"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TC037
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TC037");
                Cell.SetAttribute("fieldValue", od["TC037"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TC038
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TC038");
                Cell.SetAttribute("fieldValue", od["TC038"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TC039
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TC039");
                Cell.SetAttribute("fieldValue", od["TC039"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TC040
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TC040");
                Cell.SetAttribute("fieldValue", od["TC040"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TC041
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TC041");
                Cell.SetAttribute("fieldValue", od["TC041"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TC042
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TC042");
                Cell.SetAttribute("fieldValue", od["TC042"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TC043
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TC043");
                Cell.SetAttribute("fieldValue", od["TC043"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TC076
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TC076");
                Cell.SetAttribute("fieldValue", od["TC076"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);




                rowscounts = rowscounts + 1;

                //DataGrid PURTM
                XmlNode DataGridS = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='DETAILS']/DataGrid");
                DataGridS.AppendChild(Row);

            }


            ////用ADDTACK，直接啟動起單
            //ADDTACK(Form);

            //ADD TO DB
            ////string connectionString = ConfigurationManager.ConnectionStrings["dbUOF"].ToString();

            //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
            //sqlConn = new SqlConnection(connectionString);

            //20210902密
            Class1 TKID = new Class1();//用new 建立類別實體
            SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

            //資料庫使用者密碼解密
            sqlsb.Password = TKID.Decryption(sqlsb.Password);
            sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

            String connectionString;
            sqlConn = new SqlConnection(sqlsb.ConnectionString);
            connectionString = sqlConn.ConnectionString.ToString();

            StringBuilder queryString = new StringBuilder();




            queryString.AppendFormat(@" INSERT INTO [{0}].dbo.TB_WKF_EXTERNAL_TASK
                                         (EXTERNAL_TASK_ID,FORM_INFO,STATUS,EXTERNAL_FORM_NBR)
                                        VALUES (NEWID(),@XML,2,'{1}')
                                        ", DBNAME, EXTERNAL_FORM_NBR);

            try
            {
                using (SqlConnection connection = new SqlConnection(connectionString))
                {

                    SqlCommand command = new SqlCommand(queryString.ToString(), connection);
                    command.Parameters.Add("@XML", SqlDbType.NVarChar).Value = Form.OuterXml;

                    command.Connection.Open();

                    int count = command.ExecuteNonQuery();

                    connection.Close();
                    connection.Dispose();

                }
            }
            catch
            {

            }
            finally
            {

            }
        }


        public DataTable SEARCH_ASTTC(string TC001,string TC002)
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);


                sbSql.Clear();
                sbSqlQuery.Clear();

                //庫存數量看LA009 IN ('20004','20006','20008','20019','20020'

                sbSql.AppendFormat(@"  
                                    SELECT *
                                    ,USER_GUID,NAME
                                    ,(SELECT TOP 1 GROUP_ID FROM [192.168.1.223].[UOF].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'GROUP_ID'
                                    ,(SELECT TOP 1 TITLE_ID FROM [192.168.1.223].[UOF].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'TITLE_ID'
                                    FROM 
                                    (
                                    SELECT   
                                    ASTTC.[COMPANY]
                                    ,ASTTC.[CREATOR]
                                    ,ASTTC.[USR_GROUP]
                                    ,ASTTC.[CREATE_DATE]
                                    ,ASTTC.[MODIFIER]
                                    ,ASTTC.[MODI_DATE]
                                    ,ASTTC.[FLAG]
                                    ,ASTTC.[CREATE_TIME]
                                    ,ASTTC.[MODI_TIME]
                                    ,ASTTC.[TRANS_TYPE]
                                    ,ASTTC.[TRANS_NAME]
                                    ,ASTTC.[sync_date]
                                    ,ASTTC.[sync_time]
                                    ,ASTTC.[sync_mark]
                                    ,ASTTC.[sync_count]
                                    ,ASTTC.[DataUser]
                                    ,ASTTC.[DataGroup]                                 
                                    ,[TC001]
                                    ,[TC002]
                                    ,[TC003]
                                    ,[TC004]
                                    ,[TC005]
                                    ,[TC006]
                                    ,[TC007]
                                    ,[TC008]
                                    ,[TC009]
                                    ,[TC010]
                                    ,[TC011]
                                    ,[TC012]
                                    ,[TC013]
                                    ,[TC014]
                                    ,[TC015]
                                    ,[TC016]
                                    ,[TC017]
                                    ,[TC018]
                                    ,[TC019]
                                    ,[TC020]
                                    ,[TC021]
                                    ,[TC022]
                                    ,[TC023]
                                    ,[TC024]
                                    ,[TC025]
                                    ,[TC026]
                                    ,[TC027]
                                    ,[TC028]
                                    ,[TC029]
                                    ,[TC030]
                                    ,[TC031]
                                    ,[TC032]
                                    ,[TC033]
                                    ,[TC034]
                                    ,[TC035]
                                    ,[TC036]
                                    ,[TC037]
                                    ,[TC038]
                                    ,[TC039]
                                    ,[TC040]
                                    ,[TC041]
                                    ,[TC042]
                                    ,[TC043]
                                    ,[TC044]
                                    ,[TC045]
                                    ,[TC046]
                                    ,[TC047]
                                    ,[TC048]
                                    ,[TC049]
                                    ,[TC050]
                                    ,[TC051]
                                    ,[TC052]
                                    ,[TC053]
                                    ,[TC054]
                                    ,[TC055]
                                    ,[TC056]
                                    ,[TC057]
                                    ,[TC058]
                                    ,[TC059]
                                    ,[TC060]
                                    ,[TC061]
                                    ,[TC062]
                                    ,[TC063]
                                    ,[TC064]
                                    ,[TC065]
                                    ,[TC066]
                                    ,[TC067]
                                    ,[TC068]
                                    ,[TC069]
                                    ,[TC070]
                                    ,[TC071]
                                    ,[TC072]
                                    ,[TC073]
                                    ,[TC074]
                                    ,[TC075]
                                    ,[TC076]
                                    ,[TC077]
                                    ,[TC078]
                                    ,[TC079]
                                    ,[TC080]
                                    ,[TC081]
                                    ,[TC082]
                                    ,[TC083]
                                    ,[TC084]
                                    ,[TC085]
                                    ,[TC086]
                                    ,[TC087]
                                    ,[TC088]
                                    ,[TC089]
                                    ,[TC090]
                                    ,[TC091]
                                    ,[TC092]
                                    ,[TC093]
                                    ,[TC094]
                                    ,[TC095]
                                    ,[TC096]
                                    ,[TC097]
                                    ,[TC098]
                                    ,[TC099]
                                    ,[TC100]
                                    ,[TC101]
                                    ,[TC102]
                                    ,[TC103]
                                    ,[TC104]
                                    ,[TC105]
                                    ,[TC106]
                                    ,[TC107]
                                    ,[MB001]
                                    ,[MB002]
                                    ,[MB003]
                                   
                                    ,[TB_EB_USER].USER_GUID,NAME
                                    ,(SELECT TOP 1 MV002 FROM [TK].dbo.CMSMV WHERE MV001=ASTTC.CREATOR) AS 'MV002'

                                    FROM [TK].dbo.ASTTC
                                    LEFT JOIN [192.168.1.223].[UOF].[dbo].[TB_EB_USER] ON [TB_EB_USER].ACCOUNT= ASTTC.CREATOR COLLATE Chinese_Taiwan_Stroke_BIN
                                    ,[TK].dbo.ASTMB

                                    WHERE 1=1
                                    AND TC004=MB001
                                    AND TC001='{0}' AND TC002='{1}'

                                    ) AS TEMP
                              
                                    ", TC001, TC002);


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    return ds1.Tables["ds1"];

                }
                else
                {
                    return null;
                }

            }
            catch
            {
                return null;
            }
            finally
            {
                sqlConn.Close();
            }
        }

        public void ADDUOFASTMBASTMCASTTCASTTD_ACTI07()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp22"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                DataSet ds1 = new DataSet();
                SqlDataAdapter adapter1 = new SqlDataAdapter();
                SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();

                sbSql.Clear();
                sbSqlQuery.Clear();

                //TL006='N' AND (UDF01 IN ('Y','y') ) 
                sbSql.AppendFormat(@" 
                                    SELECT TC001,TC002
                                    FROM [TK].dbo.ASTTC
                                    WHERE  UDF01 IN ('Y','y')
                                    AND TC001 IN ('AC21')
                                    ORDER BY TC001,TC002


                                    ");

                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");


                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    foreach (DataRow dr in ds1.Tables["ds1"].Rows)
                    {
                        ADD_ASTTC_TB_WKF_EXTERNAL_TASK_ACTI07(dr["TC001"].ToString().Trim(), dr["TC002"].ToString().Trim());
                    }

                }
                else
                {

                }

            }
            catch
            {

            }
            finally
            {
                sqlConn.Close();
            }

            UPDATE_ASTTC_UDF01_ACTI07();
        }

        public void UPDATE_ASTTC_UDF01_ACTI07()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dbconn"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sqlConn.Close();
                sqlConn.Open();
                tran = sqlConn.BeginTransaction();

                sbSql.Clear();

                sbSql.AppendFormat(@"  
                                    UPDATE  [TK].dbo.ASTTC
                                    SET UDF01 = 'UOF'

                                    WHERE UDF01 IN ('Y','y')         
                                    AND TC001 IN ('AC21')                    

                                    ");

                cmd.Connection = sqlConn;
                cmd.CommandTimeout = 60;
                cmd.CommandText = sbSql.ToString();
                cmd.Transaction = tran;
                result = cmd.ExecuteNonQuery();

                if (result == 0)
                {
                    tran.Rollback();    //交易取消
                }
                else
                {
                    tran.Commit();      //執行交易  
                }

            }
            catch
            {

            }

            finally
            {
                sqlConn.Close();
            }
        }
        public void ADD_ASTTC_TB_WKF_EXTERNAL_TASK_ACTI07(string TC001, string TC002)
        {

            DataTable DT = SEARCH_ASTTC_ACTI07(TC001, TC002);
            DataTable DTUPFDEP = SEARCHUOFDEP(DT.Rows[0]["CREATOR"].ToString());

            string account = DT.Rows[0]["CREATOR"].ToString();
            string groupId = DT.Rows[0]["GROUP_ID"].ToString();
            string jobTitleId = DT.Rows[0]["TITLE_ID"].ToString();
            string fillerName = DT.Rows[0]["MV002"].ToString();
            string fillerUserGuid = DT.Rows[0]["USER_GUID"].ToString();

            string DEPNAME = DTUPFDEP.Rows[0]["DEPNAME"].ToString();
            string DEPNO = DTUPFDEP.Rows[0]["DEPNO"].ToString();

            string EXTERNAL_FORM_NBR = DT.Rows[0]["TC001"].ToString().Trim() + DT.Rows[0]["TC002"].ToString().Trim();

            int rowscounts = 0;

            XmlDocument xmlDoc = new XmlDocument();
            //建立根節點
            XmlElement Form = xmlDoc.CreateElement("Form");

            //正式的id
            string FORMID = SEARCHFORM_UOF_VERSION_ID("ASTI07.資產重估建立作業");

            if (!string.IsNullOrEmpty(FORMID))
            {
                Form.SetAttribute("formVersionId", FORMID);
            }


            Form.SetAttribute("urgentLevel", "2");
            //加入節點底下
            xmlDoc.AppendChild(Form);

            ////建立節點Applicant
            XmlElement Applicant = xmlDoc.CreateElement("Applicant");
            Applicant.SetAttribute("account", account);
            Applicant.SetAttribute("groupId", groupId);
            Applicant.SetAttribute("jobTitleId", jobTitleId);
            //加入節點底下
            Form.AppendChild(Applicant);

            //建立節點 Comment
            XmlElement Comment = xmlDoc.CreateElement("Comment");
            Comment.InnerText = "申請者意見";
            //加入至節點底下
            Applicant.AppendChild(Comment);

            //建立節點 FormFieldValue
            XmlElement FormFieldValue = xmlDoc.CreateElement("FormFieldValue");
            //加入至節點底下
            Form.AppendChild(FormFieldValue);

            //建立節點FieldItem
            //ID 表單編號	
            XmlElement FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "ID");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC001	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC001");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC001"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC002	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC002");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC002"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //MB001	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "MB001");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["MB001"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //MB002	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "MB002");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["MB002"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //MB003	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "MB003");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["MB003"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);



            //DataGrid
            //建立節點FieldItem
            //DETAILS
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "DETAILS");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點 DataGrid
            XmlElement DataGrid = xmlDoc.CreateElement("DataGrid");
            //DataGrid 加入至 TB 節點底下
            XmlNode DETAILS = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='DETAILS']");
            DETAILS.AppendChild(DataGrid);


            foreach (DataRow od in DT.Rows)
            {
                // 新增 Row
                XmlElement Row = xmlDoc.CreateElement("Row");
                Row.SetAttribute("order", (rowscounts).ToString());


                //Row	TC003
                XmlElement Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TC003");
                Cell.SetAttribute("fieldValue", od["TC003"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TC004
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TC004");
                Cell.SetAttribute("fieldValue", od["TC004"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TC036
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TC036");
                Cell.SetAttribute("fieldValue", od["TC036"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TC010
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TC010");
                Cell.SetAttribute("fieldValue", od["TC010"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TC033
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TC033");
                Cell.SetAttribute("fieldValue", od["TC033"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);
               




                rowscounts = rowscounts + 1;

                //DataGrid PURTM
                XmlNode DataGridS = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='DETAILS']/DataGrid");
                DataGridS.AppendChild(Row);

            }


            ////用ADDTACK，直接啟動起單
            //ADDTACK(Form);

            //ADD TO DB
            ////string connectionString = ConfigurationManager.ConnectionStrings["dbUOF"].ToString();

            //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
            //sqlConn = new SqlConnection(connectionString);

            //20210902密
            Class1 TKID = new Class1();//用new 建立類別實體
            SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

            //資料庫使用者密碼解密
            sqlsb.Password = TKID.Decryption(sqlsb.Password);
            sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

            String connectionString;
            sqlConn = new SqlConnection(sqlsb.ConnectionString);
            connectionString = sqlConn.ConnectionString.ToString();

            StringBuilder queryString = new StringBuilder();




            queryString.AppendFormat(@" INSERT INTO [{0}].dbo.TB_WKF_EXTERNAL_TASK
                                         (EXTERNAL_TASK_ID,FORM_INFO,STATUS,EXTERNAL_FORM_NBR)
                                        VALUES (NEWID(),@XML,2,'{1}')
                                        ", DBNAME, EXTERNAL_FORM_NBR);

            try
            {
                using (SqlConnection connection = new SqlConnection(connectionString))
                {

                    SqlCommand command = new SqlCommand(queryString.ToString(), connection);
                    command.Parameters.Add("@XML", SqlDbType.NVarChar).Value = Form.OuterXml;

                    command.Connection.Open();

                    int count = command.ExecuteNonQuery();

                    connection.Close();
                    connection.Dispose();

                }
            }
            catch
            {

            }
            finally
            {

            }
        }


        public DataTable SEARCH_ASTTC_ACTI07(string TC001, string TC002)
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);


                sbSql.Clear();
                sbSqlQuery.Clear();

                //庫存數量看LA009 IN ('20004','20006','20008','20019','20020'

                sbSql.AppendFormat(@"  
                                    SELECT *
                                    ,USER_GUID,NAME
                                    ,(SELECT TOP 1 GROUP_ID FROM [192.168.1.223].[UOF].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'GROUP_ID'
                                    ,(SELECT TOP 1 TITLE_ID FROM [192.168.1.223].[UOF].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'TITLE_ID'
                                    FROM 
                                    (
                                    SELECT   
                                    ASTTC.[COMPANY]
                                    ,ASTTC.[CREATOR]
                                    ,ASTTC.[USR_GROUP]
                                    ,ASTTC.[CREATE_DATE]
                                    ,ASTTC.[MODIFIER]
                                    ,ASTTC.[MODI_DATE]
                                    ,ASTTC.[FLAG]
                                    ,ASTTC.[CREATE_TIME]
                                    ,ASTTC.[MODI_TIME]
                                    ,ASTTC.[TRANS_TYPE]
                                    ,ASTTC.[TRANS_NAME]
                                    ,ASTTC.[sync_date]
                                    ,ASTTC.[sync_time]
                                    ,ASTTC.[sync_mark]
                                    ,ASTTC.[sync_count]
                                    ,ASTTC.[DataUser]
                                    ,ASTTC.[DataGroup]                                 
                                    ,[TC001]
                                    ,[TC002]
                                    ,[TC003]
                                    ,[TC004]
                                    ,[TC005]
                                    ,[TC006]
                                    ,[TC007]
                                    ,[TC008]
                                    ,[TC009]
                                    ,[TC010]
                                    ,[TC011]
                                    ,[TC012]
                                    ,[TC013]
                                    ,[TC014]
                                    ,[TC015]
                                    ,[TC016]
                                    ,[TC017]
                                    ,[TC018]
                                    ,[TC019]
                                    ,[TC020]
                                    ,[TC021]
                                    ,[TC022]
                                    ,[TC023]
                                    ,[TC024]
                                    ,[TC025]
                                    ,[TC026]
                                    ,[TC027]
                                    ,[TC028]
                                    ,[TC029]
                                    ,[TC030]
                                    ,[TC031]
                                    ,[TC032]
                                    ,[TC033]
                                    ,[TC034]
                                    ,[TC035]
                                    ,[TC036]
                                    ,[TC037]
                                    ,[TC038]
                                    ,[TC039]
                                    ,[TC040]
                                    ,[TC041]
                                    ,[TC042]
                                    ,[TC043]
                                    ,[TC044]
                                    ,[TC045]
                                    ,[TC046]
                                    ,[TC047]
                                    ,[TC048]
                                    ,[TC049]
                                    ,[TC050]
                                    ,[TC051]
                                    ,[TC052]
                                    ,[TC053]
                                    ,[TC054]
                                    ,[TC055]
                                    ,[TC056]
                                    ,[TC057]
                                    ,[TC058]
                                    ,[TC059]
                                    ,[TC060]
                                    ,[TC061]
                                    ,[TC062]
                                    ,[TC063]
                                    ,[TC064]
                                    ,[TC065]
                                    ,[TC066]
                                    ,[TC067]
                                    ,[TC068]
                                    ,[TC069]
                                    ,[TC070]
                                    ,[TC071]
                                    ,[TC072]
                                    ,[TC073]
                                    ,[TC074]
                                    ,[TC075]
                                    ,[TC076]
                                    ,[TC077]
                                    ,[TC078]
                                    ,[TC079]
                                    ,[TC080]
                                    ,[TC081]
                                    ,[TC082]
                                    ,[TC083]
                                    ,[TC084]
                                    ,[TC085]
                                    ,[TC086]
                                    ,[TC087]
                                    ,[TC088]
                                    ,[TC089]
                                    ,[TC090]
                                    ,[TC091]
                                    ,[TC092]
                                    ,[TC093]
                                    ,[TC094]
                                    ,[TC095]
                                    ,[TC096]
                                    ,[TC097]
                                    ,[TC098]
                                    ,[TC099]
                                    ,[TC100]
                                    ,[TC101]
                                    ,[TC102]
                                    ,[TC103]
                                    ,[TC104]
                                    ,[TC105]
                                    ,[TC106]
                                    ,[TC107]
                                    ,[MB001]
                                    ,[MB002]
                                    ,[MB003]
                                   
                                    ,[TB_EB_USER].USER_GUID,NAME
                                    ,(SELECT TOP 1 MV002 FROM [TK].dbo.CMSMV WHERE MV001=ASTTC.CREATOR) AS 'MV002'

                                    FROM [TK].dbo.ASTTC
                                    LEFT JOIN [192.168.1.223].[UOF].[dbo].[TB_EB_USER] ON [TB_EB_USER].ACCOUNT= ASTTC.CREATOR COLLATE Chinese_Taiwan_Stroke_BIN
                                    ,[TK].dbo.ASTMB

                                    WHERE 1=1
                                    AND TC004=MB001
                                    AND TC001='{0}' AND TC002='{1}'

                                    ) AS TEMP
                              
                                    ", TC001, TC002);


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    return ds1.Tables["ds1"];

                }
                else
                {
                    return null;
                }

            }
            catch
            {
                return null;
            }
            finally
            {
                sqlConn.Close();
            }
        }

        public void ADDUOFASTMBASTMCASTTCASTTD_ACTI08()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp22"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                DataSet ds1 = new DataSet();
                SqlDataAdapter adapter1 = new SqlDataAdapter();
                SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();

                sbSql.Clear();
                sbSqlQuery.Clear();

                //TL006='N' AND (UDF01 IN ('Y','y') ) 
                sbSql.AppendFormat(@" 
                                    SELECT TC001,TC002
                                    FROM [TK].dbo.ASTTC
                                    WHERE  UDF01 IN ('Y','y')
                                    AND TC001 IN ('AC31','AC32','AC33','AC34')
                                    ORDER BY TC001,TC002


                                    ");

                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");


                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    foreach (DataRow dr in ds1.Tables["ds1"].Rows)
                    {
                        ADD_ASTTC_TB_WKF_EXTERNAL_TASK_ACTI08(dr["TC001"].ToString().Trim(), dr["TC002"].ToString().Trim());
                    }

                }
                else
                {

                }

            }
            catch
            {

            }
            finally
            {
                sqlConn.Close();
            }

            UPDATE_ASTTC_UDF01_ACTI08();
        }

        public void UPDATE_ASTTC_UDF01_ACTI08()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dbconn"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sqlConn.Close();
                sqlConn.Open();
                tran = sqlConn.BeginTransaction();

                sbSql.Clear();

                sbSql.AppendFormat(@"  
                                    UPDATE  [TK].dbo.ASTTC
                                    SET UDF01 = 'UOF'

                                    WHERE UDF01 IN ('Y','y')         
                                    AND TC001 IN ('AC31','AC32','AC33','AC34')   

                                    ");

                cmd.Connection = sqlConn;
                cmd.CommandTimeout = 60;
                cmd.CommandText = sbSql.ToString();
                cmd.Transaction = tran;
                result = cmd.ExecuteNonQuery();

                if (result == 0)
                {
                    tran.Rollback();    //交易取消
                }
                else
                {
                    tran.Commit();      //執行交易  
                }

            }
            catch
            {

            }

            finally
            {
                sqlConn.Close();
            }
        }
        public void ADD_ASTTC_TB_WKF_EXTERNAL_TASK_ACTI08(string TC001, string TC002)
        {

            DataTable DT = SEARCH_ASTTC_ACTI08(TC001, TC002);
            DataTable DTUPFDEP = SEARCHUOFDEP(DT.Rows[0]["CREATOR"].ToString());

            string account = DT.Rows[0]["CREATOR"].ToString();
            string groupId = DT.Rows[0]["GROUP_ID"].ToString();
            string jobTitleId = DT.Rows[0]["TITLE_ID"].ToString();
            string fillerName = DT.Rows[0]["MV002"].ToString();
            string fillerUserGuid = DT.Rows[0]["USER_GUID"].ToString();

            string DEPNAME = DTUPFDEP.Rows[0]["DEPNAME"].ToString();
            string DEPNO = DTUPFDEP.Rows[0]["DEPNO"].ToString();

            string EXTERNAL_FORM_NBR = DT.Rows[0]["TC001"].ToString().Trim() + DT.Rows[0]["TC002"].ToString().Trim();

            int rowscounts = 0;

            XmlDocument xmlDoc = new XmlDocument();
            //建立根節點
            XmlElement Form = xmlDoc.CreateElement("Form");

            //正式的id
            string FORMID = SEARCHFORM_UOF_VERSION_ID("ASTI08.資產報廢建立作業");

            if (!string.IsNullOrEmpty(FORMID))
            {
                Form.SetAttribute("formVersionId", FORMID);
            }


            Form.SetAttribute("urgentLevel", "2");
            //加入節點底下
            xmlDoc.AppendChild(Form);

            ////建立節點Applicant
            XmlElement Applicant = xmlDoc.CreateElement("Applicant");
            Applicant.SetAttribute("account", account);
            Applicant.SetAttribute("groupId", groupId);
            Applicant.SetAttribute("jobTitleId", jobTitleId);
            //加入節點底下
            Form.AppendChild(Applicant);

            //建立節點 Comment
            XmlElement Comment = xmlDoc.CreateElement("Comment");
            Comment.InnerText = "申請者意見";
            //加入至節點底下
            Applicant.AppendChild(Comment);

            //建立節點 FormFieldValue
            XmlElement FormFieldValue = xmlDoc.CreateElement("FormFieldValue");
            //加入至節點底下
            Form.AppendChild(FormFieldValue);

            //建立節點FieldItem
            //ID 表單編號	
            XmlElement FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "ID");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC001	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC001");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC001"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC002	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC002");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC002"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //MB001	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "MB001");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["MB001"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //MB002	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "MB002");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["MB002"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //MB003	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "MB003");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["MB003"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC003	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC003");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC003"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC005	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC005");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC005"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC006	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC006");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC006"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC007	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC007");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC007"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC008	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC008");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC008"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC009	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC009");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC009"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC010	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC010");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC010"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC013	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC013");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC013"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //建立節點FieldItem
            


            //DataGrid
            //建立節點FieldItem
            //DETAILS
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "DETAILS");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點 DataGrid
            XmlElement DataGrid = xmlDoc.CreateElement("DataGrid");
            //DataGrid 加入至 TB 節點底下
            XmlNode DETAILS = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='DETAILS']");
            DETAILS.AppendChild(DataGrid);


            foreach (DataRow od in DT.Rows)
            {
                // 新增 Row
                XmlElement Row = xmlDoc.CreateElement("Row");
                Row.SetAttribute("order", (rowscounts).ToString());


                //Row	TD003
                XmlElement Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD003");
                Cell.SetAttribute("fieldValue", od["TD003"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD004
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD004");
                Cell.SetAttribute("fieldValue", od["TD004"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD005
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD005");
                Cell.SetAttribute("fieldValue", od["TD005"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);           

                //Row	TD008
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD008");
                Cell.SetAttribute("fieldValue", od["TD008"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);



                rowscounts = rowscounts + 1;

                //DataGrid PURTM
                XmlNode DataGridS = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='DETAILS']/DataGrid");
                DataGridS.AppendChild(Row);

            }


            ////用ADDTACK，直接啟動起單
            //ADDTACK(Form);

            //ADD TO DB
            ////string connectionString = ConfigurationManager.ConnectionStrings["dbUOF"].ToString();

            //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
            //sqlConn = new SqlConnection(connectionString);

            //20210902密
            Class1 TKID = new Class1();//用new 建立類別實體
            SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

            //資料庫使用者密碼解密
            sqlsb.Password = TKID.Decryption(sqlsb.Password);
            sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

            String connectionString;
            sqlConn = new SqlConnection(sqlsb.ConnectionString);
            connectionString = sqlConn.ConnectionString.ToString();

            StringBuilder queryString = new StringBuilder();




            queryString.AppendFormat(@" INSERT INTO [{0}].dbo.TB_WKF_EXTERNAL_TASK
                                         (EXTERNAL_TASK_ID,FORM_INFO,STATUS,EXTERNAL_FORM_NBR)
                                        VALUES (NEWID(),@XML,2,'{1}')
                                        ", DBNAME, EXTERNAL_FORM_NBR);

            try
            {
                using (SqlConnection connection = new SqlConnection(connectionString))
                {

                    SqlCommand command = new SqlCommand(queryString.ToString(), connection);
                    command.Parameters.Add("@XML", SqlDbType.NVarChar).Value = Form.OuterXml;

                    command.Connection.Open();

                    int count = command.ExecuteNonQuery();

                    connection.Close();
                    connection.Dispose();

                }
            }
            catch
            {

            }
            finally
            {

            }
        }


        public DataTable SEARCH_ASTTC_ACTI08(string TC001, string TC002)
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);


                sbSql.Clear();
                sbSqlQuery.Clear();

                //庫存數量看LA009 IN ('20004','20006','20008','20019','20020'

                sbSql.AppendFormat(@"  
                                    SELECT *
                                    ,USER_GUID,NAME
                                    ,(SELECT TOP 1 GROUP_ID FROM [192.168.1.223].[UOF].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'GROUP_ID'
                                    ,(SELECT TOP 1 TITLE_ID FROM [192.168.1.223].[UOF].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'TITLE_ID'
                                    FROM 
                                    (
                                    SELECT   
                                    ASTTC.[COMPANY]
                                    ,ASTTC.[CREATOR]
                                    ,ASTTC.[USR_GROUP]
                                    ,ASTTC.[CREATE_DATE]
                                    ,ASTTC.[MODIFIER]
                                    ,ASTTC.[MODI_DATE]
                                    ,ASTTC.[FLAG]
                                    ,ASTTC.[CREATE_TIME]
                                    ,ASTTC.[MODI_TIME]
                                    ,ASTTC.[TRANS_TYPE]
                                    ,ASTTC.[TRANS_NAME]
                                    ,ASTTC.[sync_date]
                                    ,ASTTC.[sync_time]
                                    ,ASTTC.[sync_mark]
                                    ,ASTTC.[sync_count]
                                    ,ASTTC.[DataUser]
                                    ,ASTTC.[DataGroup]                                 
                                    ,[TC001]
                                    ,[TC002]
                                    ,[TC003]
                                    ,[TC004]
                                    ,[TC005]
                                    ,[TC006]
                                    ,[TC007]
                                    ,[TC008]
                                    ,[TC009]
                                    ,[TC010]
                                    ,[TC011]
                                    ,[TC012]
                                    ,[TC013]
                                    ,[TC014]
                                    ,[TC015]
                                    ,[TC016]
                                    ,[TC017]
                                    ,[TC018]
                                    ,[TC019]
                                    ,[TC020]
                                    ,[TC021]
                                    ,[TC022]
                                    ,[TC023]
                                    ,[TC024]
                                    ,[TC025]
                                    ,[TC026]
                                    ,[TC027]
                                    ,[TC028]
                                    ,[TC029]
                                    ,[TC030]
                                    ,[TC031]
                                    ,[TC032]
                                    ,[TC033]
                                    ,[TC034]
                                    ,[TC035]
                                    ,[TC036]
                                    ,[TC037]
                                    ,[TC038]
                                    ,[TC039]
                                    ,[TC040]
                                    ,[TC041]
                                    ,[TC042]
                                    ,[TC043]
                                    ,[TC044]
                                    ,[TC045]
                                    ,[TC046]
                                    ,[TC047]
                                    ,[TC048]
                                    ,[TC049]
                                    ,[TC050]
                                    ,[TC051]
                                    ,[TC052]
                                    ,[TC053]
                                    ,[TC054]
                                    ,[TC055]
                                    ,[TC056]
                                    ,[TC057]
                                    ,[TC058]
                                    ,[TC059]
                                    ,[TC060]
                                    ,[TC061]
                                    ,[TC062]
                                    ,[TC063]
                                    ,[TC064]
                                    ,[TC065]
                                    ,[TC066]
                                    ,[TC067]
                                    ,[TC068]
                                    ,[TC069]
                                    ,[TC070]
                                    ,[TC071]
                                    ,[TC072]
                                    ,[TC073]
                                    ,[TC074]
                                    ,[TC075]
                                    ,[TC076]
                                    ,[TC077]
                                    ,[TC078]
                                    ,[TC079]
                                    ,[TC080]
                                    ,[TC081]
                                    ,[TC082]
                                    ,[TC083]
                                    ,[TC084]
                                    ,[TC085]
                                    ,[TC086]
                                    ,[TC087]
                                    ,[TC088]
                                    ,[TC089]
                                    ,[TC090]
                                    ,[TC091]
                                    ,[TC092]
                                    ,[TC093]
                                    ,[TC094]
                                    ,[TC095]
                                    ,[TC096]
                                    ,[TC097]
                                    ,[TC098]
                                    ,[TC099]
                                    ,[TC100]
                                    ,[TC101]
                                    ,[TC102]
                                    ,[TC103]
                                    ,[TC104]
                                    ,[TC105]
                                    ,[TC106]
                                    ,[TC107]
                                    ,[MB001]
                                    ,[MB002]
                                    ,[MB003]
                                    ,[TD001]
                                    ,[TD002]
                                    ,[TD003]
                                    ,[TD004]
                                    ,[TD005]
                                    ,[TD006]
                                    ,[TD007]
                                    ,[TD008]
           
                                    ,[TB_EB_USER].USER_GUID,NAME
                                    ,(SELECT TOP 1 MV002 FROM [TK].dbo.CMSMV WHERE MV001=ASTTC.CREATOR) AS 'MV002'

                                    FROM [TK].dbo.ASTTC
                                    LEFT JOIN [192.168.1.223].[UOF].[dbo].[TB_EB_USER] ON [TB_EB_USER].ACCOUNT= ASTTC.CREATOR COLLATE Chinese_Taiwan_Stroke_BIN
                                    LEFT JOIN [TK].dbo.ASTTD ON TC001=TD001 AND TC002=TD002

                                    ,[TK].dbo.ASTMB

                                    WHERE 1=1
                                    AND TC004=MB001
                                    AND TC001='{0}' AND TC002='{1}'

                                    ) AS TEMP
                              
                                    ", TC001, TC002);


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    return ds1.Tables["ds1"];

                }
                else
                {
                    return null;
                }

            }
            catch
            {
                return null;
            }
            finally
            {
                sqlConn.Close();
            }
        }

        public void ADDUOFASTMBASTMCASTTCASTTD_ACTI09()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp22"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                DataSet ds1 = new DataSet();
                SqlDataAdapter adapter1 = new SqlDataAdapter();
                SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();

                sbSql.Clear();
                sbSqlQuery.Clear();

                //TL006='N' AND (UDF01 IN ('Y','y') ) 
                sbSql.AppendFormat(@" 
                                    SELECT TC001,TC002
                                    FROM [TK].dbo.ASTTC
                                    WHERE  UDF01 IN ('Y','y')
                                    AND TC001 IN ('AC41')
                                    ORDER BY TC001,TC002


                                    ");

                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");


                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    foreach (DataRow dr in ds1.Tables["ds1"].Rows)
                    {
                        ADD_ASTTC_TB_WKF_EXTERNAL_TASK_ACTI09(dr["TC001"].ToString().Trim(), dr["TC002"].ToString().Trim());
                    }

                }
                else
                {

                }

            }
            catch
            {

            }
            finally
            {
                sqlConn.Close();
            }

            UPDATE_ASTTC_UDF01_ACTI09();
        }

        public void UPDATE_ASTTC_UDF01_ACTI09()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dbconn"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sqlConn.Close();
                sqlConn.Open();
                tran = sqlConn.BeginTransaction();

                sbSql.Clear();

                sbSql.AppendFormat(@"  
                                    UPDATE  [TK].dbo.ASTTC
                                    SET UDF01 = 'UOF'

                                    WHERE UDF01 IN ('Y','y')         
                                    AND TC001 IN ('AC41')   

                                    ");

                cmd.Connection = sqlConn;
                cmd.CommandTimeout = 60;
                cmd.CommandText = sbSql.ToString();
                cmd.Transaction = tran;
                result = cmd.ExecuteNonQuery();

                if (result == 0)
                {
                    tran.Rollback();    //交易取消
                }
                else
                {
                    tran.Commit();      //執行交易  
                }

            }
            catch
            {

            }

            finally
            {
                sqlConn.Close();
            }
        }
        public void ADD_ASTTC_TB_WKF_EXTERNAL_TASK_ACTI09(string TC001, string TC002)
        {

            DataTable DT = SEARCH_ASTTC_ACTI09(TC001, TC002);
            DataTable DTUPFDEP = SEARCHUOFDEP(DT.Rows[0]["CREATOR"].ToString());

            string account = DT.Rows[0]["CREATOR"].ToString();
            string groupId = DT.Rows[0]["GROUP_ID"].ToString();
            string jobTitleId = DT.Rows[0]["TITLE_ID"].ToString();
            string fillerName = DT.Rows[0]["MV002"].ToString();
            string fillerUserGuid = DT.Rows[0]["USER_GUID"].ToString();

            string DEPNAME = DTUPFDEP.Rows[0]["DEPNAME"].ToString();
            string DEPNO = DTUPFDEP.Rows[0]["DEPNO"].ToString();

            string EXTERNAL_FORM_NBR = DT.Rows[0]["TC001"].ToString().Trim() + DT.Rows[0]["TC002"].ToString().Trim();

            int rowscounts = 0;

            XmlDocument xmlDoc = new XmlDocument();
            //建立根節點
            XmlElement Form = xmlDoc.CreateElement("Form");

            //正式的id
            string FORMID = SEARCHFORM_UOF_VERSION_ID("ASTI09.資產出售建立作業");

            if (!string.IsNullOrEmpty(FORMID))
            {
                Form.SetAttribute("formVersionId", FORMID);
            }


            Form.SetAttribute("urgentLevel", "2");
            //加入節點底下
            xmlDoc.AppendChild(Form);

            ////建立節點Applicant
            XmlElement Applicant = xmlDoc.CreateElement("Applicant");
            Applicant.SetAttribute("account", account);
            Applicant.SetAttribute("groupId", groupId);
            Applicant.SetAttribute("jobTitleId", jobTitleId);
            //加入節點底下
            Form.AppendChild(Applicant);

            //建立節點 Comment
            XmlElement Comment = xmlDoc.CreateElement("Comment");
            Comment.InnerText = "申請者意見";
            //加入至節點底下
            Applicant.AppendChild(Comment);

            //建立節點 FormFieldValue
            XmlElement FormFieldValue = xmlDoc.CreateElement("FormFieldValue");
            //加入至節點底下
            Form.AppendChild(FormFieldValue);

            //建立節點FieldItem
            //ID 表單編號	
            XmlElement FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "ID");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC001	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC001");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC001"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC002	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC002");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC002"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //MB001	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "MB001");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["MB001"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //MB002	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "MB002");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["MB002"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //MB003	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "MB003");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["MB003"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC003	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC003");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC003"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC005	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC005");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC005"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC006	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC006");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC006"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC007	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC007");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC007"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC008	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC008");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC008"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC009	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC009");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC009"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC010	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC010");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC010"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC013	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC013");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC013"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //建立節點FieldItem

            //建立節點FieldItem
            //TC018	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC018");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC018"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //建立節點FieldItem

            //建立節點FieldItem
            //TC019	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC019");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC019"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //建立節點FieldItem

            //建立節點FieldItem
            //TC020	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC020");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC020"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //建立節點FieldItem

            //建立節點FieldItem
            //TC021	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC021");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC021"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //建立節點FieldItem

            //建立節點FieldItem
            //TC022	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC022");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC022"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //建立節點FieldItem

            //建立節點FieldItem
            //TC033	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC033");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC033"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //建立節點FieldItem



            //DataGrid
            //建立節點FieldItem
            //DETAILS
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "DETAILS");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點 DataGrid
            XmlElement DataGrid = xmlDoc.CreateElement("DataGrid");
            //DataGrid 加入至 TB 節點底下
            XmlNode DETAILS = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='DETAILS']");
            DETAILS.AppendChild(DataGrid);


            foreach (DataRow od in DT.Rows)
            {
                // 新增 Row
                XmlElement Row = xmlDoc.CreateElement("Row");
                Row.SetAttribute("order", (rowscounts).ToString());


                //Row	TD003
                XmlElement Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD003");
                Cell.SetAttribute("fieldValue", od["TD003"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD004
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD004");
                Cell.SetAttribute("fieldValue", od["TD004"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD005
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD005");
                Cell.SetAttribute("fieldValue", od["TD005"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD008
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD008");
                Cell.SetAttribute("fieldValue", od["TD008"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);



                rowscounts = rowscounts + 1;

                //DataGrid PURTM
                XmlNode DataGridS = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='DETAILS']/DataGrid");
                DataGridS.AppendChild(Row);

            }


            ////用ADDTACK，直接啟動起單
            //ADDTACK(Form);

            //ADD TO DB
            ////string connectionString = ConfigurationManager.ConnectionStrings["dbUOF"].ToString();

            //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
            //sqlConn = new SqlConnection(connectionString);

            //20210902密
            Class1 TKID = new Class1();//用new 建立類別實體
            SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

            //資料庫使用者密碼解密
            sqlsb.Password = TKID.Decryption(sqlsb.Password);
            sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

            String connectionString;
            sqlConn = new SqlConnection(sqlsb.ConnectionString);
            connectionString = sqlConn.ConnectionString.ToString();

            StringBuilder queryString = new StringBuilder();




            queryString.AppendFormat(@" INSERT INTO [{0}].dbo.TB_WKF_EXTERNAL_TASK
                                         (EXTERNAL_TASK_ID,FORM_INFO,STATUS,EXTERNAL_FORM_NBR)
                                        VALUES (NEWID(),@XML,2,'{1}')
                                        ", DBNAME, EXTERNAL_FORM_NBR);

            try
            {
                using (SqlConnection connection = new SqlConnection(connectionString))
                {

                    SqlCommand command = new SqlCommand(queryString.ToString(), connection);
                    command.Parameters.Add("@XML", SqlDbType.NVarChar).Value = Form.OuterXml;

                    command.Connection.Open();

                    int count = command.ExecuteNonQuery();

                    connection.Close();
                    connection.Dispose();

                }
            }
            catch
            {

            }
            finally
            {

            }
        }


        public DataTable SEARCH_ASTTC_ACTI09(string TC001, string TC002)
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);


                sbSql.Clear();
                sbSqlQuery.Clear();

                //庫存數量看LA009 IN ('20004','20006','20008','20019','20020'

                sbSql.AppendFormat(@"  
                                    SELECT *
                                    ,USER_GUID,NAME
                                    ,(SELECT TOP 1 GROUP_ID FROM [192.168.1.223].[UOF].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'GROUP_ID'
                                    ,(SELECT TOP 1 TITLE_ID FROM [192.168.1.223].[UOF].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'TITLE_ID'
                                    FROM 
                                    (
                                    SELECT   
                                    ASTTC.[COMPANY]
                                    ,ASTTC.[CREATOR]
                                    ,ASTTC.[USR_GROUP]
                                    ,ASTTC.[CREATE_DATE]
                                    ,ASTTC.[MODIFIER]
                                    ,ASTTC.[MODI_DATE]
                                    ,ASTTC.[FLAG]
                                    ,ASTTC.[CREATE_TIME]
                                    ,ASTTC.[MODI_TIME]
                                    ,ASTTC.[TRANS_TYPE]
                                    ,ASTTC.[TRANS_NAME]
                                    ,ASTTC.[sync_date]
                                    ,ASTTC.[sync_time]
                                    ,ASTTC.[sync_mark]
                                    ,ASTTC.[sync_count]
                                    ,ASTTC.[DataUser]
                                    ,ASTTC.[DataGroup]                                 
                                    ,[TC001]
                                    ,[TC002]
                                    ,[TC003]
                                    ,[TC004]
                                    ,[TC005]
                                    ,[TC006]
                                    ,[TC007]
                                    ,[TC008]
                                    ,[TC009]
                                    ,[TC010]
                                    ,[TC011]
                                    ,[TC012]
                                    ,[TC013]
                                    ,[TC014]
                                    ,[TC015]
                                    ,[TC016]
                                    ,[TC017]
                                    ,[TC018]
                                    ,[TC019]
                                    ,[TC020]
                                    ,[TC021]
                                    ,[TC022]
                                    ,[TC023]
                                    ,[TC024]
                                    ,[TC025]
                                    ,[TC026]
                                    ,[TC027]
                                    ,[TC028]
                                    ,[TC029]
                                    ,[TC030]
                                    ,[TC031]
                                    ,[TC032]
                                    ,[TC033]
                                    ,[TC034]
                                    ,[TC035]
                                    ,[TC036]
                                    ,[TC037]
                                    ,[TC038]
                                    ,[TC039]
                                    ,[TC040]
                                    ,[TC041]
                                    ,[TC042]
                                    ,[TC043]
                                    ,[TC044]
                                    ,[TC045]
                                    ,[TC046]
                                    ,[TC047]
                                    ,[TC048]
                                    ,[TC049]
                                    ,[TC050]
                                    ,[TC051]
                                    ,[TC052]
                                    ,[TC053]
                                    ,[TC054]
                                    ,[TC055]
                                    ,[TC056]
                                    ,[TC057]
                                    ,[TC058]
                                    ,[TC059]
                                    ,[TC060]
                                    ,[TC061]
                                    ,[TC062]
                                    ,[TC063]
                                    ,[TC064]
                                    ,[TC065]
                                    ,[TC066]
                                    ,[TC067]
                                    ,[TC068]
                                    ,[TC069]
                                    ,[TC070]
                                    ,[TC071]
                                    ,[TC072]
                                    ,[TC073]
                                    ,[TC074]
                                    ,[TC075]
                                    ,[TC076]
                                    ,[TC077]
                                    ,[TC078]
                                    ,[TC079]
                                    ,[TC080]
                                    ,[TC081]
                                    ,[TC082]
                                    ,[TC083]
                                    ,[TC084]
                                    ,[TC085]
                                    ,[TC086]
                                    ,[TC087]
                                    ,[TC088]
                                    ,[TC089]
                                    ,[TC090]
                                    ,[TC091]
                                    ,[TC092]
                                    ,[TC093]
                                    ,[TC094]
                                    ,[TC095]
                                    ,[TC096]
                                    ,[TC097]
                                    ,[TC098]
                                    ,[TC099]
                                    ,[TC100]
                                    ,[TC101]
                                    ,[TC102]
                                    ,[TC103]
                                    ,[TC104]
                                    ,[TC105]
                                    ,[TC106]
                                    ,[TC107]
                                    ,[MB001]
                                    ,[MB002]
                                    ,[MB003]
                                    ,[TD001]
                                    ,[TD002]
                                    ,[TD003]
                                    ,[TD004]
                                    ,[TD005]
                                    ,[TD006]
                                    ,[TD007]
                                    ,[TD008]
           
                                    ,[TB_EB_USER].USER_GUID,NAME
                                    ,(SELECT TOP 1 MV002 FROM [TK].dbo.CMSMV WHERE MV001=ASTTC.CREATOR) AS 'MV002'

                                    FROM [TK].dbo.ASTTC
                                    LEFT JOIN [192.168.1.223].[UOF].[dbo].[TB_EB_USER] ON [TB_EB_USER].ACCOUNT= ASTTC.CREATOR COLLATE Chinese_Taiwan_Stroke_BIN
                                    LEFT JOIN [TK].dbo.ASTTD ON TC001=TD001 AND TC002=TD002

                                    ,[TK].dbo.ASTMB

                                    WHERE 1=1
                                    AND TC004=MB001
                                    AND TC001='{0}' AND TC002='{1}'

                                    ) AS TEMP
                              
                                    ", TC001, TC002);


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    return ds1.Tables["ds1"];

                }
                else
                {
                    return null;
                }

            }
            catch
            {
                return null;
            }
            finally
            {
                sqlConn.Close();
            }
        }

        public void ADDUOFASTMBASTMCASTTCASTTD_ACTI10()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp22"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                DataSet ds1 = new DataSet();
                SqlDataAdapter adapter1 = new SqlDataAdapter();
                SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();

                sbSql.Clear();
                sbSqlQuery.Clear();

                //TL006='N' AND (UDF01 IN ('Y','y') ) 
                sbSql.AppendFormat(@" 
                                    SELECT TC001,TC002
                                    FROM [TK].dbo.ASTTC
                                    WHERE  UDF01 IN ('Y','y')
                                    AND TC001 IN ('AC51')
                                    ORDER BY TC001,TC002


                                    ");

                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");


                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    foreach (DataRow dr in ds1.Tables["ds1"].Rows)
                    {
                        ADD_ASTTC_TB_WKF_EXTERNAL_TASK_ACTI10(dr["TC001"].ToString().Trim(), dr["TC002"].ToString().Trim());
                    }

                }
                else
                {

                }

            }
            catch
            {

            }
            finally
            {
                sqlConn.Close();
            }

            UPDATE_ASTTC_UDF01_ACTI10();
        }

        public void UPDATE_ASTTC_UDF01_ACTI10()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dbconn"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sqlConn.Close();
                sqlConn.Open();
                tran = sqlConn.BeginTransaction();

                sbSql.Clear();

                sbSql.AppendFormat(@"  
                                    UPDATE  [TK].dbo.ASTTC
                                    SET UDF01 = 'UOF'

                                    WHERE UDF01 IN ('Y','y')         
                                    AND TC001 IN ('AC51')   

                                    ");

                cmd.Connection = sqlConn;
                cmd.CommandTimeout = 60;
                cmd.CommandText = sbSql.ToString();
                cmd.Transaction = tran;
                result = cmd.ExecuteNonQuery();

                if (result == 0)
                {
                    tran.Rollback();    //交易取消
                }
                else
                {
                    tran.Commit();      //執行交易  
                }

            }
            catch
            {

            }

            finally
            {
                sqlConn.Close();
            }
        }
        public void ADD_ASTTC_TB_WKF_EXTERNAL_TASK_ACTI10(string TC001, string TC002)
        {

            DataTable DT = SEARCH_ASTTC_ACTI10(TC001, TC002);
            DataTable DTUPFDEP = SEARCHUOFDEP(DT.Rows[0]["CREATOR"].ToString());

            string account = DT.Rows[0]["CREATOR"].ToString();
            string groupId = DT.Rows[0]["GROUP_ID"].ToString();
            string jobTitleId = DT.Rows[0]["TITLE_ID"].ToString();
            string fillerName = DT.Rows[0]["MV002"].ToString();
            string fillerUserGuid = DT.Rows[0]["USER_GUID"].ToString();

            string DEPNAME = DTUPFDEP.Rows[0]["DEPNAME"].ToString();
            string DEPNO = DTUPFDEP.Rows[0]["DEPNO"].ToString();

            string EXTERNAL_FORM_NBR = DT.Rows[0]["TC001"].ToString().Trim() + DT.Rows[0]["TC002"].ToString().Trim();

            int rowscounts = 0;

            XmlDocument xmlDoc = new XmlDocument();
            //建立根節點
            XmlElement Form = xmlDoc.CreateElement("Form");

            //正式的id
            string FORMID = SEARCHFORM_UOF_VERSION_ID("ASTI10.資產調整建立作業");

            if (!string.IsNullOrEmpty(FORMID))
            {
                Form.SetAttribute("formVersionId", FORMID);
            }


            Form.SetAttribute("urgentLevel", "2");
            //加入節點底下
            xmlDoc.AppendChild(Form);

            ////建立節點Applicant
            XmlElement Applicant = xmlDoc.CreateElement("Applicant");
            Applicant.SetAttribute("account", account);
            Applicant.SetAttribute("groupId", groupId);
            Applicant.SetAttribute("jobTitleId", jobTitleId);
            //加入節點底下
            Form.AppendChild(Applicant);

            //建立節點 Comment
            XmlElement Comment = xmlDoc.CreateElement("Comment");
            Comment.InnerText = "申請者意見";
            //加入至節點底下
            Applicant.AppendChild(Comment);

            //建立節點 FormFieldValue
            XmlElement FormFieldValue = xmlDoc.CreateElement("FormFieldValue");
            //加入至節點底下
            Form.AppendChild(FormFieldValue);

            //建立節點FieldItem
            //ID 表單編號	
            XmlElement FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "ID");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC001	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC001");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC001"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC002	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC002");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC002"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //MB001	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "MB001");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["MB001"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //MB002	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "MB002");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["MB002"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //MB003	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "MB003");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["MB003"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC003	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC003");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC003"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC005	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC005");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC005"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC006	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC006");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC006"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC007	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC007");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC007"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC008	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC008");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC008"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC009	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC009");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC009"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC010	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC010");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC010"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC013	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC013");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC013"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //建立節點FieldItem

            //建立節點FieldItem
            //TC018	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC018");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC018"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //建立節點FieldItem

            //建立節點FieldItem
            //TC019	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC019");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC019"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //建立節點FieldItem

            //建立節點FieldItem
            //TC020	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC020");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC020"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //建立節點FieldItem

            //建立節點FieldItem
            //TC021	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC021");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC021"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //建立節點FieldItem

            //建立節點FieldItem
            //TC022	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC022");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC022"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //建立節點FieldItem

            //建立節點FieldItem
            //TC033	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC033");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC033"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //建立節點FieldItem



            //DataGrid
            //建立節點FieldItem
            //DETAILS
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "DETAILS");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點 DataGrid
            XmlElement DataGrid = xmlDoc.CreateElement("DataGrid");
            //DataGrid 加入至 TB 節點底下
            XmlNode DETAILS = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='DETAILS']");
            DETAILS.AppendChild(DataGrid);


            foreach (DataRow od in DT.Rows)
            {
                // 新增 Row
                XmlElement Row = xmlDoc.CreateElement("Row");
                Row.SetAttribute("order", (rowscounts).ToString());


                //Row	TD003
                XmlElement Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD003");
                Cell.SetAttribute("fieldValue", od["TD003"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD004
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD004");
                Cell.SetAttribute("fieldValue", od["TD004"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD005
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD005");
                Cell.SetAttribute("fieldValue", od["TD005"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD008
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD008");
                Cell.SetAttribute("fieldValue", od["TD008"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);



                rowscounts = rowscounts + 1;

                //DataGrid PURTM
                XmlNode DataGridS = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='DETAILS']/DataGrid");
                DataGridS.AppendChild(Row);

            }


            ////用ADDTACK，直接啟動起單
            //ADDTACK(Form);

            //ADD TO DB
            ////string connectionString = ConfigurationManager.ConnectionStrings["dbUOF"].ToString();

            //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
            //sqlConn = new SqlConnection(connectionString);

            //20210902密
            Class1 TKID = new Class1();//用new 建立類別實體
            SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

            //資料庫使用者密碼解密
            sqlsb.Password = TKID.Decryption(sqlsb.Password);
            sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

            String connectionString;
            sqlConn = new SqlConnection(sqlsb.ConnectionString);
            connectionString = sqlConn.ConnectionString.ToString();

            StringBuilder queryString = new StringBuilder();




            queryString.AppendFormat(@" INSERT INTO [{0}].dbo.TB_WKF_EXTERNAL_TASK
                                         (EXTERNAL_TASK_ID,FORM_INFO,STATUS,EXTERNAL_FORM_NBR)
                                        VALUES (NEWID(),@XML,2,'{1}')
                                        ", DBNAME, EXTERNAL_FORM_NBR);

            try
            {
                using (SqlConnection connection = new SqlConnection(connectionString))
                {

                    SqlCommand command = new SqlCommand(queryString.ToString(), connection);
                    command.Parameters.Add("@XML", SqlDbType.NVarChar).Value = Form.OuterXml;

                    command.Connection.Open();

                    int count = command.ExecuteNonQuery();

                    connection.Close();
                    connection.Dispose();

                }
            }
            catch
            {

            }
            finally
            {

            }
        }


        public DataTable SEARCH_ASTTC_ACTI10(string TC001, string TC002)
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);


                sbSql.Clear();
                sbSqlQuery.Clear();

                //庫存數量看LA009 IN ('20004','20006','20008','20019','20020'

                sbSql.AppendFormat(@"  
                                    SELECT *
                                    ,USER_GUID,NAME
                                    ,(SELECT TOP 1 GROUP_ID FROM [192.168.1.223].[UOF].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'GROUP_ID'
                                    ,(SELECT TOP 1 TITLE_ID FROM [192.168.1.223].[UOF].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'TITLE_ID'
                                    FROM 
                                    (
                                    SELECT   
                                    ASTTC.[COMPANY]
                                    ,ASTTC.[CREATOR]
                                    ,ASTTC.[USR_GROUP]
                                    ,ASTTC.[CREATE_DATE]
                                    ,ASTTC.[MODIFIER]
                                    ,ASTTC.[MODI_DATE]
                                    ,ASTTC.[FLAG]
                                    ,ASTTC.[CREATE_TIME]
                                    ,ASTTC.[MODI_TIME]
                                    ,ASTTC.[TRANS_TYPE]
                                    ,ASTTC.[TRANS_NAME]
                                    ,ASTTC.[sync_date]
                                    ,ASTTC.[sync_time]
                                    ,ASTTC.[sync_mark]
                                    ,ASTTC.[sync_count]
                                    ,ASTTC.[DataUser]
                                    ,ASTTC.[DataGroup]                                 
                                    ,[TC001]
                                    ,[TC002]
                                    ,[TC003]
                                    ,[TC004]
                                    ,[TC005]
                                    ,[TC006]
                                    ,[TC007]
                                    ,[TC008]
                                    ,[TC009]
                                    ,[TC010]
                                    ,[TC011]
                                    ,[TC012]
                                    ,[TC013]
                                    ,[TC014]
                                    ,[TC015]
                                    ,[TC016]
                                    ,[TC017]
                                    ,[TC018]
                                    ,[TC019]
                                    ,[TC020]
                                    ,[TC021]
                                    ,[TC022]
                                    ,[TC023]
                                    ,[TC024]
                                    ,[TC025]
                                    ,[TC026]
                                    ,[TC027]
                                    ,[TC028]
                                    ,[TC029]
                                    ,[TC030]
                                    ,[TC031]
                                    ,[TC032]
                                    ,[TC033]
                                    ,[TC034]
                                    ,[TC035]
                                    ,[TC036]
                                    ,[TC037]
                                    ,[TC038]
                                    ,[TC039]
                                    ,[TC040]
                                    ,[TC041]
                                    ,[TC042]
                                    ,[TC043]
                                    ,[TC044]
                                    ,[TC045]
                                    ,[TC046]
                                    ,[TC047]
                                    ,[TC048]
                                    ,[TC049]
                                    ,[TC050]
                                    ,[TC051]
                                    ,[TC052]
                                    ,[TC053]
                                    ,[TC054]
                                    ,[TC055]
                                    ,[TC056]
                                    ,[TC057]
                                    ,[TC058]
                                    ,[TC059]
                                    ,[TC060]
                                    ,[TC061]
                                    ,[TC062]
                                    ,[TC063]
                                    ,[TC064]
                                    ,[TC065]
                                    ,[TC066]
                                    ,[TC067]
                                    ,[TC068]
                                    ,[TC069]
                                    ,[TC070]
                                    ,[TC071]
                                    ,[TC072]
                                    ,[TC073]
                                    ,[TC074]
                                    ,[TC075]
                                    ,[TC076]
                                    ,[TC077]
                                    ,[TC078]
                                    ,[TC079]
                                    ,[TC080]
                                    ,[TC081]
                                    ,[TC082]
                                    ,[TC083]
                                    ,[TC084]
                                    ,[TC085]
                                    ,[TC086]
                                    ,[TC087]
                                    ,[TC088]
                                    ,[TC089]
                                    ,[TC090]
                                    ,[TC091]
                                    ,[TC092]
                                    ,[TC093]
                                    ,[TC094]
                                    ,[TC095]
                                    ,[TC096]
                                    ,[TC097]
                                    ,[TC098]
                                    ,[TC099]
                                    ,[TC100]
                                    ,[TC101]
                                    ,[TC102]
                                    ,[TC103]
                                    ,[TC104]
                                    ,[TC105]
                                    ,[TC106]
                                    ,[TC107]
                                    ,[MB001]
                                    ,[MB002]
                                    ,[MB003]
                                    ,[TD001]
                                    ,[TD002]
                                    ,[TD003]
                                    ,[TD004]
                                    ,[TD005]
                                    ,[TD006]
                                    ,[TD007]
                                    ,[TD008]
           
                                    ,[TB_EB_USER].USER_GUID,NAME
                                    ,(SELECT TOP 1 MV002 FROM [TK].dbo.CMSMV WHERE MV001=ASTTC.CREATOR) AS 'MV002'

                                    FROM [TK].dbo.ASTTC
                                    LEFT JOIN [192.168.1.223].[UOF].[dbo].[TB_EB_USER] ON [TB_EB_USER].ACCOUNT= ASTTC.CREATOR COLLATE Chinese_Taiwan_Stroke_BIN
                                    LEFT JOIN [TK].dbo.ASTTD ON TC001=TD001 AND TC002=TD002

                                    ,[TK].dbo.ASTMB

                                    WHERE 1=1
                                    AND TC004=MB001
                                    AND TC001='{0}' AND TC002='{1}'

                                    ) AS TEMP
                              
                                    ", TC001, TC002);


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    return ds1.Tables["ds1"];

                }
                else
                {
                    return null;
                }

            }
            catch
            {
                return null;
            }
            finally
            {
                sqlConn.Close();
            }
        }

        public void ADDUOFASTMBASTMCASTTCASTTD_ACTI11()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp22"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                DataSet ds1 = new DataSet();
                SqlDataAdapter adapter1 = new SqlDataAdapter();
                SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();

                sbSql.Clear();
                sbSqlQuery.Clear();

                //TL006='N' AND (UDF01 IN ('Y','y') ) 
                sbSql.AppendFormat(@" 
                                    SELECT TC001,TC002
                                    FROM [TK].dbo.ASTTC
                                    WHERE  UDF01 IN ('Y','y')
                                    AND TC001 IN ('AC61')
                                    ORDER BY TC001,TC002


                                    ");

                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");


                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    foreach (DataRow dr in ds1.Tables["ds1"].Rows)
                    {
                        ADD_ASTTC_TB_WKF_EXTERNAL_TASK_ACTI11(dr["TC001"].ToString().Trim(), dr["TC002"].ToString().Trim());
                    }

                }
                else
                {

                }

            }
            catch
            {

            }
            finally
            {
                sqlConn.Close();
            }

            UPDATE_ASTTC_UDF01_ACTI11();
        }

        public void UPDATE_ASTTC_UDF01_ACTI11()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dbconn"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sqlConn.Close();
                sqlConn.Open();
                tran = sqlConn.BeginTransaction();

                sbSql.Clear();

                sbSql.AppendFormat(@"  
                                    UPDATE  [TK].dbo.ASTTC
                                    SET UDF01 = 'UOF'

                                    WHERE UDF01 IN ('Y','y')         
                                    AND TC001 IN ('AC61')   

                                    ");

                cmd.Connection = sqlConn;
                cmd.CommandTimeout = 60;
                cmd.CommandText = sbSql.ToString();
                cmd.Transaction = tran;
                result = cmd.ExecuteNonQuery();

                if (result == 0)
                {
                    tran.Rollback();    //交易取消
                }
                else
                {
                    tran.Commit();      //執行交易  
                }

            }
            catch
            {

            }

            finally
            {
                sqlConn.Close();
            }
        }
        public void ADD_ASTTC_TB_WKF_EXTERNAL_TASK_ACTI11(string TC001, string TC002)
        {

            DataTable DT = SEARCH_ASTTC_ACTI10(TC001, TC002);
            DataTable DTUPFDEP = SEARCHUOFDEP(DT.Rows[0]["CREATOR"].ToString());

            string account = DT.Rows[0]["CREATOR"].ToString();
            string groupId = DT.Rows[0]["GROUP_ID"].ToString();
            string jobTitleId = DT.Rows[0]["TITLE_ID"].ToString();
            string fillerName = DT.Rows[0]["MV002"].ToString();
            string fillerUserGuid = DT.Rows[0]["USER_GUID"].ToString();

            string DEPNAME = DTUPFDEP.Rows[0]["DEPNAME"].ToString();
            string DEPNO = DTUPFDEP.Rows[0]["DEPNO"].ToString();

            string EXTERNAL_FORM_NBR = DT.Rows[0]["TC001"].ToString().Trim() + DT.Rows[0]["TC002"].ToString().Trim();

            int rowscounts = 0;

            XmlDocument xmlDoc = new XmlDocument();
            //建立根節點
            XmlElement Form = xmlDoc.CreateElement("Form");

            //正式的id
            string FORMID = SEARCHFORM_UOF_VERSION_ID("ASTI11.資產折舊建立作業");

            if (!string.IsNullOrEmpty(FORMID))
            {
                Form.SetAttribute("formVersionId", FORMID);
            }


            Form.SetAttribute("urgentLevel", "2");
            //加入節點底下
            xmlDoc.AppendChild(Form);

            ////建立節點Applicant
            XmlElement Applicant = xmlDoc.CreateElement("Applicant");
            Applicant.SetAttribute("account", account);
            Applicant.SetAttribute("groupId", groupId);
            Applicant.SetAttribute("jobTitleId", jobTitleId);
            //加入節點底下
            Form.AppendChild(Applicant);

            //建立節點 Comment
            XmlElement Comment = xmlDoc.CreateElement("Comment");
            Comment.InnerText = "申請者意見";
            //加入至節點底下
            Applicant.AppendChild(Comment);

            //建立節點 FormFieldValue
            XmlElement FormFieldValue = xmlDoc.CreateElement("FormFieldValue");
            //加入至節點底下
            Form.AppendChild(FormFieldValue);

            //建立節點FieldItem
            //ID 表單編號	
            XmlElement FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "ID");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC001	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC001");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC001"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC002	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC002");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC002"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //MB001	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "MB001");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["MB001"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //MB002	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "MB002");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["MB002"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //MB003	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "MB003");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["MB003"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC003	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC003");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC003"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC005	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC005");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC005"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC006	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC006");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC006"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC007	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC007");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC007"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC008	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC008");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC008"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC009	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC009");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC009"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC010	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC010");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC010"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TC013	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC013");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC013"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //建立節點FieldItem

            //建立節點FieldItem
            //TC018	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC018");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC018"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //建立節點FieldItem

            //建立節點FieldItem
            //TC019	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC019");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC019"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //建立節點FieldItem

            //建立節點FieldItem
            //TC020	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC020");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC020"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //建立節點FieldItem

            //建立節點FieldItem
            //TC021	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC021");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC021"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //建立節點FieldItem

            //建立節點FieldItem
            //TC022	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC022");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC022"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //建立節點FieldItem

            //建立節點FieldItem
            //TC033	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC033");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC033"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //建立節點FieldItem



            //DataGrid
            //建立節點FieldItem
            //DETAILS
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "DETAILS");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點 DataGrid
            XmlElement DataGrid = xmlDoc.CreateElement("DataGrid");
            //DataGrid 加入至 TB 節點底下
            XmlNode DETAILS = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='DETAILS']");
            DETAILS.AppendChild(DataGrid);


            foreach (DataRow od in DT.Rows)
            {
                // 新增 Row
                XmlElement Row = xmlDoc.CreateElement("Row");
                Row.SetAttribute("order", (rowscounts).ToString());


                //Row	TD003
                XmlElement Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD003");
                Cell.SetAttribute("fieldValue", od["TD003"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD004
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD004");
                Cell.SetAttribute("fieldValue", od["TD004"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD005
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD005");
                Cell.SetAttribute("fieldValue", od["TD005"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TD008
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TD008");
                Cell.SetAttribute("fieldValue", od["TD008"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);



                rowscounts = rowscounts + 1;

                //DataGrid PURTM
                XmlNode DataGridS = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='DETAILS']/DataGrid");
                DataGridS.AppendChild(Row);

            }


            ////用ADDTACK，直接啟動起單
            //ADDTACK(Form);

            //ADD TO DB
            ////string connectionString = ConfigurationManager.ConnectionStrings["dbUOF"].ToString();

            //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
            //sqlConn = new SqlConnection(connectionString);

            //20210902密
            Class1 TKID = new Class1();//用new 建立類別實體
            SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

            //資料庫使用者密碼解密
            sqlsb.Password = TKID.Decryption(sqlsb.Password);
            sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

            String connectionString;
            sqlConn = new SqlConnection(sqlsb.ConnectionString);
            connectionString = sqlConn.ConnectionString.ToString();

            StringBuilder queryString = new StringBuilder();




            queryString.AppendFormat(@" INSERT INTO [{0}].dbo.TB_WKF_EXTERNAL_TASK
                                         (EXTERNAL_TASK_ID,FORM_INFO,STATUS,EXTERNAL_FORM_NBR)
                                        VALUES (NEWID(),@XML,2,'{1}')
                                        ", DBNAME, EXTERNAL_FORM_NBR);

            try
            {
                using (SqlConnection connection = new SqlConnection(connectionString))
                {

                    SqlCommand command = new SqlCommand(queryString.ToString(), connection);
                    command.Parameters.Add("@XML", SqlDbType.NVarChar).Value = Form.OuterXml;

                    command.Connection.Open();

                    int count = command.ExecuteNonQuery();

                    connection.Close();
                    connection.Dispose();

                }
            }
            catch
            {

            }
            finally
            {

            }
        }


        public DataTable SEARCH_ASTTC_ACTI11(string TC001, string TC002)
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);


                sbSql.Clear();
                sbSqlQuery.Clear();

                //庫存數量看LA009 IN ('20004','20006','20008','20019','20020'

                sbSql.AppendFormat(@"  
                                    SELECT *
                                    ,USER_GUID,NAME
                                    ,(SELECT TOP 1 GROUP_ID FROM [192.168.1.223].[UOF].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'GROUP_ID'
                                    ,(SELECT TOP 1 TITLE_ID FROM [192.168.1.223].[UOF].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'TITLE_ID'
                                    FROM 
                                    (
                                    SELECT   
                                    ASTTC.[COMPANY]
                                    ,ASTTC.[CREATOR]
                                    ,ASTTC.[USR_GROUP]
                                    ,ASTTC.[CREATE_DATE]
                                    ,ASTTC.[MODIFIER]
                                    ,ASTTC.[MODI_DATE]
                                    ,ASTTC.[FLAG]
                                    ,ASTTC.[CREATE_TIME]
                                    ,ASTTC.[MODI_TIME]
                                    ,ASTTC.[TRANS_TYPE]
                                    ,ASTTC.[TRANS_NAME]
                                    ,ASTTC.[sync_date]
                                    ,ASTTC.[sync_time]
                                    ,ASTTC.[sync_mark]
                                    ,ASTTC.[sync_count]
                                    ,ASTTC.[DataUser]
                                    ,ASTTC.[DataGroup]                                 
                                    ,[TC001]
                                    ,[TC002]
                                    ,[TC003]
                                    ,[TC004]
                                    ,[TC005]
                                    ,[TC006]
                                    ,[TC007]
                                    ,[TC008]
                                    ,[TC009]
                                    ,[TC010]
                                    ,[TC011]
                                    ,[TC012]
                                    ,[TC013]
                                    ,[TC014]
                                    ,[TC015]
                                    ,[TC016]
                                    ,[TC017]
                                    ,[TC018]
                                    ,[TC019]
                                    ,[TC020]
                                    ,[TC021]
                                    ,[TC022]
                                    ,[TC023]
                                    ,[TC024]
                                    ,[TC025]
                                    ,[TC026]
                                    ,[TC027]
                                    ,[TC028]
                                    ,[TC029]
                                    ,[TC030]
                                    ,[TC031]
                                    ,[TC032]
                                    ,[TC033]
                                    ,[TC034]
                                    ,[TC035]
                                    ,[TC036]
                                    ,[TC037]
                                    ,[TC038]
                                    ,[TC039]
                                    ,[TC040]
                                    ,[TC041]
                                    ,[TC042]
                                    ,[TC043]
                                    ,[TC044]
                                    ,[TC045]
                                    ,[TC046]
                                    ,[TC047]
                                    ,[TC048]
                                    ,[TC049]
                                    ,[TC050]
                                    ,[TC051]
                                    ,[TC052]
                                    ,[TC053]
                                    ,[TC054]
                                    ,[TC055]
                                    ,[TC056]
                                    ,[TC057]
                                    ,[TC058]
                                    ,[TC059]
                                    ,[TC060]
                                    ,[TC061]
                                    ,[TC062]
                                    ,[TC063]
                                    ,[TC064]
                                    ,[TC065]
                                    ,[TC066]
                                    ,[TC067]
                                    ,[TC068]
                                    ,[TC069]
                                    ,[TC070]
                                    ,[TC071]
                                    ,[TC072]
                                    ,[TC073]
                                    ,[TC074]
                                    ,[TC075]
                                    ,[TC076]
                                    ,[TC077]
                                    ,[TC078]
                                    ,[TC079]
                                    ,[TC080]
                                    ,[TC081]
                                    ,[TC082]
                                    ,[TC083]
                                    ,[TC084]
                                    ,[TC085]
                                    ,[TC086]
                                    ,[TC087]
                                    ,[TC088]
                                    ,[TC089]
                                    ,[TC090]
                                    ,[TC091]
                                    ,[TC092]
                                    ,[TC093]
                                    ,[TC094]
                                    ,[TC095]
                                    ,[TC096]
                                    ,[TC097]
                                    ,[TC098]
                                    ,[TC099]
                                    ,[TC100]
                                    ,[TC101]
                                    ,[TC102]
                                    ,[TC103]
                                    ,[TC104]
                                    ,[TC105]
                                    ,[TC106]
                                    ,[TC107]
                                    ,[MB001]
                                    ,[MB002]
                                    ,[MB003]
                                    ,[TD001]
                                    ,[TD002]
                                    ,[TD003]
                                    ,[TD004]
                                    ,[TD005]
                                    ,[TD006]
                                    ,[TD007]
                                    ,[TD008]
           
                                    ,[TB_EB_USER].USER_GUID,NAME
                                    ,(SELECT TOP 1 MV002 FROM [TK].dbo.CMSMV WHERE MV001=ASTTC.CREATOR) AS 'MV002'

                                    FROM [TK].dbo.ASTTC
                                    LEFT JOIN [192.168.1.223].[UOF].[dbo].[TB_EB_USER] ON [TB_EB_USER].ACCOUNT= ASTTC.CREATOR COLLATE Chinese_Taiwan_Stroke_BIN
                                    LEFT JOIN [TK].dbo.ASTTD ON TC001=TD001 AND TC002=TD002

                                    ,[TK].dbo.ASTMB

                                    WHERE 1=1
                                    AND TC004=MB001
                                    AND TC001='{0}' AND TC002='{1}'

                                    ) AS TEMP
                              
                                    ", TC001, TC002);


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    return ds1.Tables["ds1"];

                }
                else
                {
                    return null;
                }

            }
            catch
            {
                return null;
            }
            finally
            {
                sqlConn.Close();
            }
        }


        public void ADDUOFASTMBASTMCASTTEASTTE()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp22"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                DataSet ds1 = new DataSet();
                SqlDataAdapter adapter1 = new SqlDataAdapter();
                SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();

                sbSql.Clear();
                sbSqlQuery.Clear();

                //TL006='N' AND (UDF01 IN ('Y','y') ) 
                sbSql.AppendFormat(@" 
                                    SELECT TE001,TE002
                                    FROM [TK].dbo.ASTTE
                                    WHERE  UDF01 IN ('Y','y')
                                    AND TE001 IN ('AC71')
                                    ORDER BY TE001,TE002


                                    ");

                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");


                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    foreach (DataRow dr in ds1.Tables["ds1"].Rows)
                    {
                        ADD_ASTTC_TB_WKF_EXTERNAL_TASK_ASTTE(dr["TE001"].ToString().Trim(), dr["TE002"].ToString().Trim());
                    }

                }
                else
                {

                }

            }
            catch
            {

            }
            finally
            {
                sqlConn.Close();
            }

            UPDATE_ASTTC_UDF01_ASTTE();
        }

        public void UPDATE_ASTTC_UDF01_ASTTE()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dbconn"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sqlConn.Close();
                sqlConn.Open();
                tran = sqlConn.BeginTransaction();

                sbSql.Clear();

                sbSql.AppendFormat(@"  
                                    UPDATE  [TK].dbo.ASTTE
                                    SET UDF01 = 'UOF'

                                    WHERE UDF01 IN ('Y','y')         
                                    AND TE001 IN ('AC71')   

                                    ");

                cmd.Connection = sqlConn;
                cmd.CommandTimeout = 60;
                cmd.CommandText = sbSql.ToString();
                cmd.Transaction = tran;
                result = cmd.ExecuteNonQuery();

                if (result == 0)
                {
                    tran.Rollback();    //交易取消
                }
                else
                {
                    tran.Commit();      //執行交易  
                }

            }
            catch
            {

            }

            finally
            {
                sqlConn.Close();
            }
        }
        public void ADD_ASTTC_TB_WKF_EXTERNAL_TASK_ASTTE(string TE001, string TE002)
        {

            DataTable DT = SEARCH_ASTTE_ASTTF(TE001, TE002);
            DataTable DTUPFDEP = SEARCHUOFDEP(DT.Rows[0]["CREATOR"].ToString());

            string account = DT.Rows[0]["CREATOR"].ToString();
            string groupId = DT.Rows[0]["GROUP_ID"].ToString();
            string jobTitleId = DT.Rows[0]["TITLE_ID"].ToString();
            string fillerName = DT.Rows[0]["MV002"].ToString();
            string fillerUserGuid = DT.Rows[0]["USER_GUID"].ToString();

            string DEPNAME = DTUPFDEP.Rows[0]["DEPNAME"].ToString();
            string DEPNO = DTUPFDEP.Rows[0]["DEPNO"].ToString();

            string EXTERNAL_FORM_NBR = DT.Rows[0]["TE001"].ToString().Trim() + DT.Rows[0]["TE002"].ToString().Trim();

            int rowscounts = 0;

            XmlDocument xmlDoc = new XmlDocument();
            //建立根節點
            XmlElement Form = xmlDoc.CreateElement("Form");

            //正式的id
            string FORMID = SEARCHFORM_UOF_VERSION_ID("ASTI12.資產移轉建立作業");

            if (!string.IsNullOrEmpty(FORMID))
            {
                Form.SetAttribute("formVersionId", FORMID);
            }


            Form.SetAttribute("urgentLevel", "2");
            //加入節點底下
            xmlDoc.AppendChild(Form);

            ////建立節點Applicant
            XmlElement Applicant = xmlDoc.CreateElement("Applicant");
            Applicant.SetAttribute("account", account);
            Applicant.SetAttribute("groupId", groupId);
            Applicant.SetAttribute("jobTitleId", jobTitleId);
            //加入節點底下
            Form.AppendChild(Applicant);

            //建立節點 Comment
            XmlElement Comment = xmlDoc.CreateElement("Comment");
            Comment.InnerText = "申請者意見";
            //加入至節點底下
            Applicant.AppendChild(Comment);

            //建立節點 FormFieldValue
            XmlElement FormFieldValue = xmlDoc.CreateElement("FormFieldValue");
            //加入至節點底下
            Form.AppendChild(FormFieldValue);

            //建立節點FieldItem
            //ID 表單編號	
            XmlElement FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "ID");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TE001	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TE001");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TE001"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TE002	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TE002");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TE002"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);


            //建立節點FieldItem
            //TE003	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TE003");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TE003"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);


            //建立節點FieldItem
            //TE004	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TE004");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TE004"].ToString().Trim());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);





            //DataGrid
            //建立節點FieldItem
            //DETAILS
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "DETAILS");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點 DataGrid
            XmlElement DataGrid = xmlDoc.CreateElement("DataGrid");
            //DataGrid 加入至 TB 節點底下
            XmlNode DETAILS = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='DETAILS']");
            DETAILS.AppendChild(DataGrid);


            foreach (DataRow od in DT.Rows)
            {
                // 新增 Row
                XmlElement Row = xmlDoc.CreateElement("Row");
                Row.SetAttribute("order", (rowscounts).ToString());


                //Row	TF003
                XmlElement Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TF003");
                Cell.SetAttribute("fieldValue", od["TF003"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TF004
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TF004");
                Cell.SetAttribute("fieldValue", od["TF004"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TF005
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TF005");
                Cell.SetAttribute("fieldValue", od["TF005"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TF006
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TF006");
                Cell.SetAttribute("fieldValue", od["TF006"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TF007
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TF007");
                Cell.SetAttribute("fieldValue", od["TF007"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TF008
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TF008");
                Cell.SetAttribute("fieldValue", od["TF008"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TF104
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TF104");
                Cell.SetAttribute("fieldValue", od["TF104"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TF105
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TF105");
                Cell.SetAttribute("fieldValue", od["TF105"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TF107
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TF107");
                Cell.SetAttribute("fieldValue", od["TF107"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);



                rowscounts = rowscounts + 1;

                //DataGrid PURTM
                XmlNode DataGridS = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='DETAILS']/DataGrid");
                DataGridS.AppendChild(Row);

            }


            ////用ADDTACK，直接啟動起單
            //ADDTACK(Form);

            //ADD TO DB
            ////string connectionString = ConfigurationManager.ConnectionStrings["dbUOF"].ToString();

            //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
            //sqlConn = new SqlConnection(connectionString);

            //20210902密
            Class1 TKID = new Class1();//用new 建立類別實體
            SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

            //資料庫使用者密碼解密
            sqlsb.Password = TKID.Decryption(sqlsb.Password);
            sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

            String connectionString;
            sqlConn = new SqlConnection(sqlsb.ConnectionString);
            connectionString = sqlConn.ConnectionString.ToString();

            StringBuilder queryString = new StringBuilder();




            queryString.AppendFormat(@" INSERT INTO [{0}].dbo.TB_WKF_EXTERNAL_TASK
                                         (EXTERNAL_TASK_ID,FORM_INFO,STATUS,EXTERNAL_FORM_NBR)
                                        VALUES (NEWID(),@XML,2,'{1}')
                                        ", DBNAME, EXTERNAL_FORM_NBR);

            try
            {
                using (SqlConnection connection = new SqlConnection(connectionString))
                {

                    SqlCommand command = new SqlCommand(queryString.ToString(), connection);
                    command.Parameters.Add("@XML", SqlDbType.NVarChar).Value = Form.OuterXml;

                    command.Connection.Open();

                    int count = command.ExecuteNonQuery();

                    connection.Close();
                    connection.Dispose();

                }
            }
            catch
            {

            }
            finally
            {

            }
        }


        public DataTable SEARCH_ASTTE_ASTTF(string TE001, string TE002)
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);


                sbSql.Clear();
                sbSqlQuery.Clear();

                //庫存數量看LA009 IN ('20004','20006','20008','20019','20020'

                sbSql.AppendFormat(@"  
                                    SELECT *
                                    ,USER_GUID,NAME
                                    ,(SELECT TOP 1 GROUP_ID FROM [192.168.1.223].[UOF].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'GROUP_ID'
                                    ,(SELECT TOP 1 TITLE_ID FROM [192.168.1.223].[UOF].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'TITLE_ID'
                                    FROM 
                                    (
                                    SELECT   
                                    ASTTE.[COMPANY]
                                    ,ASTTE.[CREATOR]
                                    ,ASTTE.[USR_GROUP]
                                    ,ASTTE.[CREATE_DATE]
                                    ,ASTTE.[MODIFIER]
                                    ,ASTTE.[MODI_DATE]
                                    ,ASTTE.[FLAG]
                                    ,ASTTE.[CREATE_TIME]
                                    ,ASTTE.[MODI_TIME]
                                    ,ASTTE.[TRANS_TYPE]
                                    ,ASTTE.[TRANS_NAME]
                                    ,ASTTE.[sync_date]
                                    ,ASTTE.[sync_time]
                                    ,ASTTE.[sync_mark]
                                    ,ASTTE.[sync_count]
                                    ,ASTTE.[DataUser]
                                    ,ASTTE.[DataGroup]                                 
                                    ,TE001
                                    ,TE002
                                    ,TE003
                                    ,TE004
                                    ,TF003
                                    ,TF004
                                    ,TF005
                                    ,TF006
                                    ,TF007
                                    ,TF008
                                    ,TF104
                                    ,TF105
                                    ,TF107

                                    ,[MB001]
                                    ,[MB002]
                                    ,[MB003]

           
                                    ,[TB_EB_USER].USER_GUID,NAME
                                    ,(SELECT TOP 1 MV002 FROM [TK].dbo.CMSMV WHERE MV001=ASTTE.CREATOR) AS 'MV002'

                                    FROM [TK].dbo.ASTTE
                                    LEFT JOIN [192.168.1.223].[UOF].[dbo].[TB_EB_USER] ON [TB_EB_USER].ACCOUNT= ASTTE.CREATOR COLLATE Chinese_Taiwan_Stroke_BIN
                                    LEFT JOIN [TK].dbo.ASTTF ON TE001=TF001 AND TE002=TF002

                                    ,[TK].dbo.ASTMB

                                    WHERE 1=1
                                    AND TF003=MB001
                                    AND TE001='{0}' AND TE002='{1}'

                                    ) AS TEMP
                              
                                    ", TE001, TE002);


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    return ds1.Tables["ds1"];

                }
                else
                {
                    return null;
                }

            }
            catch
            {
                return null;
            }
            finally
            {
                sqlConn.Close();
            }
        }

        public DataTable FIND_Z_UOF_SET_FORM_USERS(string FORM_NAME)
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sbSql.Clear();
                sbSqlQuery.Clear();

                sbSql.AppendFormat(@"  
                                    SELECT TOP 1 [USER_GUID] ,[NAMES] ,[FORM_NAME] 
                                    FROM [UOF].[dbo].[Z_UOF_SET_FORM_USERS]
                                    WHERE [FORM_NAME] ='{0}'
                              
                                    ", FORM_NAME);


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    return ds1.Tables["ds1"];

                }
                else
                {
                    return null;
                }

            }
            catch
            {
                return null;
            }
            finally
            {
                sqlConn.Close();
            }
        }

        public void NEW_PURTGPURIJ()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp22"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                DataSet ds1 = new DataSet();
                SqlDataAdapter adapter1 = new SqlDataAdapter();
                SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();

                sbSql.Clear();
                sbSqlQuery.Clear();

                //TL006='N' AND (UDF01 IN ('Y','y') ) 
                sbSql.AppendFormat(@" 
                                    SELECT TI001,TI002,UDF01
                                    FROM [test0923].dbo.PURTI
                                    WHERE TI013='N'
                                    AND UDF01 IN ('Y','y')
                                    ORDER BY TI001,TI002


                                    ");

                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");


                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    foreach (DataRow dr in ds1.Tables["ds1"].Rows)
                    {
                        ADD_PURTIPURTJ_TB_WKF_EXTERNAL_TASK(dr["TI001"].ToString().Trim(), dr["TI002"].ToString().Trim());
                    }

                }
                else
                {

                }

            }
            catch
            {

            }
            finally
            {
                sqlConn.Close();
            }

            UPDATE_PURTI_UDF01();
        }
        public void ADD_PURTIPURTJ_TB_WKF_EXTERNAL_TASK(string TI001, string TI002)
        {

            DataTable DT = SEARCH_PURTI_PURTJ(TI001, TI002);
            DataTable DTUPFDEP = SEARCHUOFDEP(DT.Rows[0]["CREATOR"].ToString());

            string account = DT.Rows[0]["CREATOR"].ToString();
            string groupId = DT.Rows[0]["GROUP_ID"].ToString();
            string jobTitleId = DT.Rows[0]["TITLE_ID"].ToString();
            string fillerName = DT.Rows[0]["MV002"].ToString();
            string fillerUserGuid = DT.Rows[0]["USER_GUID"].ToString();

            string DEPNAME = DTUPFDEP.Rows[0]["DEPNAME"].ToString();
            string DEPNO = DTUPFDEP.Rows[0]["DEPNO"].ToString();

            string EXTERNAL_FORM_NBR = DT.Rows[0]["TI001"].ToString().Trim() + DT.Rows[0]["TI002"].ToString().Trim();

            int rowscounts = 0;

            XmlDocument xmlDoc = new XmlDocument();
            //建立根節點
            XmlElement Form = xmlDoc.CreateElement("Form");

            //正式的id
            string PURTGID = SEARCHFORM_UOF_VERSION_ID("PUR70.退貨單 ");

            if (!string.IsNullOrEmpty(PURTGID))
            {
                Form.SetAttribute("formVersionId", PURTGID);
            }


            Form.SetAttribute("urgentLevel", "2");
            //加入節點底下
            xmlDoc.AppendChild(Form);

            ////建立節點Applicant
            XmlElement Applicant = xmlDoc.CreateElement("Applicant");
            Applicant.SetAttribute("account", account);
            Applicant.SetAttribute("groupId", groupId);
            Applicant.SetAttribute("jobTitleId", jobTitleId);
            //加入節點底下
            Form.AppendChild(Applicant);

            //建立節點 Comment
            XmlElement Comment = xmlDoc.CreateElement("Comment");
            Comment.InnerText = "申請者意見";
            //加入至節點底下
            Applicant.AppendChild(Comment);

            //建立節點 FormFieldValue
            XmlElement FormFieldValue = xmlDoc.CreateElement("FormFieldValue");
            //加入至節點底下
            Form.AppendChild(FormFieldValue);

            //建立節點FieldItem
            //ID 表單編號	
            XmlElement FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "ID");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TI001	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TI001");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TI001"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TI002	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TI002");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TI002"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TI003	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TI003");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TI003"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TI004	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TI004");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TI004"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TI016	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TI016");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TI016"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TI017	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TI017");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TI017"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TI018	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TI018");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TI018"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TI006	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TI006");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TI006"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TI007	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TI007");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TI007"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TI008	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TI008");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TI008"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TI009	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TI009");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TI009"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TI012	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TI012");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TI012"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);



            //DataGrid
            //建立節點FieldItem
            //PURTJ
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "PURTJ");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點 DataGrid
            XmlElement DataGrid = xmlDoc.CreateElement("DataGrid");
            //DataGrid 加入至 TB 節點底下
            XmlNode PURTD = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='PURTJ']");
            PURTD.AppendChild(DataGrid);


            foreach (DataRow od in DT.Rows)
            {
                // 新增 Row
                XmlElement Row = xmlDoc.CreateElement("Row");
                Row.SetAttribute("order", (rowscounts).ToString());       

                //Row	TJ003
                XmlElement Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TJ003");
                Cell.SetAttribute("fieldValue", od["TJ003"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TJ004
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TJ004");
                Cell.SetAttribute("fieldValue", od["TJ004"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TJ005
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TJ005");
                Cell.SetAttribute("fieldValue", od["TJ005"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TJ006
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TJ006");
                Cell.SetAttribute("fieldValue", od["TJ006"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TJ007
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TJ007");
                Cell.SetAttribute("fieldValue", od["TJ007"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TJ008
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TJ008");
                Cell.SetAttribute("fieldValue", od["TJ008"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TJ009
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TJ009");
                Cell.SetAttribute("fieldValue", od["TJ009"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TJ010
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TJ010");
                Cell.SetAttribute("fieldValue", od["TJ010"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TJ011
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TJ011");
                Cell.SetAttribute("fieldValue", od["TJ011"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TJ012
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TJ012");
                Cell.SetAttribute("fieldValue", od["TJ012"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TJ013
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TJ013");
                Cell.SetAttribute("fieldValue", od["TJ013"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TJ014
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TJ014");
                Cell.SetAttribute("fieldValue", od["TJ014"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TJ015
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TJ015");
                Cell.SetAttribute("fieldValue", od["TJ015"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TJ016
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TJ016");
                Cell.SetAttribute("fieldValue", od["TJ016"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TJ017
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TJ017");
                Cell.SetAttribute("fieldValue", od["TJ017"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TJ018
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TJ018");
                Cell.SetAttribute("fieldValue", od["TJ018"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);




                rowscounts = rowscounts + 1;

                //DataGrid PURTM
                XmlNode DataGridS = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='PURTJ']/DataGrid");
                DataGridS.AppendChild(Row);

            }


            ////用ADDTACK，直接啟動起單
            //ADDTACK(Form);

            //ADD TO DB
            ////string connectionString = ConfigurationManager.ConnectionStrings["dbUOF"].ToString();

            //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
            //sqlConn = new SqlConnection(connectionString);

            //20210902密
            Class1 TKID = new Class1();//用new 建立類別實體
            SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

            //資料庫使用者密碼解密
            sqlsb.Password = TKID.Decryption(sqlsb.Password);
            sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

            String connectionString;
            sqlConn = new SqlConnection(sqlsb.ConnectionString);
            connectionString = sqlConn.ConnectionString.ToString();

            StringBuilder queryString = new StringBuilder();




            queryString.AppendFormat(@" INSERT INTO [{0}].dbo.TB_WKF_EXTERNAL_TASK
                                         (EXTERNAL_TASK_ID,FORM_INFO,STATUS,EXTERNAL_FORM_NBR)
                                        VALUES (NEWID(),@XML,2,'{1}')
                                        ", DBNAME, EXTERNAL_FORM_NBR);

            try
            {
                using (SqlConnection connection = new SqlConnection(connectionString))
                {

                    SqlCommand command = new SqlCommand(queryString.ToString(), connection);
                    command.Parameters.Add("@XML", SqlDbType.NVarChar).Value = Form.OuterXml;

                    command.Connection.Open();

                    int count = command.ExecuteNonQuery();

                    connection.Close();
                    connection.Dispose();

                }
            }
            catch
            {

            }
            finally
            {

            }
        }

        public DataTable SEARCH_PURTI_PURTJ(string TI001, string TI002)
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);


                sbSql.Clear();
                sbSqlQuery.Clear();

                //庫存數量看LA009 IN ('20004','20006','20008','20019','20020'

                sbSql.AppendFormat(@"  
                                    SELECT *
                                    ,USER_GUID,NAME
                                    ,(SELECT TOP 1 GROUP_ID FROM [192.168.1.223].[UOF].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'GROUP_ID'
                                    ,(SELECT TOP 1 TITLE_ID FROM [192.168.1.223].[UOF].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'TITLE_ID'
                                    FROM 
                                    (
                                    SELECT 
                                    [PURTI].[COMPANY]
                                    ,[PURTI].[CREATOR]
                                    ,[PURTI].[USR_GROUP]
                                    ,[PURTI].[CREATE_DATE]
                                    ,[PURTI].[MODIFIER]
                                    ,[PURTI].[MODI_DATE]
                                    ,[PURTI].[FLAG]
                                    ,[PURTI].[CREATE_TIME]
                                    ,[PURTI].[MODI_TIME]
                                    ,[PURTI].[TRANS_TYPE]
                                    ,[PURTI].[TRANS_NAME]
                                    ,[PURTI].[sync_date]
                                    ,[PURTI].[sync_time]
                                    ,[PURTI].[sync_mark]
                                    ,[PURTI].[sync_count]
                                    ,[PURTI].[DataUser]
                                    ,[PURTI].[DataGroup]
                                    ,[PURTI].[TI001]
                                    ,[PURTI].[TI002]
                                    ,[PURTI].[TI003]
                                    ,[PURTI].[TI004]
                                    ,[PURTI].[TI005]
                                    ,[PURTI].[TI006]
                                    ,[PURTI].[TI007]
                                    ,[PURTI].[TI008]
                                    ,[PURTI].[TI009]
                                    ,[PURTI].[TI010]
                                    ,[PURTI].[TI011]
                                    ,[PURTI].[TI012]
                                    ,[PURTI].[TI013]
                                    ,[PURTI].[TI014]
                                    ,[PURTI].[TI015]
                                    ,[PURTI].[TI016]
                                    ,[PURTI].[TI017]
                                    ,[PURTI].[TI018]
                                    ,[PURTI].[TI019]
                                    ,[PURTI].[TI020]
                                    ,[PURTI].[TI021]
                                    ,[PURTI].[TI022]
                                    ,[PURTI].[TI023]
                                    ,[PURTI].[TI024]
                                    ,[PURTI].[TI025]
                                    ,[PURTI].[TI026]
                                    ,[PURTI].[TI027]
                                    ,[PURTI].[TI028]
                                    ,[PURTI].[TI029]
                                    ,[PURTI].[TI030]
                                    ,[PURTI].[TI031]
                                    ,[PURTI].[TI032]
                                    ,[PURTI].[TI033]
                                    ,[PURTI].[TI034]
                                    ,[PURTI].[TI035]
                                    ,[PURTI].[TI036]
                                    ,[PURTI].[TI037]
                                    ,[PURTI].[TI038]
                                    ,[PURTI].[TI039]
                                    ,[PURTI].[TI040]
                                    ,[PURTI].[TI041]
                                    ,[PURTI].[TI042]
                                    ,[PURTI].[TI043]
                                    ,[PURTI].[TI044]
                                    ,[PURTI].[TI045]
                                    ,[PURTI].[TI046]
                                    ,[PURTI].[TI047]
                                    ,[PURTI].[TI048]
                                    ,[PURTI].[TI049]
                                    ,[PURTI].[TI050]
                                    ,[PURTI].[TI051]
                                    ,[PURTI].[TI052]
                                    ,[PURTI].[TI053]
                                    ,[PURTI].[TI054]
                                    ,[PURTI].[TI055]
                                    ,[PURTI].[TI056]
                                    ,[PURTI].[TI057]
                                    ,[PURTI].[TI058]
                                    ,[PURTI].[TI059]
                                    ,[PURTI].[TI060]
                                    ,[PURTI].[TI061]
                                    ,[PURTI].[TI062]
                                    ,[PURTI].[TI063]
                                    ,[PURTI].[TI064]
                                    ,[PURTI].[TI065]
                                    ,[PURTI].[TI066]
                                    ,[PURTI].[TI067]
                                    ,[PURTI].[TI068]
                                    ,[PURTI].[TI069]
                                    ,[PURTI].[TI070]
                                    ,[PURTI].[TI071]
                                    ,[PURTI].[TI072]
                                    ,[PURTI].[UDF01] AS 'PURTIUDF01'
                                    ,[PURTI].[UDF02] AS 'PURTIUDF02'
                                    ,[PURTI].[UDF03] AS 'PURTIUDF03'
                                    ,[PURTI].[UDF04] AS 'PURTIUDF04'
                                    ,[PURTI].[UDF05] AS 'PURTIUDF05'
                                    ,[PURTI].[UDF06] AS 'PURTIUDF06'
                                    ,[PURTI].[UDF07] AS 'PURTIUDF07'
                                    ,[PURTI].[UDF08] AS 'PURTIUDF08'
                                    ,[PURTI].[UDF09] AS 'PURTIUDF09'
                                    ,[PURTI].[UDF10] AS 'PURTIUDF10'
                                    ,[PURTJ].[TJ001]
                                    ,[PURTJ].[TJ002]
                                    ,[PURTJ].[TJ003]
                                    ,[PURTJ].[TJ004]
                                    ,[PURTJ].[TJ005]
                                    ,[PURTJ].[TJ006]
                                    ,[PURTJ].[TJ007]
                                    ,[PURTJ].[TJ008]
                                    ,[PURTJ].[TJ009]
                                    ,[PURTJ].[TJ010]
                                    ,[PURTJ].[TJ011]
                                    ,[PURTJ].[TJ012]
                                    ,[PURTJ].[TJ013]
                                    ,[PURTJ].[TJ014]
                                    ,[PURTJ].[TJ015]
                                    ,[PURTJ].[TJ016]
                                    ,[PURTJ].[TJ017]
                                    ,[PURTJ].[TJ018]
                                    ,[PURTJ].[TJ019]
                                    ,[PURTJ].[TJ020]
                                    ,[PURTJ].[TJ021]
                                    ,[PURTJ].[TJ022]
                                    ,[PURTJ].[TJ023]
                                    ,[PURTJ].[TJ024]
                                    ,[PURTJ].[TJ025]
                                    ,[PURTJ].[TJ026]
                                    ,[PURTJ].[TJ027]
                                    ,[PURTJ].[TJ028]
                                    ,[PURTJ].[TJ029]
                                    ,[PURTJ].[TJ030]
                                    ,[PURTJ].[TJ031]
                                    ,[PURTJ].[TJ032]
                                    ,[PURTJ].[TJ033]
                                    ,[PURTJ].[TJ034]
                                    ,[PURTJ].[TJ035]
                                    ,[PURTJ].[TJ036]
                                    ,[PURTJ].[TJ037]
                                    ,[PURTJ].[TJ038]
                                    ,[PURTJ].[TJ039]
                                    ,[PURTJ].[TJ040]
                                    ,[PURTJ].[TJ041]
                                    ,[PURTJ].[TJ042]
                                    ,[PURTJ].[TJ043]
                                    ,[PURTJ].[TJ044]
                                    ,[PURTJ].[TJ045]
                                    ,[PURTJ].[TJ046]
                                    ,[PURTJ].[TJ047]
                                    ,[PURTJ].[TJ048]
                                    ,[PURTJ].[TJ049]
                                    ,[PURTJ].[TJ050]
                                    ,[PURTJ].[TJ051]
                                    ,[PURTJ].[TJ052]
                                    ,[PURTJ].[TJ053]
                                    ,[PURTJ].[TJ054]
                                    ,[PURTJ].[TJ055]
                                    ,[PURTJ].[TJ056]
                                    ,[PURTJ].[TJ057]
                                    ,[PURTJ].[TJ058]
                                    ,[PURTJ].[TJ059]
                                    ,[PURTJ].[TJ060]
                                    ,[PURTJ].[TJ061]
                                    ,[PURTJ].[TJ062]
                                    ,[PURTJ].[TJ063]
                                    ,[PURTJ].[TJ064]
                                    ,[PURTJ].[TJ065]
                                    ,[PURTJ].[TJ066]
                                    ,[PURTJ].[TJ067]
                                    ,[PURTJ].[TJ068]
                                    ,[PURTJ].[TJ069]
                                    ,[PURTJ].[TJ070]
                                    ,[PURTJ].[TJ071]
                                    ,[PURTJ].[TJ072]
                                    ,[PURTJ].[TJ073]
                                    ,[PURTJ].[TJ074]
                                    ,[PURTJ].[TJ075]
                                    ,[PURTJ].[TJ076]
                                    ,[PURTJ].[TJ077]
                                    ,[PURTJ].[TJ078]
                                    ,[PURTJ].[TJ079]
                                    ,[PURTJ].[TJ080]
                                    ,[PURTJ].[TJ081]
                                    ,[PURTJ].[UDF01] AS 'PURTJUDF01'
                                    ,[PURTJ].[UDF02] AS 'PURTJUDF02'
                                    ,[PURTJ].[UDF03] AS 'PURTJUDF03'
                                    ,[PURTJ].[UDF04] AS 'PURTJUDF04'
                                    ,[PURTJ].[UDF05] AS 'PURTJUDF05'
                                    ,[PURTJ].[UDF06] AS 'PURTJUDF06'
                                    ,[PURTJ].[UDF07] AS 'PURTJUDF07'
                                    ,[PURTJ].[UDF08] AS 'PURTJUDF08'
                                    ,[PURTJ].[UDF09] AS 'PURTJUDF09'
                                    ,[PURTJ].[UDF10] AS 'PURTJUDF10'
                                    ,[TB_EB_USER].USER_GUID,NAME
                                    ,(SELECT TOP 1 MV002 FROM [TK].dbo.CMSMV WHERE MV001=PURTJ.CREATOR) AS 'MV002'

                                    FROM [test0923].dbo.PURMA,[test0923].dbo.PURTI,[test0923].dbo.PURTJ
                                    LEFT JOIN [192.168.1.223].[UOF].[dbo].[TB_EB_USER] ON [TB_EB_USER].ACCOUNT= PURTJ.CREATOR COLLATE Chinese_Taiwan_Stroke_BIN
                                    WHERE 1=1
                                    AND TI001=TJ001 AND TI002=TJ002
                                    AND TI004=MA001
                                    AND TI001='{0}' AND TJ002='{1}'
                                    ) AS TEMP

                                    
                              
                                    ", TI001, TI002);


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    return ds1.Tables["ds1"];

                }
                else
                {
                    return null;
                }

            }
            catch
            {
                return null;
            }
            finally
            {
                sqlConn.Close();
            }
        }

        public void UPDATE_PURTI_UDF01()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dbconn"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sqlConn.Close();
                sqlConn.Open();
                tran = sqlConn.BeginTransaction();

                sbSql.Clear();

                sbSql.AppendFormat(@"
                                    UPDATE  [test0923].dbo.PURTI
                                    SET UDF01 = 'UOF'
                                    WHERE  UDF01 IN ('Y','y')

                                    ");

                cmd.Connection = sqlConn;
                cmd.CommandTimeout = 60;
                cmd.CommandText = sbSql.ToString();
                cmd.Transaction = tran;
                result = cmd.ExecuteNonQuery();

                if (result == 0)
                {
                    tran.Rollback();    //交易取消
                }
                else
                {
                    tran.Commit();      //執行交易  
                }

            }
            catch
            {

            }

            finally
            {
                sqlConn.Close();
            }
        }


        public void NEW_COPTGCOPTH()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp22"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                DataSet ds1 = new DataSet();
                SqlDataAdapter adapter1 = new SqlDataAdapter();
                SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();

                sbSql.Clear();
                sbSqlQuery.Clear();

                //TL006='N' AND (UDF01 IN ('Y','y') ) 
                sbSql.AppendFormat(@" 
                                    SELECT TG001,TG002,UDF01
                                    FROM [test0923].dbo.COPTG
                                    WHERE TG023='N'
                                    AND UDF03 IN ('Y','y')
                                    ORDER BY TG001,TG002


                                    ");

                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");


                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    foreach (DataRow dr in ds1.Tables["ds1"].Rows)
                    {
                        ADD_COPTGCOPTH_TB_WKF_EXTERNAL_TASK(dr["TG001"].ToString().Trim(), dr["TG002"].ToString().Trim());
                    }

                }
                else
                {

                }

            }
            catch
            {

            }
            finally
            {
                sqlConn.Close();
            }

            UPDATE_COPTG_UDF01();
        }
        public void ADD_COPTGCOPTH_TB_WKF_EXTERNAL_TASK(string TI001, string TI002)
        {

            DataTable DT = SEARCH_COPTG_COPTH(TI001, TI002);
            DataTable DTUPFDEP = SEARCHUOFDEP(DT.Rows[0]["CREATOR"].ToString());

            string account = DT.Rows[0]["CREATOR"].ToString();
            string groupId = DT.Rows[0]["GROUP_ID"].ToString();
            string jobTitleId = DT.Rows[0]["TITLE_ID"].ToString();
            string fillerName = DT.Rows[0]["MV002"].ToString();
            string fillerUserGuid = DT.Rows[0]["USER_GUID"].ToString();

            string DEPNAME = DTUPFDEP.Rows[0]["DEPNAME"].ToString();
            string DEPNO = DTUPFDEP.Rows[0]["DEPNO"].ToString();

            string EXTERNAL_FORM_NBR = DT.Rows[0]["TG001"].ToString().Trim() + DT.Rows[0]["TG002"].ToString().Trim();

            int rowscounts = 0;

            XmlDocument xmlDoc = new XmlDocument();
            //建立根節點
            XmlElement Form = xmlDoc.CreateElement("Form");

            //正式的id
            string PURTGID = SEARCHFORM_UOF_VERSION_ID("COP30.銷貨單");

            if (!string.IsNullOrEmpty(PURTGID))
            {
                Form.SetAttribute("formVersionId", PURTGID);
            }


            Form.SetAttribute("urgentLevel", "2");
            //加入節點底下
            xmlDoc.AppendChild(Form);

            ////建立節點Applicant
            XmlElement Applicant = xmlDoc.CreateElement("Applicant");
            Applicant.SetAttribute("account", account);
            Applicant.SetAttribute("groupId", groupId);
            Applicant.SetAttribute("jobTitleId", jobTitleId);
            //加入節點底下
            Form.AppendChild(Applicant);

            //建立節點 Comment
            XmlElement Comment = xmlDoc.CreateElement("Comment");
            Comment.InnerText = "申請者意見";
            //加入至節點底下
            Applicant.AppendChild(Comment);

            //建立節點 FormFieldValue
            XmlElement FormFieldValue = xmlDoc.CreateElement("FormFieldValue");
            //加入至節點底下
            Form.AppendChild(FormFieldValue);

            //建立節點FieldItem
            //ID 表單編號	
            XmlElement FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "ID");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TG001	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TG001");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TG001"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TG002	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TG002");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TG002"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            // 建立節點FieldItem
            //TG003	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TG003");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TG003"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            // 建立節點FieldItem
            //TG004	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TG004");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TG004"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            // 建立節點FieldItem
            //TG007	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TG007");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TG007"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            // 建立節點FieldItem
            //TG015	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TG015");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TG015"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            // 建立節點FieldItem
            //TG005	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TG005");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TG005"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            // 建立節點FieldItem
            //TG006	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TG006");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TG006"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            // 建立節點FieldItem
            //TG014	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TG014");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TG014"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            // 建立節點FieldItem
            //TG016	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TG016");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TG016"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            // 建立節點FieldItem
            //TG017	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TG017");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TG017"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            // 建立節點FieldItem
            //TG008	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TG008");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TG008"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);


            //DataGrid
            //建立節點FieldItem
            //COPTH
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "COPTH");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點 DataGrid
            XmlElement DataGrid = xmlDoc.CreateElement("DataGrid");
            //DataGrid 加入至 TB 節點底下
            XmlNode PURTD = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='COPTH']");
            PURTD.AppendChild(DataGrid);


            foreach (DataRow od in DT.Rows)
            {
                // 新增 Row
                XmlElement Row = xmlDoc.CreateElement("Row");
                Row.SetAttribute("order", (rowscounts).ToString());

                //Row	TH003
                XmlElement Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TH003");
                Cell.SetAttribute("fieldValue", od["TH003"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TH004
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TH004");
                Cell.SetAttribute("fieldValue", od["TH004"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TH005
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TH005");
                Cell.SetAttribute("fieldValue", od["TH005"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TH006
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TH006");
                Cell.SetAttribute("fieldValue", od["TH006"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TH007
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TH007");
                Cell.SetAttribute("fieldValue", od["TH007"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TH008
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TH008");
                Cell.SetAttribute("fieldValue", od["TH008"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TH024
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TH024");
                Cell.SetAttribute("fieldValue", od["TH024"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TH009
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TH009");
                Cell.SetAttribute("fieldValue", od["TH009"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TH012
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TH012");
                Cell.SetAttribute("fieldValue", od["TH012"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TH013
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TH013");
                Cell.SetAttribute("fieldValue", od["TH013"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TH037
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TH037");
                Cell.SetAttribute("fieldValue", od["TH037"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TH038
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TH038");
                Cell.SetAttribute("fieldValue", od["TH038"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TH014
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TH014");
                Cell.SetAttribute("fieldValue", od["TH014"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TH015
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TH015");
                Cell.SetAttribute("fieldValue", od["TH015"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TH016
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TH016");
                Cell.SetAttribute("fieldValue", od["TH016"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);               




                rowscounts = rowscounts + 1;

                //DataGrid PURTM
                XmlNode DataGridS = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='COPTH']/DataGrid");
                DataGridS.AppendChild(Row);

            }


            ////用ADDTACK，直接啟動起單
            //ADDTACK(Form);

            //ADD TO DB
            ////string connectionString = ConfigurationManager.ConnectionStrings["dbUOF"].ToString();

            //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
            //sqlConn = new SqlConnection(connectionString);

            //20210902密
            Class1 TKID = new Class1();//用new 建立類別實體
            SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

            //資料庫使用者密碼解密
            sqlsb.Password = TKID.Decryption(sqlsb.Password);
            sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

            String connectionString;
            sqlConn = new SqlConnection(sqlsb.ConnectionString);
            connectionString = sqlConn.ConnectionString.ToString();

            StringBuilder queryString = new StringBuilder();




            queryString.AppendFormat(@" INSERT INTO [{0}].dbo.TB_WKF_EXTERNAL_TASK
                                         (EXTERNAL_TASK_ID,FORM_INFO,STATUS,EXTERNAL_FORM_NBR)
                                        VALUES (NEWID(),@XML,2,'{1}')
                                        ", DBNAME, EXTERNAL_FORM_NBR);

            try
            {
                using (SqlConnection connection = new SqlConnection(connectionString))
                {

                    SqlCommand command = new SqlCommand(queryString.ToString(), connection);
                    command.Parameters.Add("@XML", SqlDbType.NVarChar).Value = Form.OuterXml;

                    command.Connection.Open();

                    int count = command.ExecuteNonQuery();

                    connection.Close();
                    connection.Dispose();

                }
            }
            catch
            {

            }
            finally
            {

            }
        }

        public DataTable SEARCH_COPTG_COPTH(string TG001, string TG002)
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);


                sbSql.Clear();
                sbSqlQuery.Clear();

                //庫存數量看LA009 IN ('20004','20006','20008','20019','20020'

                sbSql.AppendFormat(@"  
                                    
                                    SELECT *
                                    ,USER_GUID,NAME
                                    ,(SELECT TOP 1 GROUP_ID FROM [192.168.1.223].[UOF].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'GROUP_ID'
                                    ,(SELECT TOP 1 TITLE_ID FROM [192.168.1.223].[UOF].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'TITLE_ID'
                                    FROM 
                                    (
                                    SELECT 
                                     [COPTG].[COMPANY]
                                    ,[COPTG].[CREATOR]
                                    ,[COPTG].[USR_GROUP]
                                    ,[COPTG].[CREATE_DATE]
                                    ,[COPTG].[MODIFIER]
                                    ,[COPTG].[MODI_DATE]
                                    ,[COPTG].[FLAG]
                                    ,[COPTG].[CREATE_TIME]
                                    ,[COPTG].[MODI_TIME]
                                    ,[COPTG].[TRANS_TYPE]
                                    ,[COPTG].[TRANS_NAME]
                                    ,[COPTG].[sync_date]
                                    ,[COPTG].[sync_time]
                                    ,[COPTG].[sync_mark]
                                    ,[COPTG].[sync_count]
                                    ,[COPTG].[DataUser]
                                    ,[COPTG].[DataGroup]
                                    ,[COPTG].[TG001]
                                    ,[COPTG].[TG002]
                                    ,[COPTG].[TG003]
                                    ,[COPTG].[TG004]
                                    ,[COPTG].[TG005]
                                    ,[COPTG].[TG006]
                                    ,[COPTG].[TG007]
                                    ,[COPTG].[TG008]
                                    ,[COPTG].[TG009]
                                    ,[COPTG].[TG010]
                                    ,[COPTG].[TG011]
                                    ,[COPTG].[TG012]
                                    ,[COPTG].[TG013]
                                    ,[COPTG].[TG014]
                                    ,[COPTG].[TG015]
                                    ,[COPTG].[TG016]
                                    ,[COPTG].[TG017]
                                    ,[COPTG].[TG018]
                                    ,[COPTG].[TG019]
                                    ,[COPTG].[TG020]
                                    ,[COPTG].[TG021]
                                    ,[COPTG].[TG022]
                                    ,[COPTG].[TG023]
                                    ,[COPTG].[TG024]
                                    ,[COPTG].[TG025]
                                    ,[COPTG].[TG026]
                                    ,[COPTG].[TG027]
                                    ,[COPTG].[TG028]
                                    ,[COPTG].[TG029]
                                    ,[COPTG].[TG030]
                                    ,[COPTG].[TG031]
                                    ,[COPTG].[TG032]
                                    ,[COPTG].[TG033]
                                    ,[COPTG].[TG034]
                                    ,[COPTG].[TG035]
                                    ,[COPTG].[TG036]
                                    ,[COPTG].[TG037]
                                    ,[COPTG].[TG038]
                                    ,[COPTG].[TG039]
                                    ,[COPTG].[TG040]
                                    ,[COPTG].[TG041]
                                    ,[COPTG].[TG042]
                                    ,[COPTG].[TG043]
                                    ,[COPTG].[TG044]
                                    ,[COPTG].[TG045]
                                    ,[COPTG].[TG046]
                                    ,[COPTG].[TG047]
                                    ,[COPTG].[TG048]
                                    ,[COPTG].[TG049]
                                    ,[COPTG].[TG050]
                                    ,[COPTG].[TG051]
                                    ,[COPTG].[TG052]
                                    ,[COPTG].[TG053]
                                    ,[COPTG].[TG054]
                                    ,[COPTG].[TG055]
                                    ,[COPTG].[TG056]
                                    ,[COPTG].[TG057]
                                    ,[COPTG].[TG058]
                                    ,[COPTG].[TG059]
                                    ,[COPTG].[TG060]
                                    ,[COPTG].[TG061]
                                    ,[COPTG].[TG062]
                                    ,[COPTG].[TG063]
                                    ,[COPTG].[TG064]
                                    ,[COPTG].[TG065]
                                    ,[COPTG].[TG066]
                                    ,[COPTG].[TG067]
                                    ,[COPTG].[TG068]
                                    ,[COPTG].[TG069]
                                    ,[COPTG].[TG070]
                                    ,[COPTG].[TG071]
                                    ,[COPTG].[TG072]
                                    ,[COPTG].[TG073]
                                    ,[COPTG].[TG074]
                                    ,[COPTG].[TG075]
                                    ,[COPTG].[TG076]
                                    ,[COPTG].[TG077]
                                    ,[COPTG].[TG078]
                                    ,[COPTG].[TG079]
                                    ,[COPTG].[TG080]
                                    ,[COPTG].[TG081]
                                    ,[COPTG].[TG082]
                                    ,[COPTG].[TG083]
                                    ,[COPTG].[TG084]
                                    ,[COPTG].[TG085]
                                    ,[COPTG].[TG086]
                                    ,[COPTG].[TG087]
                                    ,[COPTG].[TG088]
                                    ,[COPTG].[TG089]
                                    ,[COPTG].[TG090]
                                    ,[COPTG].[TG091]
                                    ,[COPTG].[TG092]
                                    ,[COPTG].[TG093]
                                    ,[COPTG].[TG094]
                                    ,[COPTG].[TG095]
                                    ,[COPTG].[TG096]
                                    ,[COPTG].[TG097]
                                    ,[COPTG].[TG098]
                                    ,[COPTG].[TG099]
                                    ,[COPTG].[TG100]
                                    ,[COPTG].[TG101]
                                    ,[COPTG].[TG102]
                                    ,[COPTG].[TG103]
                                    ,[COPTG].[TG104]
                                    ,[COPTG].[TG105]
                                    ,[COPTG].[TG106]
                                    ,[COPTG].[TG107]
                                    ,[COPTG].[TG108]
                                    ,[COPTG].[TG109]
                                    ,[COPTG].[TG110]
                                    ,[COPTG].[TG111]
                                    ,[COPTG].[TG112]
                                    ,[COPTG].[TG113]
                                    ,[COPTG].[TG114]
                                    ,[COPTG].[TG115]
                                    ,[COPTG].[TG116]
                                    ,[COPTG].[TG117]
                                    ,[COPTG].[TG118]
                                    ,[COPTG].[TG119]
                                    ,[COPTG].[TG120]
                                    ,[COPTG].[TG121]
                                    ,[COPTG].[TG122]
                                    ,[COPTG].[TG123]
                                    ,[COPTG].[TG124]
                                    ,[COPTG].[TG125]
                                    ,[COPTG].[TG126]
                                    ,[COPTG].[TG127]
                                    ,[COPTG].[TG128]
                                    ,[COPTG].[TG129]
                                    ,[COPTG].[TG130]
                                    ,[COPTG].[TG131]
                                    ,[COPTG].[TG132]
                                    ,[COPTG].[TG133]
                                    ,[COPTG].[TG134]
                                    ,[COPTG].[TG135]
                                    ,[COPTG].[TG136]
                                    ,[COPTG].[TG137]
                                    ,[COPTG].[TG138]
                                    ,[COPTG].[TG139]
                                    ,[COPTG].[TG140]
                                    ,[COPTG].[TG141]
                                    ,[COPTG].[TG142]
                                    ,[COPTG].[TG143]
                                    ,[COPTG].[TG144]
                                    ,[COPTG].[TG145]
                                    ,[COPTG].[TG146]
                                    ,[COPTG].[TG147]
                                    ,[COPTG].[TG148]
                                    ,[COPTG].[TG149]
                                    ,[COPTG].[TG150]
                                    ,[COPTG].[TG151]
                                    ,[COPTG].[TG152]
                                    ,[COPTG].[TG153]
                                    ,[COPTG].[TG154]
                                    ,[COPTG].[TG155]
                                    ,[COPTG].[TG156]
                                    ,[COPTG].[TG157]
                                    ,[COPTG].[TG158]
                                    ,[COPTG].[TG159]
                                    ,[COPTG].[TG160]
                                    ,[COPTG].[TG161]
                                    ,[COPTG].[TG162]
                                    ,[COPTG].[TG163]
                                    ,[COPTG].[UDF01] AS 'COPTGUDF01'
                                    ,[COPTG].[UDF02] AS 'COPTGUDF02'
                                    ,[COPTG].[UDF03] AS 'COPTGUDF03'
                                    ,[COPTG].[UDF04] AS 'COPTGUDF04'
                                    ,[COPTG].[UDF05] AS 'COPTGUDF05'
                                    ,[COPTG].[UDF06] AS 'COPTGUDF06'
                                    ,[COPTG].[UDF07] AS 'COPTGUDF07'
                                    ,[COPTG].[UDF08] AS 'COPTGUDF08'
                                    ,[COPTG].[UDF09] AS 'COPTGUDF09'
                                    ,[COPTG].[UDF10] AS 'COPTGUDF10'
                                    ,[COPTH].[TH001]
                                    ,[COPTH].[TH002]
                                    ,[COPTH].[TH003]
                                    ,[COPTH].[TH004]
                                    ,[COPTH].[TH005]
                                    ,[COPTH].[TH006]
                                    ,[COPTH].[TH007]
                                    ,[COPTH].[TH008]
                                    ,[COPTH].[TH009]
                                    ,[COPTH].[TH010]
                                    ,[COPTH].[TH011]
                                    ,[COPTH].[TH012]
                                    ,[COPTH].[TH013]
                                    ,[COPTH].[TH014]
                                    ,[COPTH].[TH015]
                                    ,[COPTH].[TH016]
                                    ,[COPTH].[TH017]
                                    ,[COPTH].[TH018]
                                    ,[COPTH].[TH019]
                                    ,[COPTH].[TH020]
                                    ,[COPTH].[TH021]
                                    ,[COPTH].[TH022]
                                    ,[COPTH].[TH023]
                                    ,[COPTH].[TH024]
                                    ,[COPTH].[TH025]
                                    ,[COPTH].[TH026]
                                    ,[COPTH].[TH027]
                                    ,[COPTH].[TH028]
                                    ,[COPTH].[TH029]
                                    ,[COPTH].[TH030]
                                    ,[COPTH].[TH031]
                                    ,[COPTH].[TH032]
                                    ,[COPTH].[TH033]
                                    ,[COPTH].[TH034]
                                    ,[COPTH].[TH035]
                                    ,[COPTH].[TH036]
                                    ,[COPTH].[TH037]
                                    ,[COPTH].[TH038]
                                    ,[COPTH].[TH039]
                                    ,[COPTH].[TH040]
                                    ,[COPTH].[TH041]
                                    ,[COPTH].[TH042]
                                    ,[COPTH].[TH043]
                                    ,[COPTH].[TH044]
                                    ,[COPTH].[TH045]
                                    ,[COPTH].[TH046]
                                    ,[COPTH].[TH047]
                                    ,[COPTH].[TH048]
                                    ,[COPTH].[TH049]
                                    ,[COPTH].[TH050]
                                    ,[COPTH].[TH051]
                                    ,[COPTH].[TH052]
                                    ,[COPTH].[TH053]
                                    ,[COPTH].[TH054]
                                    ,[COPTH].[TH055]
                                    ,[COPTH].[TH056]
                                    ,[COPTH].[TH057]
                                    ,[COPTH].[TH058]
                                    ,[COPTH].[TH059]
                                    ,[COPTH].[TH060]
                                    ,[COPTH].[TH061]
                                    ,[COPTH].[TH062]
                                    ,[COPTH].[TH063]
                                    ,[COPTH].[TH064]
                                    ,[COPTH].[TH065]
                                    ,[COPTH].[TH066]
                                    ,[COPTH].[TH067]
                                    ,[COPTH].[TH068]
                                    ,[COPTH].[TH069]
                                    ,[COPTH].[TH070]
                                    ,[COPTH].[TH071]
                                    ,[COPTH].[TH072]
                                    ,[COPTH].[TH073]
                                    ,[COPTH].[TH074]
                                    ,[COPTH].[TH075]
                                    ,[COPTH].[TH076]
                                    ,[COPTH].[TH077]
                                    ,[COPTH].[TH078]
                                    ,[COPTH].[TH079]
                                    ,[COPTH].[TH080]
                                    ,[COPTH].[TH081]
                                    ,[COPTH].[TH082]
                                    ,[COPTH].[TH083]
                                    ,[COPTH].[TH084]
                                    ,[COPTH].[TH085]
                                    ,[COPTH].[TH086]
                                    ,[COPTH].[TH087]
                                    ,[COPTH].[TH088]
                                    ,[COPTH].[TH089]
                                    ,[COPTH].[TH090]
                                    ,[COPTH].[TH091]
                                    ,[COPTH].[TH092]
                                    ,[COPTH].[TH093]
                                    ,[COPTH].[TH094]
                                    ,[COPTH].[TH095]
                                    ,[COPTH].[TH096]
                                    ,[COPTH].[TH097]
                                    ,[COPTH].[TH098]
                                    ,[COPTH].[TH099]
                                    ,[COPTH].[TH100]
                                    ,[COPTH].[TH101]
                                    ,[COPTH].[TH102]
                                    ,[COPTH].[TH103]
                                    ,[COPTH].[TH104]
                                    ,[COPTH].[TH105]
                                    ,[COPTH].[TH106]
                                    ,[COPTH].[TH107]
                                    ,[COPTH].[TH108]
                                    ,[COPTH].[TH109]
                                    ,[COPTH].[TH110]
                                    ,[COPTH].[TH111]
                                    ,[COPTH].[TH112]
                                    ,[COPTH].[TH113]
                                    ,[COPTH].[TH114]
                                    ,[COPTH].[TH115]
                                    ,[COPTH].[TH116]
                                    ,[COPTH].[TH117]
                                    ,[COPTH].[TH118]
                                    ,[COPTH].[TH119]
                                    ,[COPTH].[TH120]
                                    ,[COPTH].[TH121]
                                    ,[COPTH].[TH122]
                                    ,[COPTH].[TH123]
                                    ,[COPTH].[TH124]
                                    ,[COPTH].[TH125]
                                    ,[COPTH].[TH126]
                                    ,[COPTH].[TH127]
                                    ,[COPTH].[UDF01] AS 'COPTHUDF01'
                                    ,[COPTH].[UDF02] AS 'COPTHUDF02'
                                    ,[COPTH].[UDF03] AS 'COPTHUDF03'
                                    ,[COPTH].[UDF04] AS 'COPTHUDF04'
                                    ,[COPTH].[UDF05] AS 'COPTHUDF05'
                                    ,[COPTH].[UDF06] AS 'COPTHUDF06'
                                    ,[COPTH].[UDF07] AS 'COPTHUDF07'
                                    ,[COPTH].[UDF08] AS 'COPTHUDF08'
                                    ,[COPTH].[UDF09] AS 'COPTHUDF09'
                                    ,[COPTH].[UDF10] AS 'COPTHUDF10'
                                    ,[TB_EB_USER].USER_GUID,NAME
                                    ,(SELECT TOP 1 MV002 FROM [TK].dbo.CMSMV WHERE MV001=COPTG.CREATOR) AS 'MV002'

                                    FROM [test0923].dbo.COPMA,[test0923].dbo.COPTG,[test0923].dbo.COPTH
                                    LEFT JOIN [192.168.1.223].[UOF].[dbo].[TB_EB_USER] ON [TB_EB_USER].ACCOUNT= COPTH.CREATOR COLLATE Chinese_Taiwan_Stroke_BIN
                                    WHERE 1=1
                                    AND TG001=TH001 AND TG002=TH002
                                    AND TG004=MA001
                                    AND TG001='{0}' AND TG002='{1}'
                                    ) AS TEMP
                                    
                              
                                    ", TG001, TG002);


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    return ds1.Tables["ds1"];

                }
                else
                {
                    return null;
                }

            }
            catch
            {
                return null;
            }
            finally
            {
                sqlConn.Close();
            }
        }

        public void UPDATE_COPTG_UDF01()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dbconn"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sqlConn.Close();
                sqlConn.Open();
                tran = sqlConn.BeginTransaction();

                sbSql.Clear();

                sbSql.AppendFormat(@"
                                    UPDATE  [test0923].dbo.COPTG
                                    SET UDF03 = 'UOF'
                                    WHERE  UDF03 IN ('Y','y')

                                    ");

                cmd.Connection = sqlConn;
                cmd.CommandTimeout = 60;
                cmd.CommandText = sbSql.ToString();
                cmd.Transaction = tran;
                result = cmd.ExecuteNonQuery();

                if (result == 0)
                {
                    tran.Rollback();    //交易取消
                }
                else
                {
                    tran.Commit();      //執行交易  
                }

            }
            catch
            {

            }

            finally
            {
                sqlConn.Close();
            }
        }

        public void NEW_COPTICOPTJ()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp22"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                DataSet ds1 = new DataSet();
                SqlDataAdapter adapter1 = new SqlDataAdapter();
                SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();

                sbSql.Clear();
                sbSqlQuery.Clear();

                //TL006='N' AND (UDF01 IN ('Y','y') ) 
                sbSql.AppendFormat(@" 
                                    SELECT TI001,TI002,UDF01
                                    FROM [test0923].dbo.COPTI
                                    WHERE TI019='N'
                                    AND UDF01 IN ('Y','y')
                                    ORDER BY TI001,TI002


                                    ");

                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");


                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    foreach (DataRow dr in ds1.Tables["ds1"].Rows)
                    {
                        ADD_COPTICOPTJ_TB_WKF_EXTERNAL_TASK(dr["TI001"].ToString().Trim(), dr["TI002"].ToString().Trim());
                    }

                }
                else
                {

                }

            }
            catch
            {

            }
            finally
            {
                sqlConn.Close();
            }

            UPDATE_COPTI_UDF01();
        }
        public void ADD_COPTICOPTJ_TB_WKF_EXTERNAL_TASK(string TI001, string TI002)
        {

            DataTable DT = SEARCH_COPTI_COPTJ(TI001, TI002);
            DataTable DTUPFDEP = SEARCHUOFDEP(DT.Rows[0]["CREATOR"].ToString());

            string account = DT.Rows[0]["CREATOR"].ToString();
            string groupId = DT.Rows[0]["GROUP_ID"].ToString();
            string jobTitleId = DT.Rows[0]["TITLE_ID"].ToString();
            string fillerName = DT.Rows[0]["MV002"].ToString();
            string fillerUserGuid = DT.Rows[0]["USER_GUID"].ToString();

            string DEPNAME = DTUPFDEP.Rows[0]["DEPNAME"].ToString();
            string DEPNO = DTUPFDEP.Rows[0]["DEPNO"].ToString();

            string EXTERNAL_FORM_NBR = DT.Rows[0]["TI001"].ToString().Trim() + DT.Rows[0]["TI002"].ToString().Trim();

            int rowscounts = 0;

            XmlDocument xmlDoc = new XmlDocument();
            //建立根節點
            XmlElement Form = xmlDoc.CreateElement("Form");

            //正式的id
            string PURTGID = SEARCHFORM_UOF_VERSION_ID("COP40.銷退單");

            if (!string.IsNullOrEmpty(PURTGID))
            {
                Form.SetAttribute("formVersionId", PURTGID);
            }


            Form.SetAttribute("urgentLevel", "2");
            //加入節點底下
            xmlDoc.AppendChild(Form);

            ////建立節點Applicant
            XmlElement Applicant = xmlDoc.CreateElement("Applicant");
            Applicant.SetAttribute("account", account);
            Applicant.SetAttribute("groupId", groupId);
            Applicant.SetAttribute("jobTitleId", jobTitleId);
            //加入節點底下
            Form.AppendChild(Applicant);

            //建立節點 Comment
            XmlElement Comment = xmlDoc.CreateElement("Comment");
            Comment.InnerText = "申請者意見";
            //加入至節點底下
            Applicant.AppendChild(Comment);

            //建立節點 FormFieldValue
            XmlElement FormFieldValue = xmlDoc.CreateElement("FormFieldValue");
            //加入至節點底下
            Form.AppendChild(FormFieldValue);

            //建立節點FieldItem
            //ID 表單編號	
            XmlElement FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "ID");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);


            //建立節點FieldItem
            //TI001	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TI001");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TI001"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TI002	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TI002");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TI002"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TI003	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TI003");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TI003"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TI004	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TI004");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TI004"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TI021	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TI021");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TI021"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TI015	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TI015");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TI015"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TI014	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TI014");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TI014"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TI017	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TI017");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TI017"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TI012	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TI012");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TI012"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TI013	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TI013");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TI013"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TI008	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TI008");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TI008"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TI009	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TI009");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TI009"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TI005	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TI005");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TI005"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TI006	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TI006");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TI006"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TI007	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TI007");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TI007"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TI020	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TI020");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TI020"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);


            //DataGrid
            //建立節點FieldItem
            //COPTJ
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "COPTJ");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點 DataGrid
            XmlElement DataGrid = xmlDoc.CreateElement("DataGrid");
            //DataGrid 加入至 TB 節點底下
            XmlNode PURTD = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='COPTJ']");
            PURTD.AppendChild(DataGrid);


            foreach (DataRow od in DT.Rows)
            {
                // 新增 Row
                XmlElement Row = xmlDoc.CreateElement("Row");
                Row.SetAttribute("order", (rowscounts).ToString());

                //Row	TJ003
                XmlElement Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TJ003");
                Cell.SetAttribute("fieldValue", od["TJ003"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TJ030
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TJ030");
                Cell.SetAttribute("fieldValue", od["TJ030"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TJ004
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TJ004");
                Cell.SetAttribute("fieldValue", od["TJ004"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TJ005
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TJ005");
                Cell.SetAttribute("fieldValue", od["TJ005"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TJ006
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TJ006");
                Cell.SetAttribute("fieldValue", od["TJ006"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TJ007
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TJ007");
                Cell.SetAttribute("fieldValue", od["TJ007"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TJ008
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TJ008");
                Cell.SetAttribute("fieldValue", od["TJ008"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TJ013
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TJ013");
                Cell.SetAttribute("fieldValue", od["TJ013"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TJ014
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TJ014");
                Cell.SetAttribute("fieldValue", od["TJ014"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TJ011
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TJ011");
                Cell.SetAttribute("fieldValue", od["TJ011"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TJ012
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TJ012");
                Cell.SetAttribute("fieldValue", od["TJ012"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TJ033
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TJ033");
                Cell.SetAttribute("fieldValue", od["TJ033"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TJ034
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TJ034");
                Cell.SetAttribute("fieldValue", od["TJ034"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TJ015
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TJ015");
                Cell.SetAttribute("fieldValue", od["TJ015"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TJ016
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TJ016");
                Cell.SetAttribute("fieldValue", od["TJ016"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TJ017
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TJ017");
                Cell.SetAttribute("fieldValue", od["TJ017"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TJ018
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TJ018");
                Cell.SetAttribute("fieldValue", od["TJ018"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TJ019
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TJ019");
                Cell.SetAttribute("fieldValue", od["TJ019"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TJ020
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TJ020");
                Cell.SetAttribute("fieldValue", od["TJ020"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);



                rowscounts = rowscounts + 1;

                //DataGrid PURTM
                XmlNode DataGridS = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='COPTJ']/DataGrid");
                DataGridS.AppendChild(Row);

            }


            ////用ADDTACK，直接啟動起單
            //ADDTACK(Form);

            //ADD TO DB
            ////string connectionString = ConfigurationManager.ConnectionStrings["dbUOF"].ToString();

            //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
            //sqlConn = new SqlConnection(connectionString);

            //20210902密
            Class1 TKID = new Class1();//用new 建立類別實體
            SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

            //資料庫使用者密碼解密
            sqlsb.Password = TKID.Decryption(sqlsb.Password);
            sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

            String connectionString;
            sqlConn = new SqlConnection(sqlsb.ConnectionString);
            connectionString = sqlConn.ConnectionString.ToString();

            StringBuilder queryString = new StringBuilder();




            queryString.AppendFormat(@" INSERT INTO [{0}].dbo.TB_WKF_EXTERNAL_TASK
                                         (EXTERNAL_TASK_ID,FORM_INFO,STATUS,EXTERNAL_FORM_NBR)
                                        VALUES (NEWID(),@XML,2,'{1}')
                                        ", DBNAME, EXTERNAL_FORM_NBR);

            try
            {
                using (SqlConnection connection = new SqlConnection(connectionString))
                {

                    SqlCommand command = new SqlCommand(queryString.ToString(), connection);
                    command.Parameters.Add("@XML", SqlDbType.NVarChar).Value = Form.OuterXml;

                    command.Connection.Open();

                    int count = command.ExecuteNonQuery();

                    connection.Close();
                    connection.Dispose();

                }
            }
            catch
            {

            }
            finally
            {

            }
        }

        public DataTable SEARCH_COPTI_COPTJ(string TI001, string TI002)
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);


                sbSql.Clear();
                sbSqlQuery.Clear();

                //庫存數量看LA009 IN ('20004','20006','20008','20019','20020'

                sbSql.AppendFormat(@"  
                                    
                                    SELECT *
                                    ,USER_GUID,NAME
                                    ,(SELECT TOP 1 GROUP_ID FROM [192.168.1.223].[UOF].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'GROUP_ID'
                                    ,(SELECT TOP 1 TITLE_ID FROM [192.168.1.223].[UOF].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'TITLE_ID'
                                    FROM 
                                    (
                                    SELECT 
                                    [COPTI].[COMPANY]
                                    ,[COPTI].[CREATOR]
                                    ,[COPTI].[USR_GROUP]
                                    ,[COPTI].[CREATE_DATE]
                                    ,[COPTI].[MODIFIER]
                                    ,[COPTI].[MODI_DATE]
                                    ,[COPTI].[FLAG]
                                    ,[COPTI].[CREATE_TIME]
                                    ,[COPTI].[MODI_TIME]
                                    ,[COPTI].[TRANS_TYPE]
                                    ,[COPTI].[TRANS_NAME]
                                    ,[COPTI].[sync_date]
                                    ,[COPTI].[sync_time]
                                    ,[COPTI].[sync_mark]
                                    ,[COPTI].[sync_count]
                                    ,[COPTI].[DataUser]
                                    ,[COPTI].[DataGroup]
                                    ,[COPTI].[TI001]
                                    ,[COPTI].[TI002]
                                    ,[COPTI].[TI003]
                                    ,[COPTI].[TI004]
                                    ,[COPTI].[TI005]
                                    ,[COPTI].[TI006]
                                    ,[COPTI].[TI007]
                                    ,[COPTI].[TI008]
                                    ,[COPTI].[TI009]
                                    ,[COPTI].[TI010]
                                    ,[COPTI].[TI011]
                                    ,[COPTI].[TI012]
                                    ,[COPTI].[TI013]
                                    ,[COPTI].[TI014]
                                    ,[COPTI].[TI015]
                                    ,[COPTI].[TI016]
                                    ,[COPTI].[TI017]
                                    ,[COPTI].[TI018]
                                    ,[COPTI].[TI019]
                                    ,[COPTI].[TI020]
                                    ,[COPTI].[TI021]
                                    ,[COPTI].[TI022]
                                    ,[COPTI].[TI023]
                                    ,[COPTI].[TI024]
                                    ,[COPTI].[TI025]
                                    ,[COPTI].[TI026]
                                    ,[COPTI].[TI027]
                                    ,[COPTI].[TI028]
                                    ,[COPTI].[TI029]
                                    ,[COPTI].[TI030]
                                    ,[COPTI].[TI031]
                                    ,[COPTI].[TI032]
                                    ,[COPTI].[TI033]
                                    ,[COPTI].[TI034]
                                    ,[COPTI].[TI035]
                                    ,[COPTI].[TI036]
                                    ,[COPTI].[TI037]
                                    ,[COPTI].[TI038]
                                    ,[COPTI].[TI039]
                                    ,[COPTI].[TI040]
                                    ,[COPTI].[TI041]
                                    ,[COPTI].[TI042]
                                    ,[COPTI].[TI043]
                                    ,[COPTI].[TI044]
                                    ,[COPTI].[TI045]
                                    ,[COPTI].[TI046]
                                    ,[COPTI].[TI047]
                                    ,[COPTI].[TI048]
                                    ,[COPTI].[TI049]
                                    ,[COPTI].[TI050]
                                    ,[COPTI].[TI051]
                                    ,[COPTI].[TI052]
                                    ,[COPTI].[TI053]
                                    ,[COPTI].[TI054]
                                    ,[COPTI].[TI055]
                                    ,[COPTI].[TI056]
                                    ,[COPTI].[TI057]
                                    ,[COPTI].[TI058]
                                    ,[COPTI].[TI059]
                                    ,[COPTI].[TI060]
                                    ,[COPTI].[TI061]
                                    ,[COPTI].[TI062]
                                    ,[COPTI].[TI063]
                                    ,[COPTI].[TI064]
                                    ,[COPTI].[TI065]
                                    ,[COPTI].[TI066]
                                    ,[COPTI].[TI067]
                                    ,[COPTI].[TI068]
                                    ,[COPTI].[TI069]
                                    ,[COPTI].[TI070]
                                    ,[COPTI].[TI071]
                                    ,[COPTI].[TI072]
                                    ,[COPTI].[TI073]
                                    ,[COPTI].[TI074]
                                    ,[COPTI].[TI075]
                                    ,[COPTI].[TI076]
                                    ,[COPTI].[TI077]
                                    ,[COPTI].[TI078]
                                    ,[COPTI].[TI079]
                                    ,[COPTI].[TI080]
                                    ,[COPTI].[TI081]
                                    ,[COPTI].[TI082]
                                    ,[COPTI].[TI083]
                                    ,[COPTI].[TI084]
                                    ,[COPTI].[TI085]
                                    ,[COPTI].[TI086]
                                    ,[COPTI].[TI087]
                                    ,[COPTI].[TI088]
                                    ,[COPTI].[TI089]
                                    ,[COPTI].[TI090]
                                    ,[COPTI].[TI091]
                                    ,[COPTI].[TI092]
                                    ,[COPTI].[TI093]
                                    ,[COPTI].[TI094]
                                    ,[COPTI].[TI095]
                                    ,[COPTI].[TI096]
                                    ,[COPTI].[TI097]
                                    ,[COPTI].[TI098]
                                    ,[COPTI].[TI099]
                                    ,[COPTI].[TI100]
                                    ,[COPTI].[TI101]
                                    ,[COPTI].[TI102]
                                    ,[COPTI].[TI103]
                                    ,[COPTI].[TI104]
                                    ,[COPTI].[TI105]
                                    ,[COPTI].[TI106]
                                    ,[COPTI].[TI107]
                                    ,[COPTI].[UDF01] AS 'COPTIUDF01'
                                    ,[COPTI].[UDF02] AS 'COPTIUDF02'
                                    ,[COPTI].[UDF03] AS 'COPTIUDF03'
                                    ,[COPTI].[UDF04] AS 'COPTIUDF04'
                                    ,[COPTI].[UDF05] AS 'COPTIUDF05'
                                    ,[COPTI].[UDF06] AS 'COPTIUDF06'
                                    ,[COPTI].[UDF07] AS 'COPTIUDF07'
                                    ,[COPTI].[UDF08] AS 'COPTIUDF08'
                                    ,[COPTI].[UDF09] AS 'COPTIUDF09'
                                    ,[COPTI].[UDF10] AS 'COPTIUDF10'
                                    ,[COPTJ].[TJ001]
                                    ,[COPTJ].[TJ002]
                                    ,[COPTJ].[TJ003]
                                    ,[COPTJ].[TJ004]
                                    ,[COPTJ].[TJ005]
                                    ,[COPTJ].[TJ006]
                                    ,[COPTJ].[TJ007]
                                    ,[COPTJ].[TJ008]
                                    ,[COPTJ].[TJ009]
                                    ,[COPTJ].[TJ010]
                                    ,[COPTJ].[TJ011]
                                    ,[COPTJ].[TJ012]
                                    ,[COPTJ].[TJ013]
                                    ,[COPTJ].[TJ014]
                                    ,[COPTJ].[TJ015]
                                    ,[COPTJ].[TJ016]
                                    ,[COPTJ].[TJ017]
                                    ,[COPTJ].[TJ018]
                                    ,[COPTJ].[TJ019]
                                    ,[COPTJ].[TJ020]
                                    ,[COPTJ].[TJ021]
                                    ,[COPTJ].[TJ022]
                                    ,[COPTJ].[TJ023]
                                    ,[COPTJ].[TJ024]
                                    ,[COPTJ].[TJ025]
                                    ,[COPTJ].[TJ026]
                                    ,[COPTJ].[TJ027]
                                    ,[COPTJ].[TJ028]
                                    ,[COPTJ].[TJ029]
                                    ,(CASE WHEN [COPTJ].[TJ030]='1' THEN '銷退'  WHEN [COPTJ].[TJ030]='2' THEN '折讓' ELSE [COPTJ].[TJ030]  END ) AS 'TJ030'
                                    ,[COPTJ].[TJ031]
                                    ,[COPTJ].[TJ032]
                                    ,[COPTJ].[TJ033]
                                    ,[COPTJ].[TJ034]
                                    ,[COPTJ].[TJ035]
                                    ,[COPTJ].[TJ036]
                                    ,[COPTJ].[TJ037]
                                    ,[COPTJ].[TJ038]
                                    ,[COPTJ].[TJ039]
                                    ,[COPTJ].[TJ040]
                                    ,[COPTJ].[TJ041]
                                    ,[COPTJ].[TJ042]
                                    ,[COPTJ].[TJ043]
                                    ,[COPTJ].[TJ044]
                                    ,[COPTJ].[TJ045]
                                    ,[COPTJ].[TJ046]
                                    ,[COPTJ].[TJ047]
                                    ,[COPTJ].[TJ048]
                                    ,[COPTJ].[TJ049]
                                    ,[COPTJ].[TJ050]
                                    ,[COPTJ].[TJ051]
                                    ,[COPTJ].[TJ052]
                                    ,[COPTJ].[TJ053]
                                    ,[COPTJ].[TJ054]
                                    ,[COPTJ].[TJ055]
                                    ,[COPTJ].[TJ056]
                                    ,[COPTJ].[TJ057]
                                    ,[COPTJ].[TJ058]
                                    ,[COPTJ].[TJ059]
                                    ,[COPTJ].[TJ060]
                                    ,[COPTJ].[TJ061]
                                    ,[COPTJ].[TJ062]
                                    ,[COPTJ].[TJ063]
                                    ,[COPTJ].[TJ064]
                                    ,[COPTJ].[TJ065]
                                    ,[COPTJ].[TJ066]
                                    ,[COPTJ].[TJ067]
                                    ,[COPTJ].[TJ068]
                                    ,[COPTJ].[TJ069]
                                    ,[COPTJ].[TJ070]
                                    ,[COPTJ].[TJ071]
                                    ,[COPTJ].[TJ072]
                                    ,[COPTJ].[TJ073]
                                    ,[COPTJ].[TJ074]
                                    ,[COPTJ].[TJ075]
                                    ,[COPTJ].[TJ076]
                                    ,[COPTJ].[TJ077]
                                    ,[COPTJ].[TJ078]
                                    ,[COPTJ].[TJ079]
                                    ,[COPTJ].[TJ080]
                                    ,[COPTJ].[TJ081]
                                    ,[COPTJ].[TJ082]
                                    ,[COPTJ].[TJ083]
                                    ,[COPTJ].[TJ084]
                                    ,[COPTJ].[TJ085]
                                    ,[COPTJ].[TJ086]
                                    ,[COPTJ].[TJ087]
                                    ,[COPTJ].[TJ088]
                                    ,[COPTJ].[TJ089]
                                    ,[COPTJ].[TJ090]
                                    ,[COPTJ].[TJ091]
                                    ,[COPTJ].[TJ092]
                                    ,[COPTJ].[TJ093]
                                    ,[COPTJ].[TJ094]
                                    ,[COPTJ].[TJ095]
                                    ,[COPTJ].[TJ096]
                                    ,[COPTJ].[TJ097]
                                    ,[COPTJ].[TJ098]
                                    ,[COPTJ].[TJ099]
                                    ,[COPTJ].[TJ100]
                                    ,[COPTJ].[TJ101]
                                    ,[COPTJ].[TJ102]
                                    ,[COPTJ].[TJ103]
                                    ,[COPTJ].[TJ104]
                                    ,[COPTJ].[TJ105]
                                    ,[COPTJ].[TJ106]
                                    ,[COPTJ].[TJ107]
                                    ,[COPTJ].[TJ108]
                                    ,[COPTJ].[TJ109]
                                    ,[COPTJ].[TJ110]
                                    ,[COPTJ].[UDF01]  AS 'COPTJUDF01'
                                    ,[COPTJ].[UDF02]  AS 'COPTJUDF02'
                                    ,[COPTJ].[UDF03]  AS 'COPTJUDF03'
                                    ,[COPTJ].[UDF04]  AS 'COPTJUDF04'
                                    ,[COPTJ].[UDF05]  AS 'COPTJUDF05'
                                    ,[COPTJ].[UDF06]  AS 'COPTJUDF06'
                                    ,[COPTJ].[UDF07]  AS 'COPTJUDF07'
                                    ,[COPTJ].[UDF08]  AS 'COPTJUDF08'
                                    ,[COPTJ].[UDF09]  AS 'COPTJUDF09'
                                    ,[COPTJ].[UDF10]  AS 'COPTJUDF10'
                                    ,[TB_EB_USER].USER_GUID,NAME
                                    ,(SELECT TOP 1 MV002 FROM [TK].dbo.CMSMV WHERE MV001=COPTI.CREATOR) AS 'MV002'

                                    FROM [test0923].dbo.COPMA,[test0923].dbo.COPTI,[test0923].dbo.COPTJ
                                    LEFT JOIN [192.168.1.223].[UOF].[dbo].[TB_EB_USER] ON [TB_EB_USER].ACCOUNT= COPTJ.CREATOR COLLATE Chinese_Taiwan_Stroke_BIN
                                    WHERE 1=1
                                    AND TI001=TJ001 AND TI002=TJ002
                                    AND TI004=MA001
                                    AND TI001='A240' AND TI002='20230330001'
                                    ) AS TEMP
                                    
                              
                                    ", TI001, TI002);


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    return ds1.Tables["ds1"];

                }
                else
                {
                    return null;
                }

            }
            catch
            {
                return null;
            }
            finally
            {
                sqlConn.Close();
            }
        }

        public void UPDATE_COPTI_UDF01()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dbconn"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sqlConn.Close();
                sqlConn.Open();
                tran = sqlConn.BeginTransaction();

                sbSql.Clear();

                sbSql.AppendFormat(@"
                                    UPDATE  [test0923].dbo.COPTI
                                    SET UDF01 = 'UOF'
                                    WHERE  UDF01 IN ('Y','y')

                                    ");

                cmd.Connection = sqlConn;
                cmd.CommandTimeout = 60;
                cmd.CommandText = sbSql.ToString();
                cmd.Transaction = tran;
                result = cmd.ExecuteNonQuery();

                if (result == 0)
                {
                    tran.Rollback();    //交易取消
                }
                else
                {
                    tran.Commit();      //執行交易  
                }

            }
            catch
            {

            }

            finally
            {
                sqlConn.Close();
            }
        }

        public void NEW_INVTAINVTB()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp22"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                DataSet ds1 = new DataSet();
                SqlDataAdapter adapter1 = new SqlDataAdapter();
                SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();

                sbSql.Clear();
                sbSqlQuery.Clear();

                //TL006='N' AND (UDF01 IN ('Y','y') ) 
                sbSql.AppendFormat(@" 
                                    SELECT TA001,TA002,UDF02
                                    FROM [test0923].dbo.INVTA
                                    WHERE TA006='N'
                                    AND TA009='11'
                                    AND UDF02 IN ('Y','y')
                                    ORDER BY TA001,TA002


                                    ");

                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");


                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    foreach (DataRow dr in ds1.Tables["ds1"].Rows)
                    {
                        ADD_INVTAINVTB_TB_WKF_EXTERNAL_TASK(dr["TA001"].ToString().Trim(), dr["TA002"].ToString().Trim());
                    }

                }
                else
                {

                }

            }
            catch
            {

            }
            finally
            {
                sqlConn.Close();
            }

            UPDATE_INVTA_UDF02();
        }
        public void ADD_INVTAINVTB_TB_WKF_EXTERNAL_TASK(string TA001, string TA002)
        {

            DataTable DT = SEARCH_INVTA_INVTB(TA001, TA002);
            DataTable DTUPFDEP = SEARCHUOFDEP(DT.Rows[0]["CREATOR"].ToString());

            string account = DT.Rows[0]["CREATOR"].ToString();
            string groupId = DT.Rows[0]["GROUP_ID"].ToString();
            string jobTitleId = DT.Rows[0]["TITLE_ID"].ToString();
            string fillerName = DT.Rows[0]["MV002"].ToString();
            string fillerUserGuid = DT.Rows[0]["USER_GUID"].ToString();

            string DEPNAME = DTUPFDEP.Rows[0]["DEPNAME"].ToString();
            string DEPNO = DTUPFDEP.Rows[0]["DEPNO"].ToString();

            string EXTERNAL_FORM_NBR = DT.Rows[0]["TA001"].ToString().Trim() + DT.Rows[0]["TA002"].ToString().Trim();

            int rowscounts = 0;

            XmlDocument xmlDoc = new XmlDocument();
            //建立根節點
            XmlElement Form = xmlDoc.CreateElement("Form");

            //正式的id
            string PURTGID = SEARCHFORM_UOF_VERSION_ID("INVI05.庫存異動單");

            if (!string.IsNullOrEmpty(PURTGID))
            {
                Form.SetAttribute("formVersionId", PURTGID);
            }


            Form.SetAttribute("urgentLevel", "2");
            //加入節點底下
            xmlDoc.AppendChild(Form);

            ////建立節點Applicant
            XmlElement Applicant = xmlDoc.CreateElement("Applicant");
            Applicant.SetAttribute("account", account);
            Applicant.SetAttribute("groupId", groupId);
            Applicant.SetAttribute("jobTitleId", jobTitleId);
            //加入節點底下
            Form.AppendChild(Applicant);

            //建立節點 Comment
            XmlElement Comment = xmlDoc.CreateElement("Comment");
            Comment.InnerText = "申請者意見";
            //加入至節點底下
            Applicant.AppendChild(Comment);

            //建立節點 FormFieldValue
            XmlElement FormFieldValue = xmlDoc.CreateElement("FormFieldValue");
            //加入至節點底下
            Form.AppendChild(FormFieldValue);

            //建立節點FieldItem
            //ID 表單編號	
            XmlElement FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "ID");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);


            //建立節點FieldItem
            //TA001	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA001");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA001"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //建立節點FieldItem

            //TA002	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA002");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA002"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TA003	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA003");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA003"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TA008	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA008");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA008"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TA004	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA004");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA004"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TA005	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA005");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA005"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TA011	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA011");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA011"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TA012	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA012");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA012"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);




            //DataGrid
            //建立節點FieldItem
            //INVTB
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "INVTB");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點 DataGrid
            XmlElement DataGrid = xmlDoc.CreateElement("DataGrid");
            //DataGrid 加入至 TB 節點底下
            XmlNode PURTD = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='INVTB']");
            PURTD.AppendChild(DataGrid);


            foreach (DataRow od in DT.Rows)
            {
                // 新增 Row
                XmlElement Row = xmlDoc.CreateElement("Row");
                Row.SetAttribute("order", (rowscounts).ToString());

                //Row	TB003
                XmlElement Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB003");
                Cell.SetAttribute("fieldValue", od["TB003"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB004
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB004");
                Cell.SetAttribute("fieldValue", od["TB004"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB005
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB005");
                Cell.SetAttribute("fieldValue", od["TB005"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB006
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB006");
                Cell.SetAttribute("fieldValue", od["TB006"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB007
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB007");
                Cell.SetAttribute("fieldValue", od["TB007"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB008
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB008");
                Cell.SetAttribute("fieldValue", od["TB008"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB012
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB012");
                Cell.SetAttribute("fieldValue", od["TB012"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB013
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB013");
                Cell.SetAttribute("fieldValue", od["TB013"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB014
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB014");
                Cell.SetAttribute("fieldValue", od["TB014"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB017
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB017");
                Cell.SetAttribute("fieldValue", od["TB017"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);




                rowscounts = rowscounts + 1;

                //DataGrid PURTM
                XmlNode DataGridS = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='INVTB']/DataGrid");
                DataGridS.AppendChild(Row);

            }


            ////用ADDTACK，直接啟動起單
            //ADDTACK(Form);

            //ADD TO DB
            ////string connectionString = ConfigurationManager.ConnectionStrings["dbUOF"].ToString();

            //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
            //sqlConn = new SqlConnection(connectionString);

            //20210902密
            Class1 TKID = new Class1();//用new 建立類別實體
            SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

            //資料庫使用者密碼解密
            sqlsb.Password = TKID.Decryption(sqlsb.Password);
            sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

            String connectionString;
            sqlConn = new SqlConnection(sqlsb.ConnectionString);
            connectionString = sqlConn.ConnectionString.ToString();

            StringBuilder queryString = new StringBuilder();




            queryString.AppendFormat(@" INSERT INTO [{0}].dbo.TB_WKF_EXTERNAL_TASK
                                         (EXTERNAL_TASK_ID,FORM_INFO,STATUS,EXTERNAL_FORM_NBR)
                                        VALUES (NEWID(),@XML,2,'{1}')
                                        ", DBNAME, EXTERNAL_FORM_NBR);

            try
            {
                using (SqlConnection connection = new SqlConnection(connectionString))
                {

                    SqlCommand command = new SqlCommand(queryString.ToString(), connection);
                    command.Parameters.Add("@XML", SqlDbType.NVarChar).Value = Form.OuterXml;

                    command.Connection.Open();

                    int count = command.ExecuteNonQuery();

                    connection.Close();
                    connection.Dispose();

                }
            }
            catch
            {

            }
            finally
            {

            }
        }

        public DataTable SEARCH_INVTA_INVTB(string TA001, string TA002)
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);


                sbSql.Clear();
                sbSqlQuery.Clear();

                //庫存數量看LA009 IN ('20004','20006','20008','20019','20020'

                sbSql.AppendFormat(@"  
                                    
                                    SELECT *
                                    ,USER_GUID,NAME
                                    ,(SELECT TOP 1 GROUP_ID FROM [192.168.1.223].[UOF].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'GROUP_ID'
                                    ,(SELECT TOP 1 TITLE_ID FROM [192.168.1.223].[UOF].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'TITLE_ID'
                                    FROM 
                                    (
                                    SELECT 
                                    [INVTA].[COMPANY]
                                    ,[INVTA].[CREATOR]
                                    ,[INVTA].[USR_GROUP]
                                    ,[INVTA].[CREATE_DATE]
                                    ,[INVTA].[MODIFIER]
                                    ,[INVTA].[MODI_DATE]
                                    ,[INVTA].[FLAG]
                                    ,[INVTA].[CREATE_TIME]
                                    ,[INVTA].[MODI_TIME]
                                    ,[INVTA].[TRANS_TYPE]
                                    ,[INVTA].[TRANS_NAME]
                                    ,[INVTA].[sync_date]
                                    ,[INVTA].[sync_time]
                                    ,[INVTA].[sync_mark]
                                    ,[INVTA].[sync_count]
                                    ,[INVTA].[DataUser]
                                    ,[INVTA].[DataGroup]
                                    ,[INVTA].[TA001]
                                    ,[INVTA].[TA002]
                                    ,[INVTA].[TA003]
                                    ,[INVTA].[TA004]
                                    ,[INVTA].[TA005]
                                    ,[INVTA].[TA006]
                                    ,[INVTA].[TA007]
                                    ,[INVTA].[TA008]
                                    ,[INVTA].[TA009]
                                    ,[INVTA].[TA010]
                                    ,[INVTA].[TA011]
                                    ,[INVTA].[TA012]
                                    ,[INVTA].[TA013]
                                    ,[INVTA].[TA014]
                                    ,[INVTA].[TA015]
                                    ,[INVTA].[TA016]
                                    ,[INVTA].[TA017]
                                    ,[INVTA].[TA018]
                                    ,[INVTA].[TA019]
                                    ,[INVTA].[TA020]
                                    ,[INVTA].[TA021]
                                    ,[INVTA].[TA022]
                                    ,[INVTA].[TA023]
                                    ,[INVTA].[TA024]
                                    ,[INVTA].[TA025]
                                    ,[INVTA].[TA026]
                                    ,[INVTA].[TA027]
                                    ,[INVTA].[TA028]
                                    ,[INVTA].[TA029]
                                    ,[INVTA].[TA030]
                                    ,[INVTA].[TA031]
                                    ,[INVTA].[TA032]
                                    ,[INVTA].[TA033]
                                    ,[INVTA].[TA034]
                                    ,[INVTA].[TA035]
                                    ,[INVTA].[TA036]
                                    ,[INVTA].[TA037]
                                    ,[INVTA].[TA038]
                                    ,[INVTA].[TA039]
                                    ,[INVTA].[TA040]
                                    ,[INVTA].[TA041]
                                    ,[INVTA].[TA042]
                                    ,[INVTA].[TA043]
                                    ,[INVTA].[TA044]
                                    ,[INVTA].[TA045]
                                    ,[INVTA].[TA046]
                                    ,[INVTA].[TA047]
                                    ,[INVTA].[TA048]
                                    ,[INVTA].[TA049]
                                    ,[INVTA].[TA050]
                                    ,[INVTA].[TA051]
                                    ,[INVTA].[TA052]
                                    ,[INVTA].[TA053]
                                    ,[INVTA].[TA054]
                                    ,[INVTA].[TA055]
                                    ,[INVTA].[TA056]
                                    ,[INVTA].[TA057]
                                    ,[INVTA].[TA058]
                                    ,[INVTA].[TA059]
                                    ,[INVTA].[TA060]
                                    ,[INVTA].[TA061]
                                    ,[INVTA].[TA062]
                                    ,[INVTA].[TA063]
                                    ,[INVTA].[TA064]
                                    ,[INVTA].[TA065]
                                    ,[INVTA].[TA066]
                                    ,[INVTA].[TA067]
                                    ,[INVTA].[TA068]
                                    ,[INVTA].[TA200]
                                    ,[INVTA].[UDF01] AS 'INVTAUDF01'
                                    ,[INVTA].[UDF02] AS 'INVTAUDF02'
                                    ,[INVTA].[UDF03] AS 'INVTAUDF03'
                                    ,[INVTA].[UDF04] AS 'INVTAUDF04'
                                    ,[INVTA].[UDF05] AS 'INVTAUDF05'
                                    ,[INVTA].[UDF06] AS 'INVTAUDF06'
                                    ,[INVTA].[UDF07] AS 'INVTAUDF07'
                                    ,[INVTA].[UDF08] AS 'INVTAUDF08'
                                    ,[INVTA].[UDF09] AS 'INVTAUDF09'
                                    ,[INVTA].[UDF10] AS 'INVTAUDF10'
                                    ,[INVTB].[TB001]
                                    ,[INVTB].[TB002]
                                    ,[INVTB].[TB003]
                                    ,[INVTB].[TB004]
                                    ,[INVTB].[TB005]
                                    ,[INVTB].[TB006]
                                    ,[INVTB].[TB007]
                                    ,[INVTB].[TB008]
                                    ,[INVTB].[TB009]
                                    ,[INVTB].[TB010]
                                    ,[INVTB].[TB011]
                                    ,[INVTB].[TB012]
                                    ,[INVTB].[TB013]
                                    ,[INVTB].[TB014]
                                    ,[INVTB].[TB015]
                                    ,[INVTB].[TB016]
                                    ,[INVTB].[TB017]
                                    ,[INVTB].[TB018]
                                    ,[INVTB].[TB019]
                                    ,[INVTB].[TB020]
                                    ,[INVTB].[TB021]
                                    ,[INVTB].[TB022]
                                    ,[INVTB].[TB023]
                                    ,[INVTB].[TB024]
                                    ,[INVTB].[TB025]
                                    ,[INVTB].[TB026]
                                    ,[INVTB].[TB027]
                                    ,[INVTB].[TB028]
                                    ,[INVTB].[TB029]
                                    ,[INVTB].[TB030]
                                    ,[INVTB].[TB031]
                                    ,[INVTB].[TB032]
                                    ,[INVTB].[TB033]
                                    ,[INVTB].[TB034]
                                    ,[INVTB].[TB035]
                                    ,[INVTB].[TB036]
                                    ,[INVTB].[TB037]
                                    ,[INVTB].[TB038]
                                    ,[INVTB].[TB039]
                                    ,[INVTB].[TB040]
                                    ,[INVTB].[TB041]
                                    ,[INVTB].[TB042]
                                    ,[INVTB].[TB043]
                                    ,[INVTB].[TB044]
                                    ,[INVTB].[TB045]
                                    ,[INVTB].[TB046]
                                    ,[INVTB].[TB047]
                                    ,[INVTB].[TB048]
                                    ,[INVTB].[TB049]
                                    ,[INVTB].[TB050]
                                    ,[INVTB].[TB051]
                                    ,[INVTB].[TB052]
                                    ,[INVTB].[TB053]
                                    ,[INVTB].[TB054]
                                    ,[INVTB].[TB055]
                                    ,[INVTB].[TB056]
                                    ,[INVTB].[TB057]
                                    ,[INVTB].[TB058]
                                    ,[INVTB].[TB059]
                                    ,[INVTB].[TB060]
                                    ,[INVTB].[TB061]
                                    ,[INVTB].[TB062]
                                    ,[INVTB].[TB063]
                                    ,[INVTB].[TB064]
                                    ,[INVTB].[TB065]
                                    ,[INVTB].[TB066]
                                    ,[INVTB].[TB067]
                                    ,[INVTB].[TB068]
                                    ,[INVTB].[TB069]
                                    ,[INVTB].[TB070]
                                    ,[INVTB].[TB071]
                                    ,[INVTB].[TB072]
                                    ,[INVTB].[TB073]
                                    ,[INVTB].[UDF01] AS 'INVTBUDF01'
                                    ,[INVTB].[UDF02] AS 'INVTBUDF02'
                                    ,[INVTB].[UDF03] AS 'INVTBUDF03'
                                    ,[INVTB].[UDF04] AS 'INVTBUDF04'
                                    ,[INVTB].[UDF05] AS 'INVTBUDF05'
                                    ,[INVTB].[UDF06] AS 'INVTBUDF06'
                                    ,[INVTB].[UDF07] AS 'INVTBUDF07'
                                    ,[INVTB].[UDF08] AS 'INVTBUDF08'
                                    ,[INVTB].[UDF09] AS 'INVTBUDF09'
                                    ,[INVTB].[UDF10] AS 'INVTBUDF10'

                                    ,[TB_EB_USER].USER_GUID,NAME
                                    ,(SELECT TOP 1 MV002 FROM [TK].dbo.CMSMV WHERE MV001=INVTA.CREATOR) AS 'MV002'

                                    FROM [test0923].dbo.INVTB,[test0923].dbo.INVTA
                                    LEFT JOIN [192.168.1.223].[UOF].[dbo].[TB_EB_USER] ON [TB_EB_USER].ACCOUNT=INVTA.CREATOR COLLATE Chinese_Taiwan_Stroke_BIN
                                    WHERE 1=1
                                    AND TA001=TB001 AND TA002=TB002
                                    AND TA001='{0}' AND TA002='{1}'
                                    ) AS TEMP
                                    
                              
                                    ", TA001, TA002);


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    return ds1.Tables["ds1"];

                }
                else
                {
                    return null;
                }

            }
            catch
            {
                return null;
            }
            finally
            {
                sqlConn.Close();
            }
        }

        public void UPDATE_INVTA_UDF02()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dbconn"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sqlConn.Close();
                sqlConn.Open();
                tran = sqlConn.BeginTransaction();

                sbSql.Clear();

                sbSql.AppendFormat(@"
                                    UPDATE  [test0923].dbo.INVTA
                                    SET UDF02 = 'UOF'
                                    AND TA009='12'
                                    WHERE  UDF02 IN ('Y','y')

                                    ");

                cmd.Connection = sqlConn;
                cmd.CommandTimeout = 60;
                cmd.CommandText = sbSql.ToString();
                cmd.Transaction = tran;
                result = cmd.ExecuteNonQuery();

                if (result == 0)
                {
                    tran.Rollback();    //交易取消
                }
                else
                {
                    tran.Commit();      //執行交易  
                }

            }
            catch
            {

            }

            finally
            {
                sqlConn.Close();
            }
        }

        public void NEW_INVTAINVTB_TRANS()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp22"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                DataSet ds1 = new DataSet();
                SqlDataAdapter adapter1 = new SqlDataAdapter();
                SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();

                sbSql.Clear();
                sbSqlQuery.Clear();

                //TL006='N' AND (UDF01 IN ('Y','y') ) 
                sbSql.AppendFormat(@" 
                                    SELECT TA001,TA002,UDF01
                                    FROM [test0923].dbo.INVTA
                                    WHERE TA006='N'
                                    AND TA009='12'
                                    AND UDF01 IN ('Y','y')
                                    ORDER BY TA001,TA002


                                    ");

                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");


                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    foreach (DataRow dr in ds1.Tables["ds1"].Rows)
                    {
                        ADD_INVTAINVTB_TB_WKF_EXTERNAL_TASK_TRANS(dr["TA001"].ToString().Trim(), dr["TA002"].ToString().Trim());
                    }

                }
                else
                {

                }

            }
            catch
            {

            }
            finally
            {
                sqlConn.Close();
            }

            UPDATE_INVTA_UDF01_TRANS();
        }
        public void ADD_INVTAINVTB_TB_WKF_EXTERNAL_TASK_TRANS(string TA001, string TA002)
        {

            DataTable DT = SEARCH_INVTA_INVTB_TRANS(TA001, TA002);
            DataTable DTUPFDEP = SEARCHUOFDEP(DT.Rows[0]["CREATOR"].ToString());

            string account = DT.Rows[0]["CREATOR"].ToString();
            string groupId = DT.Rows[0]["GROUP_ID"].ToString();
            string jobTitleId = DT.Rows[0]["TITLE_ID"].ToString();
            string fillerName = DT.Rows[0]["MV002"].ToString();
            string fillerUserGuid = DT.Rows[0]["USER_GUID"].ToString();

            string DEPNAME = DTUPFDEP.Rows[0]["DEPNAME"].ToString();
            string DEPNO = DTUPFDEP.Rows[0]["DEPNO"].ToString();

            string EXTERNAL_FORM_NBR = DT.Rows[0]["TA001"].ToString().Trim() + DT.Rows[0]["TA002"].ToString().Trim();

            int rowscounts = 0;

            XmlDocument xmlDoc = new XmlDocument();
            //建立根節點
            XmlElement Form = xmlDoc.CreateElement("Form");

            //正式的id
            string PURTGID = SEARCHFORM_UOF_VERSION_ID("INVI08.轉撥單");

            if (!string.IsNullOrEmpty(PURTGID))
            {
                Form.SetAttribute("formVersionId", PURTGID);
            }


            Form.SetAttribute("urgentLevel", "2");
            //加入節點底下
            xmlDoc.AppendChild(Form);

            ////建立節點Applicant
            XmlElement Applicant = xmlDoc.CreateElement("Applicant");
            Applicant.SetAttribute("account", account);
            Applicant.SetAttribute("groupId", groupId);
            Applicant.SetAttribute("jobTitleId", jobTitleId);
            //加入節點底下
            Form.AppendChild(Applicant);

            //建立節點 Comment
            XmlElement Comment = xmlDoc.CreateElement("Comment");
            Comment.InnerText = "申請者意見";
            //加入至節點底下
            Applicant.AppendChild(Comment);

            //建立節點 FormFieldValue
            XmlElement FormFieldValue = xmlDoc.CreateElement("FormFieldValue");
            //加入至節點底下
            Form.AppendChild(FormFieldValue);

            //建立節點FieldItem
            //ID 表單編號	
            XmlElement FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "ID");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);


            //建立節點FieldItem
            //TA001	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA001");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA001"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //建立節點FieldItem

            //TA002	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA002");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA002"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TA003	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA003");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA003"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TA008	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA008");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA008"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TA004	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA004");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA004"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TA005	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA005");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA005"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TA011	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA011");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA011"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TA012	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TA012");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TA012"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);




            //DataGrid
            //建立節點FieldItem
            //INVTB
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "INVTB");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點 DataGrid
            XmlElement DataGrid = xmlDoc.CreateElement("DataGrid");
            //DataGrid 加入至 TB 節點底下
            XmlNode PURTD = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='INVTB']");
            PURTD.AppendChild(DataGrid);


            foreach (DataRow od in DT.Rows)
            {
                // 新增 Row
                XmlElement Row = xmlDoc.CreateElement("Row");
                Row.SetAttribute("order", (rowscounts).ToString());

                //Row	TB003
                XmlElement Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB003");
                Cell.SetAttribute("fieldValue", od["TB003"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB004
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB004");
                Cell.SetAttribute("fieldValue", od["TB004"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB005
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB005");
                Cell.SetAttribute("fieldValue", od["TB005"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB006
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB006");
                Cell.SetAttribute("fieldValue", od["TB006"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB007
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB007");
                Cell.SetAttribute("fieldValue", od["TB007"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB008
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB008");
                Cell.SetAttribute("fieldValue", od["TB008"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB012
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB012");
                Cell.SetAttribute("fieldValue", od["TB012"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB013
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB013");
                Cell.SetAttribute("fieldValue", od["TB013"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB014
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB014");
                Cell.SetAttribute("fieldValue", od["TB014"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TB017
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TB017");
                Cell.SetAttribute("fieldValue", od["TB017"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);




                rowscounts = rowscounts + 1;

                //DataGrid PURTM
                XmlNode DataGridS = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='INVTB']/DataGrid");
                DataGridS.AppendChild(Row);

            }


            ////用ADDTACK，直接啟動起單
            //ADDTACK(Form);

            //ADD TO DB
            ////string connectionString = ConfigurationManager.ConnectionStrings["dbUOF"].ToString();

            //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
            //sqlConn = new SqlConnection(connectionString);

            //20210902密
            Class1 TKID = new Class1();//用new 建立類別實體
            SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

            //資料庫使用者密碼解密
            sqlsb.Password = TKID.Decryption(sqlsb.Password);
            sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

            String connectionString;
            sqlConn = new SqlConnection(sqlsb.ConnectionString);
            connectionString = sqlConn.ConnectionString.ToString();

            StringBuilder queryString = new StringBuilder();




            queryString.AppendFormat(@" INSERT INTO [{0}].dbo.TB_WKF_EXTERNAL_TASK
                                         (EXTERNAL_TASK_ID,FORM_INFO,STATUS,EXTERNAL_FORM_NBR)
                                        VALUES (NEWID(),@XML,2,'{1}')
                                        ", DBNAME, EXTERNAL_FORM_NBR);

            try
            {
                using (SqlConnection connection = new SqlConnection(connectionString))
                {

                    SqlCommand command = new SqlCommand(queryString.ToString(), connection);
                    command.Parameters.Add("@XML", SqlDbType.NVarChar).Value = Form.OuterXml;

                    command.Connection.Open();

                    int count = command.ExecuteNonQuery();

                    connection.Close();
                    connection.Dispose();

                }
            }
            catch
            {

            }
            finally
            {

            }
        }

        public DataTable SEARCH_INVTA_INVTB_TRANS(string TA001, string TA002)
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);


                sbSql.Clear();
                sbSqlQuery.Clear();

                //庫存數量看LA009 IN ('20004','20006','20008','20019','20020'

                sbSql.AppendFormat(@"  
                                    
                                    SELECT *
                                    ,USER_GUID,NAME
                                    ,(SELECT TOP 1 GROUP_ID FROM [192.168.1.223].[UOF].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'GROUP_ID'
                                    ,(SELECT TOP 1 TITLE_ID FROM [192.168.1.223].[UOF].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'TITLE_ID'
                                    FROM 
                                    (
                                    SELECT 
                                    [INVTA].[COMPANY]
                                    ,[INVTA].[CREATOR]
                                    ,[INVTA].[USR_GROUP]
                                    ,[INVTA].[CREATE_DATE]
                                    ,[INVTA].[MODIFIER]
                                    ,[INVTA].[MODI_DATE]
                                    ,[INVTA].[FLAG]
                                    ,[INVTA].[CREATE_TIME]
                                    ,[INVTA].[MODI_TIME]
                                    ,[INVTA].[TRANS_TYPE]
                                    ,[INVTA].[TRANS_NAME]
                                    ,[INVTA].[sync_date]
                                    ,[INVTA].[sync_time]
                                    ,[INVTA].[sync_mark]
                                    ,[INVTA].[sync_count]
                                    ,[INVTA].[DataUser]
                                    ,[INVTA].[DataGroup]
                                    ,[INVTA].[TA001]
                                    ,[INVTA].[TA002]
                                    ,[INVTA].[TA003]
                                    ,[INVTA].[TA004]
                                    ,[INVTA].[TA005]
                                    ,[INVTA].[TA006]
                                    ,[INVTA].[TA007]
                                    ,[INVTA].[TA008]
                                    ,[INVTA].[TA009]
                                    ,[INVTA].[TA010]
                                    ,[INVTA].[TA011]
                                    ,[INVTA].[TA012]
                                    ,[INVTA].[TA013]
                                    ,[INVTA].[TA014]
                                    ,[INVTA].[TA015]
                                    ,[INVTA].[TA016]
                                    ,[INVTA].[TA017]
                                    ,[INVTA].[TA018]
                                    ,[INVTA].[TA019]
                                    ,[INVTA].[TA020]
                                    ,[INVTA].[TA021]
                                    ,[INVTA].[TA022]
                                    ,[INVTA].[TA023]
                                    ,[INVTA].[TA024]
                                    ,[INVTA].[TA025]
                                    ,[INVTA].[TA026]
                                    ,[INVTA].[TA027]
                                    ,[INVTA].[TA028]
                                    ,[INVTA].[TA029]
                                    ,[INVTA].[TA030]
                                    ,[INVTA].[TA031]
                                    ,[INVTA].[TA032]
                                    ,[INVTA].[TA033]
                                    ,[INVTA].[TA034]
                                    ,[INVTA].[TA035]
                                    ,[INVTA].[TA036]
                                    ,[INVTA].[TA037]
                                    ,[INVTA].[TA038]
                                    ,[INVTA].[TA039]
                                    ,[INVTA].[TA040]
                                    ,[INVTA].[TA041]
                                    ,[INVTA].[TA042]
                                    ,[INVTA].[TA043]
                                    ,[INVTA].[TA044]
                                    ,[INVTA].[TA045]
                                    ,[INVTA].[TA046]
                                    ,[INVTA].[TA047]
                                    ,[INVTA].[TA048]
                                    ,[INVTA].[TA049]
                                    ,[INVTA].[TA050]
                                    ,[INVTA].[TA051]
                                    ,[INVTA].[TA052]
                                    ,[INVTA].[TA053]
                                    ,[INVTA].[TA054]
                                    ,[INVTA].[TA055]
                                    ,[INVTA].[TA056]
                                    ,[INVTA].[TA057]
                                    ,[INVTA].[TA058]
                                    ,[INVTA].[TA059]
                                    ,[INVTA].[TA060]
                                    ,[INVTA].[TA061]
                                    ,[INVTA].[TA062]
                                    ,[INVTA].[TA063]
                                    ,[INVTA].[TA064]
                                    ,[INVTA].[TA065]
                                    ,[INVTA].[TA066]
                                    ,[INVTA].[TA067]
                                    ,[INVTA].[TA068]
                                    ,[INVTA].[TA200]
                                    ,[INVTA].[UDF01] AS 'INVTAUDF01'
                                    ,[INVTA].[UDF02] AS 'INVTAUDF02'
                                    ,[INVTA].[UDF03] AS 'INVTAUDF03'
                                    ,[INVTA].[UDF04] AS 'INVTAUDF04'
                                    ,[INVTA].[UDF05] AS 'INVTAUDF05'
                                    ,[INVTA].[UDF06] AS 'INVTAUDF06'
                                    ,[INVTA].[UDF07] AS 'INVTAUDF07'
                                    ,[INVTA].[UDF08] AS 'INVTAUDF08'
                                    ,[INVTA].[UDF09] AS 'INVTAUDF09'
                                    ,[INVTA].[UDF10] AS 'INVTAUDF10'
                                    ,[INVTB].[TB001]
                                    ,[INVTB].[TB002]
                                    ,[INVTB].[TB003]
                                    ,[INVTB].[TB004]
                                    ,[INVTB].[TB005]
                                    ,[INVTB].[TB006]
                                    ,[INVTB].[TB007]
                                    ,[INVTB].[TB008]
                                    ,[INVTB].[TB009]
                                    ,[INVTB].[TB010]
                                    ,[INVTB].[TB011]
                                    ,[INVTB].[TB012]
                                    ,[INVTB].[TB013]
                                    ,[INVTB].[TB014]
                                    ,[INVTB].[TB015]
                                    ,[INVTB].[TB016]
                                    ,[INVTB].[TB017]
                                    ,[INVTB].[TB018]
                                    ,[INVTB].[TB019]
                                    ,[INVTB].[TB020]
                                    ,[INVTB].[TB021]
                                    ,[INVTB].[TB022]
                                    ,[INVTB].[TB023]
                                    ,[INVTB].[TB024]
                                    ,[INVTB].[TB025]
                                    ,[INVTB].[TB026]
                                    ,[INVTB].[TB027]
                                    ,[INVTB].[TB028]
                                    ,[INVTB].[TB029]
                                    ,[INVTB].[TB030]
                                    ,[INVTB].[TB031]
                                    ,[INVTB].[TB032]
                                    ,[INVTB].[TB033]
                                    ,[INVTB].[TB034]
                                    ,[INVTB].[TB035]
                                    ,[INVTB].[TB036]
                                    ,[INVTB].[TB037]
                                    ,[INVTB].[TB038]
                                    ,[INVTB].[TB039]
                                    ,[INVTB].[TB040]
                                    ,[INVTB].[TB041]
                                    ,[INVTB].[TB042]
                                    ,[INVTB].[TB043]
                                    ,[INVTB].[TB044]
                                    ,[INVTB].[TB045]
                                    ,[INVTB].[TB046]
                                    ,[INVTB].[TB047]
                                    ,[INVTB].[TB048]
                                    ,[INVTB].[TB049]
                                    ,[INVTB].[TB050]
                                    ,[INVTB].[TB051]
                                    ,[INVTB].[TB052]
                                    ,[INVTB].[TB053]
                                    ,[INVTB].[TB054]
                                    ,[INVTB].[TB055]
                                    ,[INVTB].[TB056]
                                    ,[INVTB].[TB057]
                                    ,[INVTB].[TB058]
                                    ,[INVTB].[TB059]
                                    ,[INVTB].[TB060]
                                    ,[INVTB].[TB061]
                                    ,[INVTB].[TB062]
                                    ,[INVTB].[TB063]
                                    ,[INVTB].[TB064]
                                    ,[INVTB].[TB065]
                                    ,[INVTB].[TB066]
                                    ,[INVTB].[TB067]
                                    ,[INVTB].[TB068]
                                    ,[INVTB].[TB069]
                                    ,[INVTB].[TB070]
                                    ,[INVTB].[TB071]
                                    ,[INVTB].[TB072]
                                    ,[INVTB].[TB073]
                                    ,[INVTB].[UDF01] AS 'INVTBUDF01'
                                    ,[INVTB].[UDF02] AS 'INVTBUDF02'
                                    ,[INVTB].[UDF03] AS 'INVTBUDF03'
                                    ,[INVTB].[UDF04] AS 'INVTBUDF04'
                                    ,[INVTB].[UDF05] AS 'INVTBUDF05'
                                    ,[INVTB].[UDF06] AS 'INVTBUDF06'
                                    ,[INVTB].[UDF07] AS 'INVTBUDF07'
                                    ,[INVTB].[UDF08] AS 'INVTBUDF08'
                                    ,[INVTB].[UDF09] AS 'INVTBUDF09'
                                    ,[INVTB].[UDF10] AS 'INVTBUDF10'

                                    ,[TB_EB_USER].USER_GUID,NAME
                                    ,(SELECT TOP 1 MV002 FROM [TK].dbo.CMSMV WHERE MV001=INVTA.CREATOR) AS 'MV002'

                                    FROM [test0923].dbo.INVTB,[test0923].dbo.INVTA
                                    LEFT JOIN [192.168.1.223].[UOF].[dbo].[TB_EB_USER] ON [TB_EB_USER].ACCOUNT=INVTA.CREATOR COLLATE Chinese_Taiwan_Stroke_BIN
                                    WHERE 1=1
                                    AND TA001=TB001 AND TA002=TB002
                                    AND TA001='{0}' AND TA002='{1}'
                                    ) AS TEMP
                                    
                              
                                    ", TA001, TA002);


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    return ds1.Tables["ds1"];

                }
                else
                {
                    return null;
                }

            }
            catch
            {
                return null;
            }
            finally
            {
                sqlConn.Close();
            }
        }

        public void UPDATE_INVTA_UDF01_TRANS()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dbconn"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sqlConn.Close();
                sqlConn.Open();
                tran = sqlConn.BeginTransaction();

                sbSql.Clear();

                sbSql.AppendFormat(@"
                                    UPDATE  [test0923].dbo.INVTA
                                    SET UDF01 = 'UOF' 
                                    AND TA009='12'
                                    WHERE  UDF01 IN ('Y','y')

                                    ");

                cmd.Connection = sqlConn;
                cmd.CommandTimeout = 60;
                cmd.CommandText = sbSql.ToString();
                cmd.Transaction = tran;
                result = cmd.ExecuteNonQuery();

                if (result == 0)
                {
                    tran.Rollback();    //交易取消
                }
                else
                {
                    tran.Commit();      //執行交易  
                }

            }
            catch
            {

            }

            finally
            {
                sqlConn.Close();
            }
        }

        public void NEWTBUOFQC1001()
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            string THISYEARS = DateTime.Now.ToString("yyyy");
            //取西元年後2位
            THISYEARS = THISYEARS.Substring(2, 2);
            //THISYEARS = "21";
            string THISYEARSDAYS = DateTime.Now.ToString("yyyy") + "0101";
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sbSql.Clear();
                sbSqlQuery.Clear();



                //核準過TASK_RESULT='0'
                //AND DOC_NBR  LIKE 'QC1002{0}%'

                sbSql.AppendFormat(@"  
                                    SELECT DOC_NBR,*
                                    FROM [UOF].dbo.TB_WKF_TASK
                                    WHERE 1=1
                                    AND TASK_STATUS='2'
                                    AND TASK_RESULT='0'
                                    AND DOC_NBR  LIKE 'QC1001%'
                                    AND DOC_NBR >='QC1001230300009'
                                    AND CONVERT(NVARCHAR,BEGIN_TIME,112)>='{0}'
                                    AND DOC_NBR COLLATE Chinese_Taiwan_Stroke_BIN NOT IN (SELECT  [QCFrm001SN] FROM [192.168.1.105].[TKQC].[dbo].[TBUOFQC1001])
                                                                    

                                    ORDER BY BEGIN_TIME
                                    ", THISYEARSDAYS);


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    foreach (DataRow dr in ds1.Tables["ds1"].Rows)
                    {
                        SEARCHUOFTB_WKF_TASKQC1001(dr["DOC_NBR"].ToString());
                    }
                }
                else
                {
                   
                }

            }
            catch
            {
               
            }
            finally
            {
                sqlConn.Close();
            }
        }

        //找出UOF表單的資料，將CURRENT_DOC的內容，轉成xmlDoc
        //從xmlDoc找出各節點的Attributes
        public void SEARCHUOFTB_WKF_TASKQC1001(string DOC_NBR)
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sbSql.Clear();
                sbSqlQuery.Clear();

                //庫存數量看LA009 IN ('20004','20006','20008','20019','20020'

                sbSql.AppendFormat(@"  
                                    SELECT * 
                                    FROM [UOF].DBO.TB_WKF_TASK 
                                    LEFT JOIN [UOF].[dbo].[TB_EB_USER] ON [TB_EB_USER].USER_GUID=TB_WKF_TASK.USER_GUID
                                    WHERE DOC_NBR LIKE '{0}%'
                              
                                    ", DOC_NBR);


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    string QCFrm001SN = "";
                    string QCFrm001ASN = "";
                    string QCFrm001Date = "";
                    string QCFrm001User = "";
                    string QCFrm001Dept = "";
                    string QCFrm001Rank = "";
                    string QCFrm001CUST = "";
                    string QCFrm001PNO = "";
                    string QCFrm001CN = "";
                    string QCFrm001PRD = "";
                    string QCFrm001RDate = "";
                    string QCFrm001MD = "";
                    string QCFrm001ND = "";
                    string QCFrm002Cmf = "";
                    string QCFrm002Abn = "";
                    string QCFrm002Abns = "";
                    string QCFrm001Range = "";
                    string QCFrm001HB = "";
                    string QCFrm001RCA = "";
                    string QCFrm001RCAU = "";                    
                    string QCFrm001Cmf = "";
                    string QCFrm001Comp = "";
                    string QCFrm001Cmf1 = "";

                    string QCFrm001PA = "";
                    string QCFrm001QA = "";
                    string QCFrm001PA2 = "";
                    string QCFrm001QA2 = "";
                    string QCFrm001PA3 = "";
                    string QCFrm001QA3 = "";


                    XmlDocument xmlDoc = new XmlDocument();
                    xmlDoc.LoadXml(ds1.Tables["ds1"].Rows[0]["CURRENT_DOC"].ToString());

                    //XmlNode node = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='ID']");
                    try
                    {
                        QCFrm001SN = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm001SN']").Attributes["fieldValue"].Value;
                    }
                    catch {}
                    try
                    {
                        QCFrm001ASN = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm001ASN']").Attributes["fieldValue"].Value;
                    }
                    catch { }
                    try
                    {
                        QCFrm001Date = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm001Date']").Attributes["fieldValue"].Value;
                    }
                    catch { }
                    try
                    {
                        QCFrm001User = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm001User']").Attributes["fieldValue"].Value;
                    }
                    catch { }
                    try
                    {
                        QCFrm001Dept = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm001Dept']").Attributes["fieldValue"].Value;
                    }
                    catch { }
                    try
                    {
                        QCFrm001Rank = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm001Rank']").Attributes["fieldValue"].Value;
                    }
                    catch { }
                    try
                    {
                        QCFrm001CUST = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm001CUST']").Attributes["fieldValue"].Value;
                    }
                    catch { }
                    try
                    {
                        QCFrm001PNO = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm001PNO']").Attributes["fieldValue"].Value;
                    }
                    catch { }
                    try
                    {
                        QCFrm001CN = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm001CN']").Attributes["fieldValue"].Value;
                    }
                    catch { }
                    try
                    {
                        QCFrm001PRD = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm001PRD']").Attributes["fieldValue"].Value;
                    }
                    catch { }
                    try
                    {
                        QCFrm001RDate = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm001RDate']").Attributes["fieldValue"].Value;
                    }
                    catch { }
                    try
                    {
                        QCFrm001MD = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm001MD']").Attributes["fieldValue"].Value;
                    }
                    catch { }
                    try
                    {
                        QCFrm001ND = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm001ND']").Attributes["fieldValue"].Value;
                    }
                    catch { }
                    try
                    {
                        QCFrm002Cmf = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002Cmf']").Attributes["fieldValue"].Value;
                    }
                    catch { }
                    try
                    {
                        QCFrm002Abn = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002Abn']").Attributes["fieldValue"].Value;
                    }
                    catch { }
                    try
                    {
                        QCFrm002Abns = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002Abns']").Attributes["fieldValue"].Value;
                    }
                    catch { }
                    try
                    {
                        QCFrm001Range = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm001Range']").Attributes["fieldValue"].Value;
                    }
                    catch { }
                    try
                    {
                        QCFrm001HB = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm001HB']").Attributes["fieldValue"].Value;
                    }
                    catch { }
                    try
                    {
                        QCFrm001RCA = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm001RCA']").Attributes["fieldValue"].Value;
                    }
                    catch { }
                    try
                    {
                        QCFrm001RCAU = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm001RCAU']").Attributes["fieldValue"].Value;
                    }
                    catch { }
                    try
                    {
                        QCFrm001Cmf = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm001Cmf']").Attributes["fieldValue"].Value;
                    }
                    catch { }
                    try
                    {
                        QCFrm001Comp = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm001Comp']").Attributes["fieldValue"].Value;
                    }
                    catch { }
                    try
                    {
                        QCFrm001Cmf1 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm001Cmf1']").Attributes["fieldValue"].Value;
                    }
                    catch { }



                    try
                    {
                        //把html語法去除 
                        //QCFrm002Cmf = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002Cmf']").Attributes["fieldValue"].Value;

                        string fieldValue1 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm001PA']/DataGrid/Row/Cell[@fieldId='PA10001']").Attributes["fieldValue"].Value;

                        string fieldValue2 = Regex.Replace(fieldValue1, @"[\W_]+", "");
                        string fieldValue3 = Regex.Replace(fieldValue2, @"[0-9A-Za-z]+", "");

                        QCFrm001PA = fieldValue3;
                    }
                    catch { }
                    try
                    {
                        //把html語法去除 
                        //QCFrm002Cmf = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002Cmf']").Attributes["fieldValue"].Value;

                        string fieldValue1 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm001QA']/DataGrid/Row/Cell[@fieldId='QA10001']").Attributes["fieldValue"].Value;

                        string fieldValue2 = Regex.Replace(fieldValue1, @"[\W_]+", "");
                        string fieldValue3 = Regex.Replace(fieldValue2, @"[0-9A-Za-z]+", "");

                        QCFrm001QA = fieldValue3;
                    }
                    catch { }
                    try
                    {
                        //把html語法去除 
                        //QCFrm002Cmf = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002Cmf']").Attributes["fieldValue"].Value;

                        string fieldValue1 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm001PA2']/DataGrid/Row/Cell[@fieldId='PA20001']").Attributes["fieldValue"].Value;

                        string fieldValue2 = Regex.Replace(fieldValue1, @"[\W_]+", "");
                        string fieldValue3 = Regex.Replace(fieldValue2, @"[0-9A-Za-z]+", "");

                        QCFrm001PA2 = fieldValue3;
                    }
                    catch { }
                    try
                    {
                        //把html語法去除 
                        //QCFrm002Cmf = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002Cmf']").Attributes["fieldValue"].Value;

                        string fieldValue1 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm001QA2']/DataGrid/Row/Cell[@fieldId='QA20001']").Attributes["fieldValue"].Value;

                        string fieldValue2 = Regex.Replace(fieldValue1, @"[\W_]+", "");
                        string fieldValue3 = Regex.Replace(fieldValue2, @"[0-9A-Za-z]+", "");

                        QCFrm001QA2 = fieldValue3;
                    }
                    catch { }
                    try
                    {
                        //把html語法去除 
                        //QCFrm002Cmf = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002Cmf']").Attributes["fieldValue"].Value;

                        string fieldValue1 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm001PA3']/DataGrid/Row/Cell[@fieldId='PA30001']").Attributes["fieldValue"].Value;

                        string fieldValue2 = Regex.Replace(fieldValue1, @"[\W_]+", "");
                        string fieldValue3 = Regex.Replace(fieldValue2, @"[0-9A-Za-z]+", "");

                        QCFrm001PA3 = fieldValue3;
                    }
                    catch { }
                    try
                    {
                        //把html語法去除 
                        //QCFrm002Cmf = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002Cmf']").Attributes["fieldValue"].Value;

                        string fieldValue1 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm001QA3']/DataGrid/Row/Cell[@fieldId='QA30001']").Attributes["fieldValue"].Value;

                        string fieldValue2 = Regex.Replace(fieldValue1, @"[\W_]+", "");
                        string fieldValue3 = Regex.Replace(fieldValue2, @"[0-9A-Za-z]+", "");

                        QCFrm001QA3 = fieldValue3;
                    }
                    catch { }
                    //string OK = "";
                    ADDTOTKQCTBUOFQC1001(
                                         QCFrm001SN,
                                         QCFrm001ASN,
                                         QCFrm001Date,
                                         QCFrm001User,
                                         QCFrm001Dept,
                                         QCFrm001Rank,
                                         QCFrm001CUST,
                                         QCFrm001PNO,
                                         QCFrm001CN,
                                         QCFrm001PRD,
                                         QCFrm001RDate,
                                         QCFrm001MD,
                                         QCFrm001ND,
                                         QCFrm002Cmf,
                                         QCFrm002Abn,
                                         QCFrm002Abns,
                                         QCFrm001Range,
                                         QCFrm001HB,
                                         QCFrm001RCA,
                                         QCFrm001RCAU,
                                         QCFrm001Cmf,
                                         QCFrm001Comp,
                                         QCFrm001Cmf1,
                                         QCFrm001PA,
                                         QCFrm001QA,
                                         QCFrm001PA2,
                                         QCFrm001QA2,
                                         QCFrm001PA3,
                                         QCFrm001QA3
                                           );


                }
                else
                {

                }

            }
            catch
            {

            }
            finally
            {
                sqlConn.Close();
            }
        }


        public void ADDTOTKQCTBUOFQC1001(
                                        string QCFrm001SN,
                                        string QCFrm001ASN,
                                        string QCFrm001Date,
                                        string QCFrm001User,
                                        string QCFrm001Dept,
                                        string QCFrm001Rank,
                                        string QCFrm001CUST,
                                        string QCFrm001PNO,
                                        string QCFrm001CN,
                                        string QCFrm001PRD,
                                        string QCFrm001RDate,
                                        string QCFrm001MD,
                                        string QCFrm001ND,
                                        string QCFrm002Cmf,
                                        string QCFrm002Abn,
                                        string QCFrm002Abns,
                                        string QCFrm001Range,
                                        string QCFrm001HB,
                                        string QCFrm001RCA,
                                        string QCFrm001RCAU,
                                        string QCFrm001Cmf,
                                        string QCFrm001Comp,
                                        string QCFrm001Cmf1,
                                        string QCFrm001PA,
                                        string QCFrm001QA,
                                        string QCFrm001PA2,
                                        string QCFrm001QA2,
                                        string QCFrm001PA3,
                                        string QCFrm001QA3


                                           )
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sqlConn.Close();
                sqlConn.Open();
                tran = sqlConn.BeginTransaction();

                sbSql.Clear();

                sbSql.AppendFormat(@"
                                   INSERT INTO [TKQC].[dbo].[TBUOFQC1001]
                                    (
                                    [QCFrm001SN]
                                    ,[QCFrm001ASN]
                                    ,[QCFrm001Date]
                                    ,[QCFrm001User]
                                    ,[QCFrm001Dept]
                                    ,[QCFrm001Rank]
                                    ,[QCFrm001CUST]
                                    ,[QCFrm001PNO]
                                    ,[QCFrm001CN]
                                    ,[QCFrm001PRD]
                                    ,[QCFrm001RDate]
                                    ,[QCFrm001MD]
                                    ,[QCFrm001ND]
                                    ,[QCFrm002Cmf]
                                    ,[QCFrm002Abn]
                                    ,[QCFrm002Abns]
                                    ,[QCFrm001Range]
                                    ,[QCFrm001HB]
                                    ,[QCFrm001RCA]
                                    ,[QCFrm001RCAU]
                                    ,[QCFrm001PA]
                                    ,[QCFrm001QA]
                                    ,[QCFrm001PA2]
                                    ,[QCFrm001QA2]
                                    ,[QCFrm001PA3]
                                    ,[QCFrm001QA3]
                                    ,[QCFrm001Cmf]
                                    ,[QCFrm001Comp]
                                    ,[QCFrm001Cmf1]
                                    )
                                    VALUES
                                    (
                                    '{0}'
                                    ,'{1}'
                                    ,'{2}'
                                    ,'{3}'
                                    ,'{4}'
                                    ,'{5}'
                                    ,'{6}'
                                    ,'{7}'
                                    ,'{8}'
                                    ,'{9}'
                                    ,'{10}'
                                    ,'{11}'
                                    ,'{12}'
                                    ,'{13}'
                                    ,'{14}'
                                    ,'{15}'
                                    ,'{16}'
                                    ,'{17}'
                                    ,'{18}'
                                    ,'{19}'
                                    ,'{20}'
                                    ,'{21}'
                                    ,'{22}'
                                    ,'{23}'
                                    ,'{24}'
                                    ,'{25}'
                                    ,'{26}'
                                    ,'{27}'
                                    ,'{28}'
                                    )
                                    ",QCFrm001SN
                                    ,QCFrm001ASN
                                    ,QCFrm001Date
                                    ,QCFrm001User
                                    ,QCFrm001Dept
                                    ,QCFrm001Rank
                                    ,QCFrm001CUST
                                    ,QCFrm001PNO
                                    ,QCFrm001CN
                                    ,QCFrm001PRD
                                    ,QCFrm001RDate
                                    ,QCFrm001MD
                                    ,QCFrm001ND
                                    ,QCFrm002Cmf
                                    ,QCFrm002Abn
                                    ,QCFrm002Abns
                                    ,QCFrm001Range
                                    ,QCFrm001HB
                                    ,QCFrm001RCA
                                    ,QCFrm001RCAU
                                    ,QCFrm001PA
                                    ,QCFrm001QA
                                    ,QCFrm001PA2
                                    ,QCFrm001QA2
                                    ,QCFrm001PA3
                                    ,QCFrm001QA3
                                    ,QCFrm001Cmf
                                    ,QCFrm001Comp
                                    ,QCFrm001Cmf1);

                cmd.Connection = sqlConn;
                cmd.CommandTimeout = 60;
                cmd.CommandText = sbSql.ToString();
                cmd.Transaction = tran;
                result = cmd.ExecuteNonQuery();

                if (result == 0)
                {
                    tran.Rollback();    //交易取消
                }
                else
                {
                    tran.Commit();      //執行交易  
                }

            }
            catch
            {

            }

            finally
            {
                sqlConn.Close();
            }
        }

        public void NEW_INVTJINVTK()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp22"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                DataSet ds1 = new DataSet();
                SqlDataAdapter adapter1 = new SqlDataAdapter();
                SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();

                sbSql.Clear();
                sbSqlQuery.Clear();

                //TL006='N' AND (UDF01 IN ('Y','y') ) 
                sbSql.AppendFormat(@" 
                                    SELECT TJ001,TJ002,UDF01
                                    FROM [test0923].dbo.INVTJ
                                    WHERE TJ010='N'                                  
                                    AND UDF01 IN ('Y','y')
                                    ORDER BY TJ001,TJ002


                                    ");

                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");


                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    foreach (DataRow dr in ds1.Tables["ds1"].Rows)
                    {
                        ADD_INVTJINVTK_TB_WKF_EXTERNAL_TASK(dr["TJ001"].ToString().Trim(), dr["TJ002"].ToString().Trim());
                    }

                }
                else
                {

                }

            }
            catch
            {

            }
            finally
            {
                sqlConn.Close();
            }

            UPDATE_INVTJ_UDF01();
        }
        public void ADD_INVTJINVTK_TB_WKF_EXTERNAL_TASK(string TJ001, string TJ002)
        {

            DataTable DT = SEARCH_INVTJ_INVTK(TJ001, TJ002);
            DataTable DTUPFDEP = SEARCHUOFDEP(DT.Rows[0]["CREATOR"].ToString());

            string account = DT.Rows[0]["CREATOR"].ToString();
            string groupId = DT.Rows[0]["GROUP_ID"].ToString();
            string jobTitleId = DT.Rows[0]["TITLE_ID"].ToString();
            string fillerName = DT.Rows[0]["MV002"].ToString();
            string fillerUserGuid = DT.Rows[0]["USER_GUID"].ToString();

            string DEPNAME = DTUPFDEP.Rows[0]["DEPNAME"].ToString();
            string DEPNO = DTUPFDEP.Rows[0]["DEPNO"].ToString();

            string EXTERNAL_FORM_NBR = DT.Rows[0]["TJ001"].ToString().Trim() + DT.Rows[0]["TJ002"].ToString().Trim();

            int rowscounts = 0;

            XmlDocument xmlDoc = new XmlDocument();
            //建立根節點
            XmlElement Form = xmlDoc.CreateElement("Form");

            //正式的id
            string PURTGID = SEARCHFORM_UOF_VERSION_ID("INVI07成本開帳調整單");

            if (!string.IsNullOrEmpty(PURTGID))
            {
                Form.SetAttribute("formVersionId", PURTGID);
            }


            Form.SetAttribute("urgentLevel", "2");
            //加入節點底下
            xmlDoc.AppendChild(Form);

            ////建立節點Applicant
            XmlElement Applicant = xmlDoc.CreateElement("Applicant");
            Applicant.SetAttribute("account", account);
            Applicant.SetAttribute("groupId", groupId);
            Applicant.SetAttribute("jobTitleId", jobTitleId);
            //加入節點底下
            Form.AppendChild(Applicant);

            //建立節點 Comment
            XmlElement Comment = xmlDoc.CreateElement("Comment");
            Comment.InnerText = "申請者意見";
            //加入至節點底下
            Applicant.AppendChild(Comment);

            //建立節點 FormFieldValue
            XmlElement FormFieldValue = xmlDoc.CreateElement("FormFieldValue");
            //加入至節點底下
            Form.AppendChild(FormFieldValue);

            //建立節點FieldItem
            //ID 表單編號	
            XmlElement FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "ID");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);


            //建立節點FieldItem
            //TJ001	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TJ001");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TJ001"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TJ002	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TJ002");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TJ002"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TJ003	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TJ003");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TJ003"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TJ004	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TJ004");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TJ004"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TJ005	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TJ005");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TJ005"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TJ006	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TJ006");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TJ006"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TJ007	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TJ007");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TJ007"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TJ008	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TJ008");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TJ008"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //建立節點FieldItem




            //DataGrid
            //建立節點FieldItem
            //INVTK
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "INVTK");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點 DataGrid
            XmlElement DataGrid = xmlDoc.CreateElement("DataGrid");
            //DataGrid 加入至 TB 節點底下
            XmlNode PURTD = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='INVTK']");
            PURTD.AppendChild(DataGrid);


            foreach (DataRow od in DT.Rows)
            {
                // 新增 Row
                XmlElement Row = xmlDoc.CreateElement("Row");
                Row.SetAttribute("order", (rowscounts).ToString());

                //Row	TK003
                XmlElement Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TK003");
                Cell.SetAttribute("fieldValue", od["TK003"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TK004
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TK004");
                Cell.SetAttribute("fieldValue", od["TK004"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");         
                Row.AppendChild(Cell);
                //Row

                //Row	TK005
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TK005");
                Cell.SetAttribute("fieldValue", od["TK005"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);
                //Row

                //Row	TK006
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TK006");
                Cell.SetAttribute("fieldValue", od["TK006"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);
                //Row

                //Row	TK007
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TK007");
                Cell.SetAttribute("fieldValue", od["TK007"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);
                //Row

                //Row	TK017
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TK017");
                Cell.SetAttribute("fieldValue", od["TK017"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);
                //Row

                //Row	TK018
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TK018");
                Cell.SetAttribute("fieldValue", od["TK018"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);
                //Row

                //Row	TK012
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TK012");
                Cell.SetAttribute("fieldValue", od["TK012"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);
                //Row

                //Row	TK013
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TK013");
                Cell.SetAttribute("fieldValue", od["TK013"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);
                //Row

                //Row	TK014
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TK014");
                Cell.SetAttribute("fieldValue", od["TK014"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);
                //Row

                //Row	TK015
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TK015");
                Cell.SetAttribute("fieldValue", od["TK015"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);
                //Row
                




                rowscounts = rowscounts + 1;

                //DataGrid PURTM
                XmlNode DataGridS = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='INVTK']/DataGrid");
                DataGridS.AppendChild(Row);

            }


            ////用ADDTACK，直接啟動起單
            //ADDTACK(Form);

            //ADD TO DB
            ////string connectionString = ConfigurationManager.ConnectionStrings["dbUOF"].ToString();

            //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
            //sqlConn = new SqlConnection(connectionString);

            //20210902密
            Class1 TKID = new Class1();//用new 建立類別實體
            SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

            //資料庫使用者密碼解密
            sqlsb.Password = TKID.Decryption(sqlsb.Password);
            sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

            String connectionString;
            sqlConn = new SqlConnection(sqlsb.ConnectionString);
            connectionString = sqlConn.ConnectionString.ToString();

            StringBuilder queryString = new StringBuilder();




            queryString.AppendFormat(@" INSERT INTO [{0}].dbo.TB_WKF_EXTERNAL_TASK
                                         (EXTERNAL_TASK_ID,FORM_INFO,STATUS,EXTERNAL_FORM_NBR)
                                        VALUES (NEWID(),@XML,2,'{1}')
                                        ", DBNAME, EXTERNAL_FORM_NBR);

            try
            {
                using (SqlConnection connection = new SqlConnection(connectionString))
                {

                    SqlCommand command = new SqlCommand(queryString.ToString(), connection);
                    command.Parameters.Add("@XML", SqlDbType.NVarChar).Value = Form.OuterXml;

                    command.Connection.Open();

                    int count = command.ExecuteNonQuery();

                    connection.Close();
                    connection.Dispose();

                }
            }
            catch
            {

            }
            finally
            {

            }
        }

        public DataTable SEARCH_INVTJ_INVTK(string TJ001, string TJ002)
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);


                sbSql.Clear();
                sbSqlQuery.Clear();

                //庫存數量看LA009 IN ('20004','20006','20008','20019','20020'

                sbSql.AppendFormat(@"  
                                    
                                    SELECT *
                                    ,USER_GUID,NAME
                                    ,(SELECT TOP 1 GROUP_ID FROM [192.168.1.223].[UOF].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'GROUP_ID'
                                    ,(SELECT TOP 1 TITLE_ID FROM [192.168.1.223].[UOF].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'TITLE_ID'
                                    FROM 
                                    (
                                    SELECT 


                                    [INVTJ].[COMPANY]
                                    ,[INVTJ].[CREATOR]
                                    ,[INVTJ].[USR_GROUP]
                                    ,[INVTJ].[CREATE_DATE]
                                    ,[INVTJ].[MODIFIER]
                                    ,[INVTJ].[MODI_DATE]
                                    ,[INVTJ].[FLAG]
                                    ,[INVTJ].[CREATE_TIME]
                                    ,[INVTJ].[MODI_TIME]
                                    ,[INVTJ].[TRANS_TYPE]
                                    ,[INVTJ].[TRANS_NAME]
                                    ,[INVTJ].[sync_date]
                                    ,[INVTJ].[sync_time]
                                    ,[INVTJ].[sync_mark]
                                    ,[INVTJ].[sync_count]
                                    ,[INVTJ].[DataUser]
                                    ,[INVTJ].[DataGroup]
                                    ,[INVTJ].[TJ001]
                                    ,[INVTJ].[TJ002]
                                    ,[INVTJ].[TJ003]
                                    ,[INVTJ].[TJ004]
                                    ,[INVTJ].[TJ005]
                                    ,[INVTJ].[TJ006]
                                    ,[INVTJ].[TJ007]
                                    ,[INVTJ].[TJ008]
                                    ,[INVTJ].[TJ009]
                                    ,[INVTJ].[TJ010]
                                    ,[INVTJ].[TJ011]
                                    ,[INVTJ].[TJ012]
                                    ,[INVTJ].[TJ013]
                                    ,[INVTJ].[TJ014]
                                    ,[INVTJ].[TJ015]
                                    ,[INVTJ].[TJ016]
                                    ,[INVTJ].[TJ017]
                                    ,[INVTJ].[TJ018]
                                    ,[INVTJ].[TJ019]
                                    ,[INVTJ].[TJ020]
                                    ,[INVTJ].[TJ021]
                                    ,[INVTJ].[TJ022]
                                    ,[INVTJ].[TJ023]
                                    ,[INVTJ].[TJ024]
                                    ,[INVTJ].[TJ025]
                                    ,[INVTJ].[TJ026]
                                    ,[INVTJ].[TJ027]
                                    ,[INVTJ].[UDF01] AS 'INVTJUDF01'
                                    ,[INVTJ].[UDF02] AS 'INVTJUDF02'
                                    ,[INVTJ].[UDF03] AS 'INVTJUDF03'
                                    ,[INVTJ].[UDF04] AS 'INVTJUDF04'
                                    ,[INVTJ].[UDF05] AS 'INVTJUDF05'
                                    ,[INVTJ].[UDF06] AS 'INVTJUDF06'
                                    ,[INVTJ].[UDF07] AS 'INVTJUDF07'
                                    ,[INVTJ].[UDF08] AS 'INVTJUDF08'
                                    ,[INVTJ].[UDF09] AS 'INVTJUDF09'
                                    ,[INVTJ].[UDF10] AS 'INVTJUDF10'

                                    ,[INVTK].[TK001]
                                    ,[INVTK].[TK002]
                                    ,[INVTK].[TK003]
                                    ,[INVTK].[TK004]
                                    ,[INVTK].[TK005]
                                    ,[INVTK].[TK006]
                                    ,[INVTK].[TK007]
                                    ,[INVTK].[TK008]
                                    ,[INVTK].[TK009]
                                    ,[INVTK].[TK010]
                                    ,[INVTK].[TK011]
                                    ,[INVTK].[TK012]
                                    ,[INVTK].[TK013]
                                    ,[INVTK].[TK014]
                                    ,[INVTK].[TK015]
                                    ,[INVTK].[TK016]
                                    ,[INVTK].[TK017]
                                    ,[INVTK].[TK018]
                                    ,[INVTK].[TK019]
                                    ,[INVTK].[TK020]
                                    ,[INVTK].[TK021]
                                    ,[INVTK].[TK022]
                                    ,[INVTK].[TK023]
                                    ,[INVTK].[TK024]
                                    ,[INVTK].[TK025]
                                    ,[INVTK].[TK026]
                                    ,[INVTK].[TK027]
                                    ,[INVTK].[TK028]
                                    ,[INVTK].[TK029]
                                    ,[INVTK].[TK030]
                                    ,[INVTK].[TK031]
                                    ,[INVTK].[TK032]
                                    ,[INVTK].[TK033]
                                    ,[INVTK].[TK034]
                                    ,[INVTK].[TK035]
                                    ,[INVTK].[TK036]
                                    ,[INVTK].[TK037]
                                    ,[INVTK].[TK038]
                                    ,[INVTK].[TK039]
                                    ,[INVTK].[TK040]
                                    ,[INVTK].[TK041]
                                    ,[INVTK].[TK042]
                                    ,[INVTK].[TK043]
                                    ,[INVTK].[TK044]
                                    ,[INVTK].[TK045]
                                    ,[INVTK].[TK046]
                                    ,[INVTK].[UDF01] AS 'INVTKUDF01'
                                    ,[INVTK].[UDF02] AS 'INVTKUDF02'
                                    ,[INVTK].[UDF03] AS 'INVTKUDF03'
                                    ,[INVTK].[UDF04] AS 'INVTKUDF04'
                                    ,[INVTK].[UDF05] AS 'INVTKUDF05'
                                    ,[INVTK].[UDF06] AS 'INVTKUDF06'
                                    ,[INVTK].[UDF07] AS 'INVTKUDF07'
                                    ,[INVTK].[UDF08] AS 'INVTKUDF08'
                                    ,[INVTK].[UDF09] AS 'INVTKUDF09'
                                    ,[INVTK].[UDF10] AS 'INVTKUDF10'


                                    ,[TB_EB_USER].USER_GUID,NAME
                                    ,(SELECT TOP 1 MV002 FROM [TK].dbo.CMSMV WHERE MV001=INVTJ.CREATOR) AS 'MV002'

                                    FROM [test0923].dbo.INVTK,[test0923].dbo.INVTJ
                                    LEFT JOIN [192.168.1.223].[UOF].[dbo].[TB_EB_USER] ON [TB_EB_USER].ACCOUNT=INVTJ.CREATOR COLLATE Chinese_Taiwan_Stroke_BIN
                                    WHERE 1=1
                                    AND TJ001=TK001 AND TJ002=TK002
                                    AND TJ001='{0}' AND TJ002='{1}'
                                    ) AS TEMP
                                    
                              
                                    ", TJ001, TJ002);


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    return ds1.Tables["ds1"];

                }
                else
                {
                    return null;
                }

            }
            catch
            {
                return null;
            }
            finally
            {
                sqlConn.Close();
            }
        }

        public void UPDATE_INVTJ_UDF01()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dbconn"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sqlConn.Close();
                sqlConn.Open();
                tran = sqlConn.BeginTransaction();

                sbSql.Clear();

                sbSql.AppendFormat(@"
                                    UPDATE  [test0923].dbo.INVTJ
                                    SET UDF01 = 'UOF'                                   
                                    WHERE  UDF01 IN ('Y','y')

                                    ");

                cmd.Connection = sqlConn;
                cmd.CommandTimeout = 60;
                cmd.CommandText = sbSql.ToString();
                cmd.Transaction = tran;
                result = cmd.ExecuteNonQuery();

                if (result == 0)
                {
                    tran.Rollback();    //交易取消
                }
                else
                {
                    tran.Commit();      //執行交易  
                }

            }
            catch
            {

            }

            finally
            {
                sqlConn.Close();
            }
        }

        public void NEW_MOCTH_MOCTI()
        {

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp22"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                DataSet ds1 = new DataSet();
                SqlDataAdapter adapter1 = new SqlDataAdapter();
                SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();

                sbSql.Clear();
                sbSqlQuery.Clear();

                //TL006='N' AND (UDF01 IN ('Y','y') ) 
                sbSql.AppendFormat(@" 
                                    SELECT TH001,TH002,UDF01
                                    FROM [test0923].dbo.MOCTH
                                    WHERE TH023='N'                                  
                                    AND UDF01 IN ('Y','y')
                                    ORDER BY TH001,TH002


                                    ");

                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");


                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    foreach (DataRow dr in ds1.Tables["ds1"].Rows)
                    {
                        ADD_MOCTH_MOCTI_TB_WKF_EXTERNAL_TASK(dr["TH001"].ToString().Trim(), dr["TH002"].ToString().Trim());
                    }

                }
                else
                {

                }

            }
            catch
            {

            }
            finally
            {
                sqlConn.Close();
            }

            UPDATE_MOCTH_UDF01();
        }
        public void ADD_MOCTH_MOCTI_TB_WKF_EXTERNAL_TASK(string TH001, string TH002)
        {

            DataTable DT = SEARCH_MOCTH_MOCTI(TH001, TH002);
            DataTable DTUPFDEP = SEARCHUOFDEP(DT.Rows[0]["CREATOR"].ToString());

            string account = DT.Rows[0]["CREATOR"].ToString();
            string groupId = DT.Rows[0]["GROUP_ID"].ToString();
            string jobTitleId = DT.Rows[0]["TITLE_ID"].ToString();
            string fillerName = DT.Rows[0]["MV002"].ToString();
            string fillerUserGuid = DT.Rows[0]["USER_GUID"].ToString();

            string DEPNAME = DTUPFDEP.Rows[0]["DEPNAME"].ToString();
            string DEPNO = DTUPFDEP.Rows[0]["DEPNO"].ToString();

            string EXTERNAL_FORM_NBR = DT.Rows[0]["TH001"].ToString().Trim() + DT.Rows[0]["TH002"].ToString().Trim();

            int rowscounts = 0;

            XmlDocument xmlDoc = new XmlDocument();
            //建立根節點
            XmlElement Form = xmlDoc.CreateElement("Form");

            //正式的id
            string PURTGID = SEARCHFORM_UOF_VERSION_ID("MOCI06.託外進貨單");

            if (!string.IsNullOrEmpty(PURTGID))
            {
                Form.SetAttribute("formVersionId", PURTGID);
            }


            Form.SetAttribute("urgentLevel", "2");
            //加入節點底下
            xmlDoc.AppendChild(Form);

            ////建立節點Applicant
            XmlElement Applicant = xmlDoc.CreateElement("Applicant");
            Applicant.SetAttribute("account", account);
            Applicant.SetAttribute("groupId", groupId);
            Applicant.SetAttribute("jobTitleId", jobTitleId);
            //加入節點底下
            Form.AppendChild(Applicant);

            //建立節點 Comment
            XmlElement Comment = xmlDoc.CreateElement("Comment");
            Comment.InnerText = "申請者意見";
            //加入至節點底下
            Applicant.AppendChild(Comment);

            //建立節點 FormFieldValue
            XmlElement FormFieldValue = xmlDoc.CreateElement("FormFieldValue");
            //加入至節點底下
            Form.AppendChild(FormFieldValue);

            //建立節點FieldItem
            //ID 表單編號	
            XmlElement FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "ID");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);


            //建立節點FieldItem
            //TH001	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TH001");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TH001"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //建立節點FieldItem
            //TH002	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TH002");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TH002"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TH003	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TH003");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TH003"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TH005	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TH005");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TH005"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TH010	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TH010");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TH010"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TH011	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TH011");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TH011"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TH012	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TH012");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TH012"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TH013	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TH013");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TH013"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TH014	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TH014");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TH014"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TH031	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TH031");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TH031"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //TH032	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TH032");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TH032"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);




            //DataGrid
            //建立節點FieldItem
            //MOCTI
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "MOCTI");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點 DataGrid
            XmlElement DataGrid = xmlDoc.CreateElement("DataGrid");
            //DataGrid 加入至 TB 節點底下
            XmlNode PURTD = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='MOCTI']");
            PURTD.AppendChild(DataGrid);


            foreach (DataRow od in DT.Rows)
            {
                // 新增 Row
                XmlElement Row = xmlDoc.CreateElement("Row");
                Row.SetAttribute("order", (rowscounts).ToString());

                //Row	TI003
                XmlElement Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TI003");
                Cell.SetAttribute("fieldValue", od["TI003"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TI004
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TI004");
                Cell.SetAttribute("fieldValue", od["TI004"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);
                //Row

                //Row	TI005
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TI005");
                Cell.SetAttribute("fieldValue", od["TI005"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);
                //Row

                //Row	TI006
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TI006");
                Cell.SetAttribute("fieldValue", od["TI006"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);
                //Row

                //Row	TI007
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TI007");
                Cell.SetAttribute("fieldValue", od["TI007"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);
                //Row

                //Row	TI008
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TI008");
                Cell.SetAttribute("fieldValue", od["TI008"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);
                //Row

                //Row	TI009
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TI009");
                Cell.SetAttribute("fieldValue", od["TI009"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);
                //Row

                //Row	TI010
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TI010");
                Cell.SetAttribute("fieldValue", od["TI010"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);
                //Row

                //Row	TI011
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TI011");
                Cell.SetAttribute("fieldValue", od["TI011"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);
                //Row

                //Row	TI013
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TI013");
                Cell.SetAttribute("fieldValue", od["TI013"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);
                //Row

                //Row	TI014
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TI014");
                Cell.SetAttribute("fieldValue", od["TI014"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);
                //Row

                //Row	TI046
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TI046");
                Cell.SetAttribute("fieldValue", od["TI046"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);
                //Row

                //Row	TI047
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TI047");
                Cell.SetAttribute("fieldValue", od["TI047"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);
                //Row




                rowscounts = rowscounts + 1;

                //DataGrid PURTM
                XmlNode DataGridS = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='MOCTI']/DataGrid");
                DataGridS.AppendChild(Row);

            }


            ////用ADDTACK，直接啟動起單
            //ADDTACK(Form);

            //ADD TO DB
            ////string connectionString = ConfigurationManager.ConnectionStrings["dbUOF"].ToString();

            //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
            //sqlConn = new SqlConnection(connectionString);

            //20210902密
            Class1 TKID = new Class1();//用new 建立類別實體
            SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

            //資料庫使用者密碼解密
            sqlsb.Password = TKID.Decryption(sqlsb.Password);
            sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

            String connectionString;
            sqlConn = new SqlConnection(sqlsb.ConnectionString);
            connectionString = sqlConn.ConnectionString.ToString();

            StringBuilder queryString = new StringBuilder();




            queryString.AppendFormat(@" INSERT INTO [{0}].dbo.TB_WKF_EXTERNAL_TASK
                                         (EXTERNAL_TASK_ID,FORM_INFO,STATUS,EXTERNAL_FORM_NBR)
                                        VALUES (NEWID(),@XML,2,'{1}')
                                        ", DBNAME, EXTERNAL_FORM_NBR);

            try
            {
                using (SqlConnection connection = new SqlConnection(connectionString))
                {

                    SqlCommand command = new SqlCommand(queryString.ToString(), connection);
                    command.Parameters.Add("@XML", SqlDbType.NVarChar).Value = Form.OuterXml;

                    command.Connection.Open();

                    int count = command.ExecuteNonQuery();

                    connection.Close();
                    connection.Dispose();

                }
            }
            catch
            {

            }
            finally
            {

            }
        }

        public DataTable SEARCH_MOCTH_MOCTI(string TH001, string TH002)
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);


                sbSql.Clear();
                sbSqlQuery.Clear();

                //庫存數量看LA009 IN ('20004','20006','20008','20019','20020'

                sbSql.AppendFormat(@"  
                                    
                                    SELECT *
                                    ,USER_GUID,NAME
                                    ,(SELECT TOP 1 GROUP_ID FROM [192.168.1.223].[UOF].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'GROUP_ID'
                                    ,(SELECT TOP 1 TITLE_ID FROM [192.168.1.223].[UOF].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'TITLE_ID'
                                    FROM 
                                    (
                                    SELECT 

                                    [MOCTH].[COMPANY]
                                    ,[MOCTH].[CREATOR]
                                    ,[MOCTH].[USR_GROUP]
                                    ,[MOCTH].[CREATE_DATE]
                                    ,[MOCTH].[MODIFIER]
                                    ,[MOCTH].[MODI_DATE]
                                    ,[MOCTH].[FLAG]
                                    ,[MOCTH].[CREATE_TIME]
                                    ,[MOCTH].[MODI_TIME]
                                    ,[MOCTH].[TRANS_TYPE]
                                    ,[MOCTH].[TRANS_NAME]
                                    ,[MOCTH].[sync_date]
                                    ,[MOCTH].[sync_time]
                                    ,[MOCTH].[sync_mark]
                                    ,[MOCTH].[sync_count]
                                    ,[MOCTH].[DataUser]
                                    ,[MOCTH].[DataGroup]
                                    ,[MOCTH].[TH001]
                                    ,[MOCTH].[TH002]
                                    ,[MOCTH].[TH003]
                                    ,[MOCTH].[TH004]
                                    ,[MOCTH].[TH005]
                                    ,[MOCTH].[TH006]
                                    ,[MOCTH].[TH007]
                                    ,[MOCTH].[TH008]
                                    ,[MOCTH].[TH009]
                                    ,[MOCTH].[TH010]
                                    ,[MOCTH].[TH011]
                                    ,[MOCTH].[TH012]
                                    ,[MOCTH].[TH013]
                                    ,[MOCTH].[TH014]
                                    ,[MOCTH].[TH015]
                                    ,[MOCTH].[TH016]
                                    ,[MOCTH].[TH017]
                                    ,[MOCTH].[TH018]
                                    ,[MOCTH].[TH019]
                                    ,[MOCTH].[TH020]
                                    ,[MOCTH].[TH021]
                                    ,[MOCTH].[TH022]
                                    ,[MOCTH].[TH023]
                                    ,[MOCTH].[TH024]
                                    ,[MOCTH].[TH025]
                                    ,[MOCTH].[TH026]
                                    ,[MOCTH].[TH027]
                                    ,[MOCTH].[TH028]
                                    ,[MOCTH].[TH029]
                                    ,[MOCTH].[TH030]
                                    ,[MOCTH].[TH031]
                                    ,[MOCTH].[TH032]
                                    ,[MOCTH].[TH033]
                                    ,[MOCTH].[TH034]
                                    ,[MOCTH].[TH035]
                                    ,[MOCTH].[TH036]
                                    ,[MOCTH].[TH037]
                                    ,[MOCTH].[TH038]
                                    ,[MOCTH].[TH039]
                                    ,[MOCTH].[TH040]
                                    ,[MOCTH].[TH041]
                                    ,[MOCTH].[TH042]
                                    ,[MOCTH].[TH043]
                                    ,[MOCTH].[TH044]
                                    ,[MOCTH].[TH045]
                                    ,[MOCTH].[TH046]
                                    ,[MOCTH].[TH047]
                                    ,[MOCTH].[TH048]
                                    ,[MOCTH].[TH049]
                                    ,[MOCTH].[TH050]
                                    ,[MOCTH].[TH051]
                                    ,[MOCTH].[TH052]
                                    ,[MOCTH].[TH053]
                                    ,[MOCTH].[TH054]
                                    ,[MOCTH].[TH500]
                                    ,[MOCTH].[TH501]
                                    ,[MOCTH].[TH502]
                                    ,[MOCTH].[TH503]
                                    ,[MOCTH].[TH504]
                                    ,[MOCTH].[TH505]
                                    ,[MOCTH].[TH506]
                                    ,[MOCTH].[UDF01] AS 'MOCTHUDF01'
                                    ,[MOCTH].[UDF02] AS 'MOCTHUDF02'
                                    ,[MOCTH].[UDF03] AS 'MOCTHUDF03'
                                    ,[MOCTH].[UDF04] AS 'MOCTHUDF04'
                                    ,[MOCTH].[UDF05] AS 'MOCTHUDF05'
                                    ,[MOCTH].[UDF06] AS 'MOCTHUDF06'
                                    ,[MOCTH].[UDF07] AS 'MOCTHUDF07'
                                    ,[MOCTH].[UDF08] AS 'MOCTHUDF08'
                                    ,[MOCTH].[UDF09] AS 'MOCTHUDF09'
                                    ,[MOCTH].[UDF10] AS 'MOCTHUDF10'
                                    ,[MOCTI].[TI001]
                                    ,[MOCTI].[TI002]
                                    ,[MOCTI].[TI003]
                                    ,[MOCTI].[TI004]
                                    ,[MOCTI].[TI005]
                                    ,[MOCTI].[TI006]
                                    ,[MOCTI].[TI007]
                                    ,[MOCTI].[TI008]
                                    ,[MOCTI].[TI009]
                                    ,[MOCTI].[TI010]
                                    ,[MOCTI].[TI011]
                                    ,[MOCTI].[TI012]
                                    ,[MOCTI].[TI013]
                                    ,[MOCTI].[TI014]
                                    ,[MOCTI].[TI015]
                                    ,[MOCTI].[TI016]
                                    ,[MOCTI].[TI017]
                                    ,[MOCTI].[TI018]
                                    ,[MOCTI].[TI019]
                                    ,[MOCTI].[TI020]
                                    ,[MOCTI].[TI021]
                                    ,[MOCTI].[TI022]
                                    ,[MOCTI].[TI023]
                                    ,[MOCTI].[TI024]
                                    ,[MOCTI].[TI025]
                                    ,[MOCTI].[TI026]
                                    ,[MOCTI].[TI027]
                                    ,[MOCTI].[TI028]
                                    ,[MOCTI].[TI029]
                                    ,[MOCTI].[TI030]
                                    ,[MOCTI].[TI031]
                                    ,[MOCTI].[TI032]
                                    ,[MOCTI].[TI033]
                                    ,[MOCTI].[TI034]
                                    ,[MOCTI].[TI035]
                                    ,[MOCTI].[TI036]
                                    ,[MOCTI].[TI037]
                                    ,[MOCTI].[TI038]
                                    ,[MOCTI].[TI039]
                                    ,[MOCTI].[TI040]
                                    ,[MOCTI].[TI041]
                                    ,[MOCTI].[TI042]
                                    ,[MOCTI].[TI043]
                                    ,[MOCTI].[TI044]
                                    ,[MOCTI].[TI045]
                                    ,[MOCTI].[TI046]
                                    ,[MOCTI].[TI047]
                                    ,[MOCTI].[TI048]
                                    ,[MOCTI].[TI049]
                                    ,[MOCTI].[TI050]
                                    ,[MOCTI].[TI051]
                                    ,[MOCTI].[TI052]
                                    ,[MOCTI].[TI053]
                                    ,[MOCTI].[TI054]
                                    ,[MOCTI].[TI055]
                                    ,[MOCTI].[TI056]
                                    ,[MOCTI].[TI057]
                                    ,[MOCTI].[TI058]
                                    ,[MOCTI].[TI059]
                                    ,[MOCTI].[TI060]
                                    ,[MOCTI].[TI061]
                                    ,[MOCTI].[TI062]
                                    ,[MOCTI].[TI063]
                                    ,[MOCTI].[TI064]
                                    ,[MOCTI].[TI065]
                                    ,[MOCTI].[TI066]
                                    ,[MOCTI].[TI067]
                                    ,[MOCTI].[TI068]
                                    ,[MOCTI].[TI069]
                                    ,[MOCTI].[TI070]
                                    ,[MOCTI].[TI071]
                                    ,[MOCTI].[TI072]
                                    ,[MOCTI].[TI073]
                                    ,[MOCTI].[TI074]
                                    ,[MOCTI].[TI075]
                                    ,[MOCTI].[TI500]
                                    ,[MOCTI].[TI501]
                                    ,[MOCTI].[TI502]
                                    ,[MOCTI].[TI503]
                                    ,[MOCTI].[TI504]
                                    ,[MOCTI].[TI505]
                                    ,[MOCTI].[TI506]
                                    ,[MOCTI].[TI507]
                                    ,[MOCTI].[TI550]
                                    ,[MOCTI].[TI551]
                                    ,[MOCTI].[TI552]
                                    ,[MOCTI].[TI553]
                                    ,[MOCTI].[TI554]
                                    ,[MOCTI].[TI555]
                                    ,[MOCTI].[TI556]
                                    ,[MOCTI].[TI557]
                                    ,[MOCTI].[TI558]
                                    ,[MOCTI].[TI559]
                                    ,[MOCTI].[TI560]
                                    ,[MOCTI].[TI561]
                                    ,[MOCTI].[TI562]
                                    ,[MOCTI].[TI563]
                                    ,[MOCTI].[TI564]
                                    ,[MOCTI].[TI565]
                                    ,[MOCTI].[TI567]
                                    ,[MOCTI].[TI568]
                                    ,[MOCTI].[TI569]
                                    ,[MOCTI].[TI570]
                                    ,[MOCTI].[TI571]
                                    ,[MOCTI].[TI572]
                                    ,[MOCTI].[TI573]
                                    ,[MOCTI].[TI574]
                                    ,[MOCTI].[TI575]
                                    ,[MOCTI].[TI576]
                                    ,[MOCTI].[UDF01] AS 'MOCTIUDF01'
                                    ,[MOCTI].[UDF02] AS 'MOCTIUDF02'
                                    ,[MOCTI].[UDF03] AS 'MOCTIUDF03'
                                    ,[MOCTI].[UDF04] AS 'MOCTIUDF04'
                                    ,[MOCTI].[UDF05] AS 'MOCTIUDF05'
                                    ,[MOCTI].[UDF06] AS 'MOCTIUDF06'
                                    ,[MOCTI].[UDF07] AS 'MOCTIUDF07'
                                    ,[MOCTI].[UDF08] AS 'MOCTIUDF08'
                                    ,[MOCTI].[UDF09] AS 'MOCTIUDF09'
                                    ,[MOCTI].[UDF10] AS 'MOCTIUDF10'                                  


                                    ,[TB_EB_USER].USER_GUID,NAME
                                    ,(SELECT TOP 1 MV002 FROM [TK].dbo.CMSMV WHERE MV001=MOCTH.CREATOR) AS 'MV002'

                                    FROM [test0923].dbo.MOCTI,[test0923].dbo.MOCTH
                                    LEFT JOIN [192.168.1.223].[UOF].[dbo].[TB_EB_USER] ON [TB_EB_USER].ACCOUNT=MOCTH.CREATOR COLLATE Chinese_Taiwan_Stroke_BIN
                                    WHERE 1=1
                                    AND TH001=TI001 AND TH002=TI002
                                    AND TH001='{0}' AND TH002='{1}'
                                    ) AS TEMP
                                    
                              
                                    ", TH001, TH002);


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    return ds1.Tables["ds1"];

                }
                else
                {
                    return null;
                }

            }
            catch
            {
                return null;
            }
            finally
            {
                sqlConn.Close();
            }
        }

        public void UPDATE_MOCTH_UDF01()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dbconn"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sqlConn.Close();
                sqlConn.Open();
                tran = sqlConn.BeginTransaction();

                sbSql.Clear();

                sbSql.AppendFormat(@"
                                    UPDATE  [test0923].dbo.MOCTH
                                    SET UDF01 = 'UOF'                                   
                                    WHERE  UDF01 IN ('Y','y')

                                    ");

                cmd.Connection = sqlConn;
                cmd.CommandTimeout = 60;
                cmd.CommandText = sbSql.ToString();
                cmd.Transaction = tran;
                result = cmd.ExecuteNonQuery();

                if (result == 0)
                {
                    tran.Rollback();    //交易取消
                }
                else
                {
                    tran.Commit();      //執行交易  
                }

            }
            catch
            {

            }

            finally
            {
                sqlConn.Close();
            }
        }

        public void NEW_MOCTK_MOCTL()
        {

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp22"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                DataSet ds1 = new DataSet();
                SqlDataAdapter adapter1 = new SqlDataAdapter();
                SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();

                sbSql.Clear();
                sbSqlQuery.Clear();

                //TL006='N' AND (UDF01 IN ('Y','y') ) 
                sbSql.AppendFormat(@" 
                                    SELECT TK001,TK002,UDF01
                                    FROM [test0923].dbo.MOCTK
                                    WHERE TK021='N'                                  
                                    AND UDF01 IN ('Y','y')
                                    ORDER BY TK001,TK002


                                    ");

                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");


                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    foreach (DataRow dr in ds1.Tables["ds1"].Rows)
                    {
                        ADD_MOCTK_MOCTL_TB_WKF_EXTERNAL_TASK(dr["TK001"].ToString().Trim(), dr["TK002"].ToString().Trim());
                    }

                }
                else
                {

                }

            }
            catch
            {

            }
            finally
            {
                sqlConn.Close();
            }

            UPDATE_MOCTK_UDF01();
        }
        public void ADD_MOCTK_MOCTL_TB_WKF_EXTERNAL_TASK(string TK001, string TK002)
        {

            DataTable DT = SEARCH_MOCTK_MOCTL(TK001, TK002);
            DataTable DTUPFDEP = SEARCHUOFDEP(DT.Rows[0]["CREATOR"].ToString());

            string account = DT.Rows[0]["CREATOR"].ToString();
            string groupId = DT.Rows[0]["GROUP_ID"].ToString();
            string jobTitleId = DT.Rows[0]["TITLE_ID"].ToString();
            string fillerName = DT.Rows[0]["MV002"].ToString();
            string fillerUserGuid = DT.Rows[0]["USER_GUID"].ToString();

            string DEPNAME = DTUPFDEP.Rows[0]["DEPNAME"].ToString();
            string DEPNO = DTUPFDEP.Rows[0]["DEPNO"].ToString();

            string EXTERNAL_FORM_NBR = DT.Rows[0]["TK001"].ToString().Trim() + DT.Rows[0]["TK002"].ToString().Trim();

            int rowscounts = 0;

            XmlDocument xmlDoc = new XmlDocument();
            //建立根節點
            XmlElement Form = xmlDoc.CreateElement("Form");

            //正式的id
            string FORM_ID = SEARCHFORM_UOF_VERSION_ID("MOCI07.託外退貨單");

            if (!string.IsNullOrEmpty(FORM_ID))
            {
                Form.SetAttribute("formVersionId", FORM_ID);
            }


            Form.SetAttribute("urgentLevel", "2");
            //加入節點底下
            xmlDoc.AppendChild(Form);

            ////建立節點Applicant
            XmlElement Applicant = xmlDoc.CreateElement("Applicant");
            Applicant.SetAttribute("account", account);
            Applicant.SetAttribute("groupId", groupId);
            Applicant.SetAttribute("jobTitleId", jobTitleId);
            //加入節點底下
            Form.AppendChild(Applicant);

            //建立節點 Comment
            XmlElement Comment = xmlDoc.CreateElement("Comment");
            Comment.InnerText = "申請者意見";
            //加入至節點底下
            Applicant.AppendChild(Comment);

            //建立節點 FormFieldValue
            XmlElement FormFieldValue = xmlDoc.CreateElement("FormFieldValue");
            //加入至節點底下
            Form.AppendChild(FormFieldValue);

            //建立節點FieldItem
            //ID 表單編號	
            XmlElement FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "ID");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);


            //建立節點FieldItem
            //TK001	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TK001");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TK001"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");            
            FormFieldValue.AppendChild(FieldItem);
            //加入至members節點底下
            //建立節點FieldItem

            //TK002	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TK002");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TK002"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            FormFieldValue.AppendChild(FieldItem);
            //加入至members節點底下

            //建立節點FieldItem
            //TK003	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TK003");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TK003"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            FormFieldValue.AppendChild(FieldItem);
            //加入至members節點底下

            //建立節點FieldItem
            //TK004	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TK004");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TK004"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            FormFieldValue.AppendChild(FieldItem);
            //加入至members節點底下

            //建立節點FieldItem
            //TK010	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TK010");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TK010"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            FormFieldValue.AppendChild(FieldItem);
            //加入至members節點底下

            //建立節點FieldItem
            //TK011	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TK011");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TK011"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            FormFieldValue.AppendChild(FieldItem);
            //加入至members節點底下

            //建立節點FieldItem
            //TK012	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TK012");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TK012"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            FormFieldValue.AppendChild(FieldItem);
            //加入至members節點底下

            //建立節點FieldItem
            //TK013	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TK013");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TK013"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            FormFieldValue.AppendChild(FieldItem);
            //加入至members節點底下

            //建立節點FieldItem
            //TK030	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TK030");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TK030"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            FormFieldValue.AppendChild(FieldItem);
            //加入至members節點底下

            //建立節點FieldItem
            //TK031	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TK031");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TK031"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            FormFieldValue.AppendChild(FieldItem);
            //加入至members節點底下
            

            //DataGrid
            //建立節點FieldItem
            //MOCTL
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "MOCTL");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點 DataGrid
            XmlElement DataGrid = xmlDoc.CreateElement("DataGrid");
            //DataGrid 加入至 TB 節點底下
            XmlNode PURTD = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='MOCTL']");
            PURTD.AppendChild(DataGrid);


            foreach (DataRow od in DT.Rows)
            {
                // 新增 Row
                XmlElement Row = xmlDoc.CreateElement("Row");
                Row.SetAttribute("order", (rowscounts).ToString());

                //Row	TL003
                XmlElement Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TL003");
                Cell.SetAttribute("fieldValue", od["TL003"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TL004
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TL004");
                Cell.SetAttribute("fieldValue", od["TL004"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);
                //Row
                //Row	TL005
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TL005");
                Cell.SetAttribute("fieldValue", od["TL005"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);
                //Row

                //Row	TL006
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TL006");
                Cell.SetAttribute("fieldValue", od["TL006"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);
                //Row
                //Row	TL007
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TL007");
                Cell.SetAttribute("fieldValue", od["TL007"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);
                //Row

                //Row	TL008
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TL008");
                Cell.SetAttribute("fieldValue", od["TL008"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);
                //Row

                //Row	TL013
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TL013");
                Cell.SetAttribute("fieldValue", od["TL013"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);
                //Row

                //Row	TL014
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TL014");
                Cell.SetAttribute("fieldValue", od["TL014"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);
                //Row          

                //Row	TL015
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TL015");
                Cell.SetAttribute("fieldValue", od["TL015"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);
                //Row

                //Row	TL016
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TL016");
                Cell.SetAttribute("fieldValue", od["TL016"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);
                //Row

                //Row	TL031
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TL031");
                Cell.SetAttribute("fieldValue", od["TL031"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);
                //Row

                //Row	TL032
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TL032");
                Cell.SetAttribute("fieldValue", od["TL032"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);
                //Row




                rowscounts = rowscounts + 1;

                //DataGrid PURTM
                XmlNode DataGridS = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='MOCTL']/DataGrid");
                DataGridS.AppendChild(Row);

            }


            ////用ADDTACK，直接啟動起單
            //ADDTACK(Form);

            //ADD TO DB
            ////string connectionString = ConfigurationManager.ConnectionStrings["dbUOF"].ToString();

            //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
            //sqlConn = new SqlConnection(connectionString);

            //20210902密
            Class1 TKID = new Class1();//用new 建立類別實體
            SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

            //資料庫使用者密碼解密
            sqlsb.Password = TKID.Decryption(sqlsb.Password);
            sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

            String connectionString;
            sqlConn = new SqlConnection(sqlsb.ConnectionString);
            connectionString = sqlConn.ConnectionString.ToString();

            StringBuilder queryString = new StringBuilder();




            queryString.AppendFormat(@" INSERT INTO [{0}].dbo.TB_WKF_EXTERNAL_TASK
                                         (EXTERNAL_TASK_ID,FORM_INFO,STATUS,EXTERNAL_FORM_NBR)
                                        VALUES (NEWID(),@XML,2,'{1}')
                                        ", DBNAME, EXTERNAL_FORM_NBR);

            try
            {
                using (SqlConnection connection = new SqlConnection(connectionString))
                {

                    SqlCommand command = new SqlCommand(queryString.ToString(), connection);
                    command.Parameters.Add("@XML", SqlDbType.NVarChar).Value = Form.OuterXml;

                    command.Connection.Open();

                    int count = command.ExecuteNonQuery();

                    connection.Close();
                    connection.Dispose();

                }
            }
            catch
            {

            }
            finally
            {

            }
        }

        public DataTable SEARCH_MOCTK_MOCTL(string TK001, string TK002)
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);


                sbSql.Clear();
                sbSqlQuery.Clear();

                //庫存數量看LA009 IN ('20004','20006','20008','20019','20020'

                sbSql.AppendFormat(@"  
                                    
                                   SELECT *
                                    ,USER_GUID,NAME
                                    ,(SELECT TOP 1 GROUP_ID FROM [192.168.1.223].[UOF].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'GROUP_ID'
                                    ,(SELECT TOP 1 TITLE_ID FROM [192.168.1.223].[UOF].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'TITLE_ID'
                                    FROM 
                                    (
                                    SELECT 

 
                                    [MOCTK].[COMPANY]
                                    ,[MOCTK].[CREATOR]
                                    ,[MOCTK].[USR_GROUP]
                                    ,[MOCTK].[CREATE_DATE]
                                    ,[MOCTK].[MODIFIER]
                                    ,[MOCTK].[MODI_DATE]
                                    ,[MOCTK].[FLAG]
                                    ,[MOCTK].[CREATE_TIME]
                                    ,[MOCTK].[MODI_TIME]
                                    ,[MOCTK].[TRANS_TYPE]
                                    ,[MOCTK].[TRANS_NAME]
                                    ,[MOCTK].[sync_date]
                                    ,[MOCTK].[sync_time]
                                    ,[MOCTK].[sync_mark]
                                    ,[MOCTK].[sync_count]
                                    ,[MOCTK].[DataUser]
                                    ,[MOCTK].[DataGroup]
                                    ,[MOCTK].[TK001]
                                    ,[MOCTK].[TK002]
                                    ,[MOCTK].[TK003]
                                    ,[MOCTK].[TK004]
                                    ,[MOCTK].[TK005]
                                    ,[MOCTK].[TK006]
                                    ,[MOCTK].[TK007]
                                    ,[MOCTK].[TK008]
                                    ,[MOCTK].[TK009]
                                    ,[MOCTK].[TK010]
                                    ,[MOCTK].[TK011]
                                    ,[MOCTK].[TK012]
                                    ,[MOCTK].[TK013]
                                    ,[MOCTK].[TK014]
                                    ,[MOCTK].[TK015]
                                    ,[MOCTK].[TK016]
                                    ,[MOCTK].[TK017]
                                    ,[MOCTK].[TK018]
                                    ,[MOCTK].[TK019]
                                    ,[MOCTK].[TK020]
                                    ,[MOCTK].[TK021]
                                    ,[MOCTK].[TK022]
                                    ,[MOCTK].[TK023]
                                    ,[MOCTK].[TK024]
                                    ,[MOCTK].[TK025]
                                    ,[MOCTK].[TK026]
                                    ,[MOCTK].[TK027]
                                    ,[MOCTK].[TK028]
                                    ,[MOCTK].[TK029]
                                    ,[MOCTK].[TK030]
                                    ,[MOCTK].[TK031]
                                    ,[MOCTK].[TK032]
                                    ,[MOCTK].[TK033]
                                    ,[MOCTK].[TK034]
                                    ,[MOCTK].[TK035]
                                    ,[MOCTK].[TK036]
                                    ,[MOCTK].[TK037]
                                    ,[MOCTK].[TK038]
                                    ,[MOCTK].[TK039]
                                    ,[MOCTK].[TK040]
                                    ,[MOCTK].[TK041]
                                    ,[MOCTK].[TK042]
                                    ,[MOCTK].[TK043]
                                    ,[MOCTK].[TK044]
                                    ,[MOCTK].[TK045]
                                    ,[MOCTK].[TK046]
                                    ,[MOCTK].[TK047]
                                    ,[MOCTK].[TK048]
                                    ,[MOCTK].[TK049]
                                    ,[MOCTK].[TK050]
                                    ,[MOCTK].[TK051]
                                    ,[MOCTK].[TK052]
                                    ,[MOCTK].[TK053]
                                    ,[MOCTK].[TK054]
                                    ,[MOCTK].[TK055]
                                    ,[MOCTK].[UDF01] AS 'MOCTKUDF01'
                                    ,[MOCTK].[UDF02] AS 'MOCTKUDF02'
                                    ,[MOCTK].[UDF03] AS 'MOCTKUDF03'
                                    ,[MOCTK].[UDF04] AS 'MOCTKUDF04'
                                    ,[MOCTK].[UDF05] AS 'MOCTKUDF05'
                                    ,[MOCTK].[UDF06] AS 'MOCTKUDF06'
                                    ,[MOCTK].[UDF07] AS 'MOCTKUDF07'
                                    ,[MOCTK].[UDF08] AS 'MOCTKUDF08' 
                                    ,[MOCTK].[UDF09] AS 'MOCTKUDF09'
                                    ,[MOCTK].[UDF10] AS 'MOCTKUDF10'
                                    ,[MOCTL].[TL001]
                                    ,[MOCTL].[TL002]
                                    ,[MOCTL].[TL003]
                                    ,[MOCTL].[TL004]
                                    ,[MOCTL].[TL005]
                                    ,[MOCTL].[TL006]
                                    ,[MOCTL].[TL007]
                                    ,[MOCTL].[TL008]
                                    ,[MOCTL].[TL009]
                                    ,[MOCTL].[TL010]
                                    ,[MOCTL].[TL011]
                                    ,[MOCTL].[TL012]
                                    ,[MOCTL].[TL013]
                                    ,[MOCTL].[TL014]
                                    ,[MOCTL].[TL015]
                                    ,[MOCTL].[TL016]
                                    ,[MOCTL].[TL017]
                                    ,[MOCTL].[TL018]
                                    ,[MOCTL].[TL019]
                                    ,[MOCTL].[TL020]
                                    ,[MOCTL].[TL021]
                                    ,[MOCTL].[TL022]
                                    ,[MOCTL].[TL023]
                                    ,[MOCTL].[TL024]
                                    ,[MOCTL].[TL025]
                                    ,[MOCTL].[TL026]
                                    ,[MOCTL].[TL027]
                                    ,[MOCTL].[TL028]
                                    ,[MOCTL].[TL029]
                                    ,[MOCTL].[TL030]
                                    ,[MOCTL].[TL031]
                                    ,[MOCTL].[TL032]
                                    ,[MOCTL].[TL033]
                                    ,[MOCTL].[TL034]
                                    ,[MOCTL].[TL035]
                                    ,[MOCTL].[TL036]
                                    ,[MOCTL].[TL037]
                                    ,[MOCTL].[TL038]
                                    ,[MOCTL].[TL039]
                                    ,[MOCTL].[TL040]
                                    ,[MOCTL].[TL041]
                                    ,[MOCTL].[TL042]
                                    ,[MOCTL].[TL043]
                                    ,[MOCTL].[TL044]
                                    ,[MOCTL].[TL045]
                                    ,[MOCTL].[TL046]
                                    ,[MOCTL].[TL047]
                                    ,[MOCTL].[TL048]
                                    ,[MOCTL].[TL049]
                                    ,[MOCTL].[TL500]
                                    ,[MOCTL].[TL501]
                                    ,[MOCTL].[TL502]
                                    ,[MOCTL].[TL503]
                                    ,[MOCTL].[TL504]
                                    ,[MOCTL].[TL505]
                                    ,[MOCTL].[TL506]
                                    ,[MOCTL].[TL507]
                                    ,[MOCTL].[UDF01]  AS 'MOCTLUDF01'
                                    ,[MOCTL].[UDF02]  AS 'MOCTLUDF02'
                                    ,[MOCTL].[UDF03]  AS 'MOCTLUDF03'
                                    ,[MOCTL].[UDF04]  AS 'MOCTLUDF04'
                                    ,[MOCTL].[UDF05]  AS 'MOCTLUDF05'
                                    ,[MOCTL].[UDF06]  AS 'MOCTLUDF06'
                                    ,[MOCTL].[UDF07]  AS 'MOCTLUDF07'
                                    ,[MOCTL].[UDF08]  AS 'MOCTLUDF08'
                                    ,[MOCTL].[UDF09]  AS 'MOCTLUDF09'
                                    ,[MOCTL].[UDF10]  AS 'MOCTLUDF10'

                                    ,[TB_EB_USER].USER_GUID,NAME
                                    ,(SELECT TOP 1 MV002 FROM [TK].dbo.CMSMV WHERE MV001=MOCTK.CREATOR) AS 'MV002'

                                    FROM [test0923].dbo.MOCTL,[test0923].dbo.MOCTK
                                    LEFT JOIN [192.168.1.223].[UOF].[dbo].[TB_EB_USER] ON [TB_EB_USER].ACCOUNT=MOCTK.CREATOR COLLATE Chinese_Taiwan_Stroke_BIN
                                    WHERE 1=1
                                    AND TK001=TL001 AND TK002=TL002
                                    AND TK001='{0}' AND TK002='{1}'
                                    ) AS TEMP
                                    
                              
                                    ", TK001, TK002);


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    return ds1.Tables["ds1"];

                }
                else
                {
                    return null;
                }

            }
            catch
            {
                return null;
            }
            finally
            {
                sqlConn.Close();
            }
        }

        public void UPDATE_MOCTK_UDF01()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dbconn"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sqlConn.Close();
                sqlConn.Open();
                tran = sqlConn.BeginTransaction();

                sbSql.Clear();

                sbSql.AppendFormat(@"
                                    UPDATE  [test0923].dbo.MOCTK
                                    SET UDF01 = 'UOF'                                   
                                    WHERE  UDF01 IN ('Y','y')

                                    ");

                cmd.Connection = sqlConn;
                cmd.CommandTimeout = 60;
                cmd.CommandText = sbSql.ToString();
                cmd.Transaction = tran;
                result = cmd.ExecuteNonQuery();

                if (result == 0)
                {
                    tran.Rollback();    //交易取消
                }
                else
                {
                    tran.Commit();      //執行交易  
                }

            }
            catch
            {

            }

            finally
            {
                sqlConn.Close();
            }
        }

        public void NEW_MOCTF_MOCTG()
        {

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp22"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                DataSet ds1 = new DataSet();
                SqlDataAdapter adapter1 = new SqlDataAdapter();
                SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();

                sbSql.Clear();
                sbSqlQuery.Clear();

                //TL006='N' AND (UDF01 IN ('Y','y') ) 
                sbSql.AppendFormat(@" 
                                    SELECT TF001,TF002,UDF01
                                    FROM [test0923].dbo.MOCTF
                                    WHERE TF006='N'                                  
                                    AND UDF01 IN ('Y','y')
                                    ORDER BY TF001,TF002


                                    ");

                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");


                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    foreach (DataRow dr in ds1.Tables["ds1"].Rows)
                    {
                        ADD_MOCTF_MOCTG_TB_WKF_EXTERNAL_TASK(dr["TF001"].ToString().Trim(), dr["TF002"].ToString().Trim());
                    }

                }
                else
                {

                }

            }
            catch
            {

            }
            finally
            {
                sqlConn.Close();
            }

            UPDATE_MOCTF_UDF01();
        }
        public void ADD_MOCTF_MOCTG_TB_WKF_EXTERNAL_TASK(string TF001, string TF002)
        {

            DataTable DT = SEARCH_MOCTF_MOCTG(TF001, TF002);
            DataTable DTUPFDEP = SEARCHUOFDEP(DT.Rows[0]["CREATOR"].ToString());

            string account = DT.Rows[0]["CREATOR"].ToString();
            string groupId = DT.Rows[0]["GROUP_ID"].ToString();
            string jobTitleId = DT.Rows[0]["TITLE_ID"].ToString();
            string fillerName = DT.Rows[0]["MV002"].ToString();
            string fillerUserGuid = DT.Rows[0]["USER_GUID"].ToString();

            string DEPNAME = DTUPFDEP.Rows[0]["DEPNAME"].ToString();
            string DEPNO = DTUPFDEP.Rows[0]["DEPNO"].ToString();

            string EXTERNAL_FORM_NBR = DT.Rows[0]["TF001"].ToString().Trim() + DT.Rows[0]["TF002"].ToString().Trim();

            int rowscounts = 0;

            XmlDocument xmlDoc = new XmlDocument();
            //建立根節點
            XmlElement Form = xmlDoc.CreateElement("Form");

            //正式的id
            string FORM_ID = SEARCHFORM_UOF_VERSION_ID("MOCI05.生產入庫單");

            if (!string.IsNullOrEmpty(FORM_ID))
            {
                Form.SetAttribute("formVersionId", FORM_ID);
            }


            Form.SetAttribute("urgentLevel", "2");
            //加入節點底下
            xmlDoc.AppendChild(Form);

            ////建立節點Applicant
            XmlElement Applicant = xmlDoc.CreateElement("Applicant");
            Applicant.SetAttribute("account", account);
            Applicant.SetAttribute("groupId", groupId);
            Applicant.SetAttribute("jobTitleId", jobTitleId);
            //加入節點底下
            Form.AppendChild(Applicant);

            //建立節點 Comment
            XmlElement Comment = xmlDoc.CreateElement("Comment");
            Comment.InnerText = "申請者意見";
            //加入至節點底下
            Applicant.AppendChild(Comment);

            //建立節點 FormFieldValue
            XmlElement FormFieldValue = xmlDoc.CreateElement("FormFieldValue");
            //加入至節點底下
            Form.AppendChild(FormFieldValue);

            //建立節點FieldItem
            //ID 表單編號	
            XmlElement FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "ID");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);


            //建立節點FieldItem
            //TF001	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TF001");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TF001"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            FormFieldValue.AppendChild(FieldItem);
            //加入至members節點底下

            //建立節點FieldItem
            //TF002	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TF002");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TF002"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            FormFieldValue.AppendChild(FieldItem);
            //加入至members節點底下

            //建立節點FieldItem
            //TF003	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TF003");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TF003"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            FormFieldValue.AppendChild(FieldItem);
            //加入至members節點底下

            //建立節點FieldItem
            //TF011	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TF011");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TF011"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            FormFieldValue.AppendChild(FieldItem);
            //加入至members節點底下



            //DataGrid
            //建立節點FieldItem
            //MOCTG
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "MOCTG");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點 DataGrid
            XmlElement DataGrid = xmlDoc.CreateElement("DataGrid");
            //DataGrid 加入至 TB 節點底下
            XmlNode PURTD = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='MOCTG']");
            PURTD.AppendChild(DataGrid);


            foreach (DataRow od in DT.Rows)
            {
                // 新增 Row
                XmlElement Row = xmlDoc.CreateElement("Row");
                Row.SetAttribute("order", (rowscounts).ToString());

                //Row	TG003
                XmlElement Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TG003");
                Cell.SetAttribute("fieldValue", od["TG003"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	TG004
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TG004");
                Cell.SetAttribute("fieldValue", od["TG004"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);
                //Row

                //Row	TG005
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TG005");
                Cell.SetAttribute("fieldValue", od["TG005"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);
                //Row

                //Row	TG006
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TG006");
                Cell.SetAttribute("fieldValue", od["TG006"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);
                //Row

                //Row	TG007
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TG007");
                Cell.SetAttribute("fieldValue", od["TG007"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);
                //Row

                //Row	TG010
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TG010");
                Cell.SetAttribute("fieldValue", od["TG010"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);
                //Row

                //Row	TG011
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TG011");
                Cell.SetAttribute("fieldValue", od["TG011"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);
                //Row

                //Row	TG017
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TG017");
                Cell.SetAttribute("fieldValue", od["TG017"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);
                //Row

                //Row	TG013
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TG013");
                Cell.SetAttribute("fieldValue", od["TG013"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);
                //Row

                //Row	TG014
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TG014");
                Cell.SetAttribute("fieldValue", od["TG014"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);
                //Row

                //Row	TG015
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TG015");
                Cell.SetAttribute("fieldValue", od["TG015"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);
                //Row

                //Row	TG018
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TG018");
                Cell.SetAttribute("fieldValue", od["TG018"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);
                //Row

                //Row	TG019
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TG019");
                Cell.SetAttribute("fieldValue", od["TG019"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);
                //Row

                rowscounts = rowscounts + 1;

                //DataGrid PURTM
                XmlNode DataGridS = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='MOCTG']/DataGrid");
                DataGridS.AppendChild(Row);

            }


            ////用ADDTACK，直接啟動起單
            //ADDTACK(Form);

            //ADD TO DB
            ////string connectionString = ConfigurationManager.ConnectionStrings["dbUOF"].ToString();

            //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
            //sqlConn = new SqlConnection(connectionString);

            //20210902密
            Class1 TKID = new Class1();//用new 建立類別實體
            SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

            //資料庫使用者密碼解密
            sqlsb.Password = TKID.Decryption(sqlsb.Password);
            sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

            String connectionString;
            sqlConn = new SqlConnection(sqlsb.ConnectionString);
            connectionString = sqlConn.ConnectionString.ToString();

            StringBuilder queryString = new StringBuilder();




            queryString.AppendFormat(@" INSERT INTO [{0}].dbo.TB_WKF_EXTERNAL_TASK
                                         (EXTERNAL_TASK_ID,FORM_INFO,STATUS,EXTERNAL_FORM_NBR)
                                        VALUES (NEWID(),@XML,2,'{1}')
                                        ", DBNAME, EXTERNAL_FORM_NBR);

            try
            {
                using (SqlConnection connection = new SqlConnection(connectionString))
                {

                    SqlCommand command = new SqlCommand(queryString.ToString(), connection);
                    command.Parameters.Add("@XML", SqlDbType.NVarChar).Value = Form.OuterXml;

                    command.Connection.Open();

                    int count = command.ExecuteNonQuery();

                    connection.Close();
                    connection.Dispose();

                }
            }
            catch
            {

            }
            finally
            {

            }
        }

        public DataTable SEARCH_MOCTF_MOCTG(string TK001, string TK002)
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);


                sbSql.Clear();
                sbSqlQuery.Clear();

                //庫存數量看LA009 IN ('20004','20006','20008','20019','20020'

                sbSql.AppendFormat(@"  
                                    
                                  SELECT *
                                    ,USER_GUID,NAME
                                    ,(SELECT TOP 1 GROUP_ID FROM [192.168.1.223].[UOF].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'GROUP_ID'
                                    ,(SELECT TOP 1 TITLE_ID FROM [192.168.1.223].[UOF].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'TITLE_ID'
                                    FROM 
                                    (
                                    SELECT 

                                    [MOCTF].[COMPANY]
                                    ,[MOCTF].[CREATOR]
                                    ,[MOCTF].[USR_GROUP]
                                    ,[MOCTF].[CREATE_DATE]
                                    ,[MOCTF].[MODIFIER]
                                    ,[MOCTF].[MODI_DATE]
                                    ,[MOCTF].[FLAG]
                                    ,[MOCTF].[CREATE_TIME]
                                    ,[MOCTF].[MODI_TIME]
                                    ,[MOCTF].[TRANS_TYPE]
                                    ,[MOCTF].[TRANS_NAME]
                                    ,[MOCTF].[sync_date]
                                    ,[MOCTF].[sync_time]
                                    ,[MOCTF].[sync_mark]
                                    ,[MOCTF].[sync_count]
                                    ,[MOCTF].[DataUser]
                                    ,[MOCTF].[DataGroup]
                                    ,[MOCTF].[TF001]
                                    ,[MOCTF].[TF002]
                                    ,[MOCTF].[TF003]
                                    ,[MOCTF].[TF004]
                                    ,[MOCTF].[TF005]
                                    ,[MOCTF].[TF006]
                                    ,[MOCTF].[TF007]
                                    ,[MOCTF].[TF008]
                                    ,[MOCTF].[TF009]
                                    ,[MOCTF].[TF010]
                                    ,[MOCTF].[TF011]
                                    ,[MOCTF].[TF012]
                                    ,[MOCTF].[TF013]
                                    ,[MOCTF].[TF014]
                                    ,[MOCTF].[TF015]
                                    ,[MOCTF].[TF016]
                                    ,[MOCTF].[TF017]
                                    ,[MOCTF].[TF018]
                                    ,[MOCTF].[TF019]
                                    ,[MOCTF].[TF020]
                                    ,[MOCTF].[TF021]
                                    ,[MOCTF].[TF022]
                                    ,[MOCTF].[TF023]
                                    ,[MOCTF].[TF024]
                                    ,[MOCTF].[TF025]
                                    ,[MOCTF].[TF026]
                                    ,[MOCTF].[TF027]
                                    ,[MOCTF].[UDF01] AS 'MOCTFUDF01'
                                    ,[MOCTF].[UDF02] AS 'MOCTFUDF02'
                                    ,[MOCTF].[UDF03] AS 'MOCTFUDF03'
                                    ,[MOCTF].[UDF04] AS 'MOCTFUDF04'
                                    ,[MOCTF].[UDF05] AS 'MOCTFUDF05'
                                    ,[MOCTF].[UDF06] AS 'MOCTFUDF06'
                                    ,[MOCTF].[UDF07] AS 'MOCTFUDF07'
                                    ,[MOCTF].[UDF08] AS 'MOCTFUDF08'
                                    ,[MOCTF].[UDF09] AS 'MOCTFUDF09'
                                    ,[MOCTF].[UDF10] AS 'MOCTFUDF10'
                                    ,[MOCTG].[TG001]
                                    ,[MOCTG].[TG002]
                                    ,[MOCTG].[TG003]
                                    ,[MOCTG].[TG004]
                                    ,[MOCTG].[TG005]
                                    ,[MOCTG].[TG006]
                                    ,[MOCTG].[TG007]
                                    ,[MOCTG].[TG008]
                                    ,[MOCTG].[TG009]
                                    ,[MOCTG].[TG010]
                                    ,[MOCTG].[TG011]
                                    ,[MOCTG].[TG012]
                                    ,[MOCTG].[TG013]
                                    ,[MOCTG].[TG014]
                                    ,[MOCTG].[TG015]
                                    ,[MOCTG].[TG016]
                                    ,[MOCTG].[TG017]
                                    ,[MOCTG].[TG018]
                                    ,[MOCTG].[TG019]
                                    ,[MOCTG].[TG020]
                                    ,[MOCTG].[TG021]
                                    ,[MOCTG].[TG022]
                                    ,[MOCTG].[TG023]
                                    ,[MOCTG].[TG024]
                                    ,[MOCTG].[TG025]
                                    ,[MOCTG].[TG026]
                                    ,[MOCTG].[TG027]
                                    ,[MOCTG].[TG028]
                                    ,[MOCTG].[TG029]
                                    ,[MOCTG].[TG030]
                                    ,[MOCTG].[TG031]
                                    ,[MOCTG].[TG032]
                                    ,[MOCTG].[TG033]
                                    ,[MOCTG].[TG034]
                                    ,[MOCTG].[TG035]
                                    ,[MOCTG].[TG036]
                                    ,[MOCTG].[TG037]
                                    ,[MOCTG].[TG038]
                                    ,[MOCTG].[TG039]
                                    ,[MOCTG].[TG040]
                                    ,[MOCTG].[TG041]
                                    ,[MOCTG].[TG042]
                                    ,[MOCTG].[TG043]
                                    ,[MOCTG].[TG044]
                                    ,[MOCTG].[TG045]
                                    ,[MOCTG].[TG500]
                                    ,[MOCTG].[TG501]
                                    ,[MOCTG].[TG502]
                                    ,[MOCTG].[TG503]
                                    ,[MOCTG].[TG504]
                                    ,[MOCTG].[TG505]
                                    ,[MOCTG].[TG506]
                                    ,[MOCTG].[TG507]
                                    ,[MOCTG].[TG550]
                                    ,[MOCTG].[TG553]
                                    ,[MOCTG].[TG554]
                                    ,[MOCTG].[TG555]
                                    ,[MOCTG].[TG556]
                                    ,[MOCTG].[TG560]
                                    ,[MOCTG].[TG561]
                                    ,[MOCTG].[TG562]
                                    ,[MOCTG].[TG563]
                                    ,[MOCTG].[TG564]
                                    ,[MOCTG].[TG565]
                                    ,[MOCTG].[TG567]
                                    ,[MOCTG].[TG568]
                                    ,[MOCTG].[TG569]
                                    ,[MOCTG].[TG570]
                                    ,[MOCTG].[TG571]
                                    ,[MOCTG].[TG572]
                                    ,[MOCTG].[TG573]
                                    ,[MOCTG].[UDF01] AS 'MOCTGUDF01'
                                    ,[MOCTG].[UDF02] AS 'MOCTGUDF02'
                                    ,[MOCTG].[UDF03] AS 'MOCTGUDF03'
                                    ,[MOCTG].[UDF04] AS 'MOCTGUDF04'
                                    ,[MOCTG].[UDF05] AS 'MOCTGUDF05'
                                    ,[MOCTG].[UDF06] AS 'MOCTGUDF06'
                                    ,[MOCTG].[UDF07] AS 'MOCTGUDF07'
                                    ,[MOCTG].[UDF08] AS 'MOCTGUDF08'
                                    ,[MOCTG].[UDF09] AS 'MOCTGUDF09'
                                    ,[MOCTG].[UDF10] AS 'MOCTGUDF10'
 
                                    ,[TB_EB_USER].USER_GUID,NAME
                                    ,(SELECT TOP 1 MV002 FROM [TK].dbo.CMSMV WHERE MV001=MOCTF.CREATOR) AS 'MV002'

                                    FROM [test0923].dbo.MOCTG,[test0923].dbo.MOCTF
                                    LEFT JOIN [192.168.1.223].[UOF].[dbo].[TB_EB_USER] ON [TB_EB_USER].ACCOUNT=MOCTF.CREATOR COLLATE Chinese_Taiwan_Stroke_BIN
                                    WHERE 1=1
                                    AND TF001=TG001 AND TF002=TG002
                                    AND TF001='{0}' AND TF002='{1}'
                                    ) AS TEMP
                                    
                              
                                    ", TK001, TK002);


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    return ds1.Tables["ds1"];

                }
                else
                {
                    return null;
                }

            }
            catch
            {
                return null;
            }
            finally
            {
                sqlConn.Close();
            }
        }

        public void UPDATE_MOCTF_UDF01()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dbconn"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sqlConn.Close();
                sqlConn.Open();
                tran = sqlConn.BeginTransaction();

                sbSql.Clear();

                sbSql.AppendFormat(@"
                                    UPDATE  [test0923].dbo.MOCTF
                                    SET UDF01 = 'UOF'                                   
                                    WHERE  UDF01 IN ('Y','y')

                                    ");

                cmd.Connection = sqlConn;
                cmd.CommandTimeout = 60;
                cmd.CommandText = sbSql.ToString();
                cmd.Transaction = tran;
                result = cmd.ExecuteNonQuery();

                if (result == 0)
                {
                    tran.Rollback();    //交易取消
                }
                else
                {
                    tran.Commit();      //執行交易  
                }

            }
            catch
            {

            }

            finally
            {
                sqlConn.Close();
            }
        }

        public void NEW_TKRESEARCH_TK_UOF_RESEARCH_1002()
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            string THISYEARS = DateTime.Now.ToString("yyyy");
            //取西元年後2位
            THISYEARS = THISYEARS.Substring(2, 2);
            //THISYEARS = "21";
            string THISYEARSDAYS = DateTime.Now.ToString("yyyy") + "0101";

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sbSql.Clear();
                sbSqlQuery.Clear();



                //核準過TASK_RESULT='0'
                //AND DOC_NBR  LIKE 'QC1002{0}%'

                sbSql.AppendFormat(@"  
                                    SELECT DOC_NBR,*
                                    FROM [UOF].dbo.TB_WKF_TASK
                                    WHERE 1=1
                                    AND TASK_STATUS='2'
                                    AND TASK_RESULT='0'
                                    AND DOC_NBR  LIKE 'RD1002%'
                                    AND DOC_NBR >='RD1002230400001'
                                    AND DOC_NBR COLLATE Chinese_Taiwan_Stroke_BIN NOT IN (SELECT  [RDF1002SN] FROM [192.168.1.105].[TKRESEARCH].[dbo].[TK_UOF_RESEARCH_1002])
                                       
                                    ");


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    foreach (DataRow dr in ds1.Tables["ds1"].Rows)
                    {
                        SEARCHUOFTB_WKF_TASK_RD1002(dr["DOC_NBR"].ToString());
                    }
                }
                else
                {

                }

            }
            catch
            {

            }
            finally
            {
                sqlConn.Close();
            }
        }

        //找出UOF表單的資料，將CURRENT_DOC的內容，轉成xmlDoc
        //從xmlDoc找出各節點的Attributes
        public void SEARCHUOFTB_WKF_TASK_RD1002(string DOC_NBR)
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sbSql.Clear();
                sbSqlQuery.Clear();

                //庫存數量看LA009 IN ('20004','20006','20008','20019','20020'

                sbSql.AppendFormat(@"  
                                    SELECT * 
                                    FROM [UOF].DBO.TB_WKF_TASK 
                                    LEFT JOIN [UOF].[dbo].[TB_EB_USER] ON [TB_EB_USER].USER_GUID=TB_WKF_TASK.USER_GUID
                                    WHERE DOC_NBR LIKE '{0}%'
                              
                                    ", DOC_NBR);


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {                   
                    string RDF1002SN = "";
                    string NAME = "";
                    string RDFrm1002DATE1 = "";
                    string RDFrm1002DATE2 = "";
                    string RDFrm1002CS = "";
                    string RDFrm1002DP = "";
                    string RDFrm1002PD = "";
                    string RDFrm1002ST = "";
                    string RDFrm1002DS = "";

                    string RDFrm1002G7T1 = "";
                    string RDFrm1002G7T2 = "";
                    string RDFrm1002G7T3 = "";
                    string RDFrm1002G7T4 = "";
                    string RDFrm1002G7T5 = "";
                    string RDFrm1002G5T6 = "";
                  


                    XmlDocument xmlDoc = new XmlDocument();              

                    xmlDoc.LoadXml(ds1.Tables["ds1"].Rows[0]["CURRENT_DOC"].ToString());



                    //XmlNode node = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='ID']");
                    try
                    {
                        RDF1002SN = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='RDF1002SN']").Attributes["fieldValue"].Value;
                    }
                    catch { }
                    try
                    {
                        //找出表單申請人 
                        NAME = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='RDFrm1002DATE1']").Attributes["fillerName"].Value;
                    }
                    catch { }
                    try
                    {
                        RDFrm1002DATE1 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='RDFrm1002DATE1']").Attributes["fieldValue"].Value;
                    }
                    catch { }
                    try
                    {
                        RDFrm1002DATE2 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='RDFrm1002DATE2']").Attributes["fieldValue"].Value;
                    }
                    catch { }
                    try
                    {
                        RDFrm1002CS = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='RDFrm1002CS']").Attributes["fieldValue"].Value;
                    }
                    catch { }
                    try
                    {
                        RDFrm1002DP = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='RDFrm1002DP']").Attributes["fieldValue"].Value;
                    }
                    catch { }
                    try
                    {
                        RDFrm1002PD = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='RDFrm1002PD']").Attributes["fieldValue"].Value;
                    }
                    catch { }
                    try
                    {
                        RDFrm1002ST = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='RDFrm1002ST']").Attributes["fieldValue"].Value;
                    }
                    catch { }                

                    try
                    {
                        //把html語法去除 
                        //QCFrm002Cmf = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002Cmf']").Attributes["fieldValue"].Value;

                        string fieldValue1 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='RDFrm1002DS']").Attributes["fieldValue"].Value;

                        string fieldValue2 = Regex.Replace(fieldValue1, @"&#xD;", "");
                        string fieldValue3 = Regex.Replace(fieldValue2, @"&#xA;", "");

                        RDFrm1002DS = fieldValue3;
                    }
                    catch { }

                    try
                    {
                        //把html語法去除 
                        //QCFrm002Cmf = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002Cmf']").Attributes["fieldValue"].Value;

                        string fieldValue1 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='RDFrm1002G7']/DataGrid/Row/Cell[@fieldId='RDFrm1002G7T1']").Attributes["fieldValue"].Value;

                        string fieldValue2 = Regex.Replace(fieldValue1, @"&#xD;", "");
                        string fieldValue3 = Regex.Replace(fieldValue2, @"&#xA;", "");

                        RDFrm1002G7T1 = fieldValue3;
                    }
                    catch { }
                    try
                    {
                        //把html語法去除 
                        //QCFrm002Cmf = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002Cmf']").Attributes["fieldValue"].Value;

                        string fieldValue1 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='RDFrm1002G7']/DataGrid/Row/Cell[@fieldId='RDFrm1002G7T2']").Attributes["fieldValue"].Value;

                        string fieldValue2 = Regex.Replace(fieldValue1, @"[\W_]+", "");
                        string fieldValue3 = Regex.Replace(fieldValue2, @"[0-9A-Za-z]+", "");

                        RDFrm1002G7T2 = fieldValue3;
                    }
                    catch { }
                    try
                    {
                        //把html語法去除 
                        //QCFrm002Cmf = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002Cmf']").Attributes["fieldValue"].Value;

                        string fieldValue1 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='RDFrm1002G7']/DataGrid/Row/Cell[@fieldId='RDFrm1002G7T3']").Attributes["fieldValue"].Value;

                        string fieldValue2 = Regex.Replace(fieldValue1, @"[\W_]+", "");
                        string fieldValue3 = Regex.Replace(fieldValue2, @"[0-9A-Za-z]+", "");

                        RDFrm1002G7T3 = fieldValue3;
                    }
                    catch { }
                    try
                    {
                        //把html語法去除 
                        //QCFrm002Cmf = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002Cmf']").Attributes["fieldValue"].Value;

                        string fieldValue1 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='RDFrm1002G7']/DataGrid/Row/Cell[@fieldId='RDFrm1002G7T4']").Attributes["fieldValue"].Value;

                        string fieldValue2 = Regex.Replace(fieldValue1, @"[\W_]+", "");
                        string fieldValue3 = Regex.Replace(fieldValue2, @"[0-9A-Za-z]+", "");

                        RDFrm1002G7T4 = fieldValue3;
                    }
                    catch { }
                    try
                    {
                        //把html語法去除 
                        //QCFrm002Cmf = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002Cmf']").Attributes["fieldValue"].Value;

                        string fieldValue1 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='RDFrm1002G7']/DataGrid/Row/Cell[@fieldId='RDFrm1002G7T5']").Attributes["fieldValue"].Value;

                        string fieldValue2 = Regex.Replace(fieldValue1, @"[\W_]+", "");
                        string fieldValue3 = Regex.Replace(fieldValue2, @"[0-9A-Za-z]+", "");

                        RDFrm1002G7T5 = fieldValue3;
                    }
                    catch { }
                    try
                    {
                        //把html語法去除 
                        //QCFrm002Cmf = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002Cmf']").Attributes["fieldValue"].Value;

                        string fieldValue1 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='RDFrm1002G7']/DataGrid/Row/Cell[@fieldId='RDFrm1002G5T6']").Attributes["fieldValue"].Value;

                        string fieldValue2 = Regex.Replace(fieldValue1, @"[\W_]+", "");
                        string fieldValue3 = Regex.Replace(fieldValue2, @"[0-9A-Za-z]+", "");

                        RDFrm1002G5T6 = fieldValue3;
                    }
                    catch { }
                    //string OK = "";
                    ADD_TK_UOF_RESEARCH_1002(
                                             RDF1002SN
                                            ,  NAME
                                            ,  RDFrm1002DATE1
                                            ,  RDFrm1002DATE2
                                            ,  RDFrm1002CS
                                            ,  RDFrm1002DP
                                            ,  RDFrm1002PD
                                            ,  RDFrm1002ST
                                            ,  RDFrm1002G7T1
                                            ,  RDFrm1002G7T2
                                            ,  RDFrm1002G7T3
                                            ,  RDFrm1002G7T4
                                            ,  RDFrm1002G7T5
                                            ,  RDFrm1002G5T6
                                            ,  RDFrm1002DS
                                           );


                }
                else
                {

                }

            }
            catch
            {

            }
            finally
            {
                sqlConn.Close();
            }
        }


        public void ADD_TK_UOF_RESEARCH_1002(
                                            string RDF1002SN
                                            , string NAME
                                            , string RDFrm1002DATE1
                                            , string RDFrm1002DATE2
                                            , string RDFrm1002CS
                                            , string RDFrm1002DP
                                            , string RDFrm1002PD
                                            , string RDFrm1002ST
                                            , string RDFrm1002G7T1
                                            , string RDFrm1002G7T2
                                            , string RDFrm1002G7T3
                                            , string RDFrm1002G7T4
                                            , string RDFrm1002G7T5
                                            , string RDFrm1002G5T6
                                            , string RDFrm1002DS
                                            )
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sqlConn.Close();
                sqlConn.Open();
                tran = sqlConn.BeginTransaction();

                sbSql.Clear();

                sbSql.AppendFormat(@"                                    
                                    INSERT INTO [TKRESEARCH].[dbo].[TK_UOF_RESEARCH_1002]
                                    (
                                    [RDF1002SN]
                                    ,[NAME]
                                    ,[RDFrm1002DATE1]
                                    ,[RDFrm1002DATE2]
                                    ,[RDFrm1002CS]
                                    ,[RDFrm1002DP]
                                    ,[RDFrm1002PD]
                                    ,[RDFrm1002ST]
                                    ,[RDFrm1002G7T1]
                                    ,[RDFrm1002G7T2]
                                    ,[RDFrm1002G7T3]
                                    ,[RDFrm1002G7T4]
                                    ,[RDFrm1002G7T5]
                                    ,[RDFrm1002G5T6]
                                    ,[RDFrm1002DS]
                                    )
                                    VALUES
                                    (
                                    '{0}'
                                    ,'{1}'
                                    ,'{2}'
                                    ,'{3}'
                                    ,'{4}'
                                    ,'{5}'
                                    ,'{6}'
                                    ,'{7}'
                                    ,'{8}'
                                    ,'{9}'
                                    ,'{10}'
                                    ,'{11}'
                                    ,'{12}'
                                    ,'{13}'
                                    ,'{14}'
                                    )
                                    ", RDF1002SN
                                    ,NAME
                                    ,RDFrm1002DATE1
                                    ,RDFrm1002DATE2
                                    ,RDFrm1002CS
                                    ,RDFrm1002DP
                                    ,RDFrm1002PD
                                    ,RDFrm1002ST
                                    ,RDFrm1002G7T1
                                    ,RDFrm1002G7T2
                                    ,RDFrm1002G7T3
                                    ,RDFrm1002G7T4
                                    ,RDFrm1002G7T5
                                    ,RDFrm1002G5T6
                                    ,RDFrm1002DS);

                cmd.Connection = sqlConn;
                cmd.CommandTimeout = 60;
                cmd.CommandText = sbSql.ToString();
                cmd.Transaction = tran;
                result = cmd.ExecuteNonQuery();

                if (result == 0)
                {
                    tran.Rollback();    //交易取消
                }
                else
                {
                    tran.Commit();      //執行交易  
                }

            }
            catch
            {

            }

            finally
            {
                sqlConn.Close();
            }
        }

        public void NEW_TKRESEARCH_TK_UOF_DESIGN_1002()
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            string THISYEARS = DateTime.Now.ToString("yyyy");
            //取西元年後2位
            THISYEARS = THISYEARS.Substring(2, 2);
            //THISYEARS = "21";
            string THISYEARSDAYS = DateTime.Now.ToString("yyyy") + "0101";

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sbSql.Clear();
                sbSqlQuery.Clear();



                //核準過TASK_RESULT='0'
                //AND DOC_NBR  LIKE 'QC1002{0}%'
                // 1002.產品設計申請有申請就轉入，不要等核完表單
                sbSql.AppendFormat(@"  
                                        SELECT TB_WKF_FORM.FORM_NAME,DOC_NBR,*
                                        FROM [UOF].dbo.TB_WKF_TASK,[UOF].dbo.TB_WKF_FORM,[UOF].dbo.TB_WKF_FORM_VERSION
                                        WHERE 1=1
                                        AND TB_WKF_TASK.FORM_VERSION_ID=TB_WKF_FORM_VERSION.FORM_VERSION_ID
                                        AND TB_WKF_FORM.FORM_ID=TB_WKF_FORM_VERSION.FORM_ID
                                        AND TB_WKF_FORM.FORM_NAME IN ('1002.產品設計申請')
                                        AND TB_WKF_TASK.TASK_STATUS='1'
                                        AND DOC_NBR COLLATE Chinese_Taiwan_Stroke_BIN NOT IN (SELECT  [FIELDS1] FROM [192.168.1.105].[TKRESEARCH].[dbo].[TK_UOF_DESIGN_1002])
                                       
                                    ");


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    foreach (DataRow dr in ds1.Tables["ds1"].Rows)
                    {
                        SEARCH_UOF_TK_UOF_DESIGN_1002(dr["DOC_NBR"].ToString());
                    }
                }
                else
                {

                }

            }
            catch
            {

            }
            finally
            {
                sqlConn.Close();
            }
        }

        //找出UOF表單的資料，將CURRENT_DOC的內容，轉成xmlDoc
        //從xmlDoc找出各節點的Attributes
        public void SEARCH_UOF_TK_UOF_DESIGN_1002(string DOC_NBR)
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sbSql.Clear();
                sbSqlQuery.Clear();

                //庫存數量看LA009 IN ('20004','20006','20008','20019','20020'

                sbSql.AppendFormat(@"  
                                    SELECT * 
                                    FROM [UOF].DBO.TB_WKF_TASK 
                                    LEFT JOIN [UOF].[dbo].[TB_EB_USER] ON [TB_EB_USER].USER_GUID=TB_WKF_TASK.USER_GUID
                                    WHERE DOC_NBR LIKE '{0}%'
                              
                                    ", DOC_NBR);


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    string FIELDS1 = "";
                    string FIELDS2 = "";
                    string FIELDS3 = "";
                    string FIELDS4 = "";
                    string FIELDS5 = "";
                    string FIELDS6 = "";
                    string FIELDS7 = "";
                    string FIELDS8 = "";
                    string FIELDS9 = "";
                    string FIELDS10 = "";
                    string FIELDS11 = "";
                    string FIELDS12 = "";
                    string FIELDS13 = "";


                    XmlDocument xmlDoc = new XmlDocument();

                    xmlDoc.LoadXml(ds1.Tables["ds1"].Rows[0]["CURRENT_DOC"].ToString());



                    //XmlNode node = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='ID']");
                    try
                    {
                        FIELDS1 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='00001']").Attributes["fieldValue"].Value;
                    }
                    catch { }
                    try
                    {
                        FIELDS2 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='00000']").Attributes["fieldValue"].Value;
                    }
                    catch { }
                    try
                    {
                        FIELDS3 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='00005']").Attributes["fieldValue"].Value;
                    }
                    catch { }
                    try
                    {
                        FIELDS4 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='00012']").Attributes["fieldValue"].Value;
                    }
                    catch { }
                    try
                    {
                        FIELDS5 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='00002']").Attributes["fieldValue"].Value;
                    }
                    catch { }
                    try
                    {
                        FIELDS6 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='00003']").Attributes["fieldValue"].Value;
                    }
                    catch { }
                    try
                    {
                        FIELDS7 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='00004']").Attributes["fieldValue"].Value;
                    }
                    catch { }
                    try
                    {
                        FIELDS8 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='00011']").Attributes["fieldValue"].Value;
                    }
                    catch { }
                    try
                    {
                        FIELDS9 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='00013']").Attributes["fieldValue"].Value;
                    }
                    catch { }
                    try
                    {
                        FIELDS10 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='00010']").Attributes["fieldValue"].Value;
                    }
                    catch { }
                    try
                    {
                        FIELDS12 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='00014']").Attributes["fieldValue"].Value;
                    }
                    catch { }
                    try
                    {
                        FIELDS13 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='00015']").Attributes["fieldValue"].Value;
                    }
                    catch { }


                    try
                    {
                        //把html語法去除 
                        //QCFrm002Cmf = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='QCFrm002Cmf']").Attributes["fieldValue"].Value;

                        string fieldValue1 = xmlDoc.SelectSingleNode($"/Form/FormFieldValue/FieldItem[@fieldId='00009']").Attributes["fieldValue"].Value;

                        string fieldValue2 = Regex.Replace(fieldValue1, @"&#xD;", "");
                        string fieldValue3 = Regex.Replace(fieldValue2, @"&#xA;", "");
                        string fieldValue4 = Regex.Replace(fieldValue3, @"<p>", "");
                        string fieldValue5 = Regex.Replace(fieldValue4, @"</p>", "");

                        FIELDS11 = fieldValue5;
                    }
                    catch { }
                    //string OK = "";
                    ADD_TK_UOF_DESIGN_1002(
                                              FIELDS1
                                            ,  FIELDS2
                                            ,  FIELDS3
                                            ,  FIELDS4
                                            ,  FIELDS5
                                            ,  FIELDS6
                                            ,  FIELDS7
                                            ,  FIELDS8
                                            ,  FIELDS9
                                            ,  FIELDS10
                                            ,  FIELDS11
                                            ,  FIELDS12
                                            ,  FIELDS13

                                           );


                }
                else
                {

                }

            }
            catch
            {

            }
            finally
            {
                sqlConn.Close();
            }
        }


        public void ADD_TK_UOF_DESIGN_1002(
                                            string FIELDS1
                                            , string FIELDS2
                                            , string FIELDS3
                                            , string FIELDS4
                                            , string FIELDS5
                                            , string FIELDS6
                                            , string FIELDS7
                                            , string FIELDS8
                                            , string FIELDS9
                                            , string FIELDS10
                                            , string FIELDS11
                                            , string FIELDS12
                                            , string FIELDS13

                                            )
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sqlConn.Close();
                sqlConn.Open();
                tran = sqlConn.BeginTransaction();

                sbSql.Clear();

                sbSql.AppendFormat(@"                                   
                                    
                                    INSERT INTO [TKRESEARCH].[dbo].[TK_UOF_DESIGN_1002]
                                    (
                                    [FIELDS1]
                                    ,[FIELDS2]
                                    ,[FIELDS3]
                                    ,[FIELDS4]
                                    ,[FIELDS5]
                                    ,[FIELDS6]
                                    ,[FIELDS7]
                                    ,[FIELDS8]
                                    ,[FIELDS9]
                                    ,[FIELDS10]
                                    ,[FIELDS11]
                                    ,[FIELDS12]
                                    ,[FIELDS13]
                                    )
                                    VALUES
                                    (
                                    '{0}'
                                    ,'{1}'
                                    ,'{2}'
                                    ,'{3}'
                                    ,'{4}'
                                    ,'{5}'
                                    ,'{6}'
                                    ,'{7}'
                                    ,'{8}'
                                    ,'{9}'
                                    ,'{10}'
                                    ,'{11}'
                                    ,'{12}'
                                    )
                                    ", FIELDS1
                                    , FIELDS2
                                    , FIELDS3
                                    , FIELDS4
                                    , FIELDS5
                                    , FIELDS6
                                    , FIELDS7
                                    , FIELDS8
                                    , FIELDS9
                                    , FIELDS10
                                    , FIELDS11
                                    , FIELDS12
                                    , FIELDS13 );

                cmd.Connection = sqlConn;
                cmd.CommandTimeout = 60;
                cmd.CommandText = sbSql.ToString();
                cmd.Transaction = tran;
                result = cmd.ExecuteNonQuery();

                if (result == 0)
                {
                    tran.Rollback();    //交易取消
                }
                else
                {
                    tran.Commit();      //執行交易  
                }

            }
            catch
            {

            }

            finally
            {
                sqlConn.Close();
            }
        }

        public void NEW_MOCTC_MOCTE()
        {

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp22"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                DataSet ds1 = new DataSet();
                SqlDataAdapter adapter1 = new SqlDataAdapter();
                SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();

                sbSql.Clear();
                sbSqlQuery.Clear();

                //TL006='N' AND (UDF01 IN ('Y','y') ) 
                sbSql.AppendFormat(@" 
                                    SELECT TC001,TC002,MOCTC.UDF01
                                    FROM [test0923].dbo.MOCTC,[TK].dbo.CMSMQ
                                    WHERE TC001=MQ001
                                    AND MQ010='-1'
                                    AND TC009='N'                                  
                                    AND MOCTC.UDF01 IN ('Y','y')
                                    ORDER BY TC001,TC002


                                    ");

                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");


                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    foreach (DataRow dr in ds1.Tables["ds1"].Rows)
                    {
                        ADD_MOCTC_MOCTE_TB_WKF_EXTERNAL_TASK(dr["TC001"].ToString().Trim(), dr["TC002"].ToString().Trim());
                    }

                }
                else
                {

                }

            }
            catch
            {

            }
            finally
            {
                sqlConn.Close();
            }

            UPDATE_MOCTC_UDF01();
        }
        public void ADD_MOCTC_MOCTE_TB_WKF_EXTERNAL_TASK(string TC001, string TC002)
        {

            DataTable DT = SEARCH_MOCTC_MOCTE(TC001, TC002);
            DataTable DTUPFDEP = SEARCHUOFDEP(DT.Rows[0]["CREATOR"].ToString());

            string account = DT.Rows[0]["CREATOR"].ToString();
            string groupId = DT.Rows[0]["GROUP_ID"].ToString();
            string jobTitleId = DT.Rows[0]["TITLE_ID"].ToString();
            string fillerName = DT.Rows[0]["MV002"].ToString();
            string fillerUserGuid = DT.Rows[0]["USER_GUID"].ToString();

            string DEPNAME = DTUPFDEP.Rows[0]["DEPNAME"].ToString();
            string DEPNO = DTUPFDEP.Rows[0]["DEPNO"].ToString();

            string EXTERNAL_FORM_NBR = DT.Rows[0]["TC001"].ToString().Trim() + DT.Rows[0]["TC002"].ToString().Trim();

            int rowscounts = 0;

            XmlDocument xmlDoc = new XmlDocument();
            //建立根節點
            XmlElement Form = xmlDoc.CreateElement("Form");

            //正式的id
            string FORM_ID = SEARCHFORM_UOF_VERSION_ID("MOCI03.領料單");

            if (!string.IsNullOrEmpty(FORM_ID))
            {
                Form.SetAttribute("formVersionId", FORM_ID);
            }


            Form.SetAttribute("urgentLevel", "2");
            //加入節點底下
            xmlDoc.AppendChild(Form);

            ////建立節點Applicant
            XmlElement Applicant = xmlDoc.CreateElement("Applicant");
            Applicant.SetAttribute("account", account);
            Applicant.SetAttribute("groupId", groupId);
            Applicant.SetAttribute("jobTitleId", jobTitleId);
            //加入節點底下
            Form.AppendChild(Applicant);

            //建立節點 Comment
            XmlElement Comment = xmlDoc.CreateElement("Comment");
            Comment.InnerText = "申請者意見";
            //加入至節點底下
            Applicant.AppendChild(Comment);

            //建立節點 FormFieldValue
            XmlElement FormFieldValue = xmlDoc.CreateElement("FormFieldValue");
            //加入至節點底下
            Form.AppendChild(FormFieldValue);

            //建立節點FieldItem
            //ID 表單編號	
            XmlElement FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "ID");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);


            //建立節點FieldItem
            //TC001	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC001");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC001"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            FormFieldValue.AppendChild(FieldItem);
            //加入至members節點底下

            //TC002	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC002");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC002"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            FormFieldValue.AppendChild(FieldItem);
            //加入至members節點底下

            //TC003	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC003");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC003"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            FormFieldValue.AppendChild(FieldItem);
            //加入至members節點底下

            //TC004	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC004");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC004"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            FormFieldValue.AppendChild(FieldItem);
            //加入至members節點底下

            //TC005	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC005");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC005"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            FormFieldValue.AppendChild(FieldItem);
            //加入至members節點底下

            //TC006	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC006");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC006"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            FormFieldValue.AppendChild(FieldItem);
            //加入至members節點底下



            //DataGrid
            //建立節點FieldItem
            //MOCTG
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "MOCTE");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點 DataGrid
            XmlElement DataGrid = xmlDoc.CreateElement("DataGrid");
            //DataGrid 加入至 TB 節點底下
            XmlNode PURTD = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='MOCTE']");
            PURTD.AppendChild(DataGrid);


            foreach (DataRow od in DT.Rows)
            {
                // 新增 Row
                XmlElement Row = xmlDoc.CreateElement("Row");
                Row.SetAttribute("order", (rowscounts).ToString());

                //Row	TE003
                XmlElement Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TE003");
                Cell.SetAttribute("fieldValue", od["TE003"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");  
                Row.AppendChild(Cell);

                //Row	TE004
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TE004");
                Cell.SetAttribute("fieldValue", od["TE004"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);

                //Row	TE017
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TE017");
                Cell.SetAttribute("fieldValue", od["TE017"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);

                //Row	TE018
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TE018");
                Cell.SetAttribute("fieldValue", od["TE018"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);

                //Row	TE005
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TE005");
                Cell.SetAttribute("fieldValue", od["TE005"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);

                //Row	TE006
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TE006");
                Cell.SetAttribute("fieldValue", od["TE006"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);

                //Row	TE010
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TE010");
                Cell.SetAttribute("fieldValue", od["TE010"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);

                //Row	TE008
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TE008");
                Cell.SetAttribute("fieldValue", od["TE008"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);

                //Row	TE011
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TE011");
                Cell.SetAttribute("fieldValue", od["TE011"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);

                //Row	TE012
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TE012");
                Cell.SetAttribute("fieldValue", od["TE012"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);


                rowscounts = rowscounts + 1;

                //DataGrid PURTM
                XmlNode DataGridS = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='MOCTE']/DataGrid");
                DataGridS.AppendChild(Row);

            }


            ////用ADDTACK，直接啟動起單
            //ADDTACK(Form);

            //ADD TO DB
            ////string connectionString = ConfigurationManager.ConnectionStrings["dbUOF"].ToString();

            //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
            //sqlConn = new SqlConnection(connectionString);

            //20210902密
            Class1 TKID = new Class1();//用new 建立類別實體
            SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

            //資料庫使用者密碼解密
            sqlsb.Password = TKID.Decryption(sqlsb.Password);
            sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

            String connectionString;
            sqlConn = new SqlConnection(sqlsb.ConnectionString);
            connectionString = sqlConn.ConnectionString.ToString();

            StringBuilder queryString = new StringBuilder();




            queryString.AppendFormat(@" INSERT INTO [{0}].dbo.TB_WKF_EXTERNAL_TASK
                                         (EXTERNAL_TASK_ID,FORM_INFO,STATUS,EXTERNAL_FORM_NBR)
                                        VALUES (NEWID(),@XML,2,'{1}')
                                        ", DBNAME, EXTERNAL_FORM_NBR);

            try
            {
                using (SqlConnection connection = new SqlConnection(connectionString))
                {

                    SqlCommand command = new SqlCommand(queryString.ToString(), connection);
                    command.Parameters.Add("@XML", SqlDbType.NVarChar).Value = Form.OuterXml;

                    command.Connection.Open();

                    int count = command.ExecuteNonQuery();

                    connection.Close();
                    connection.Dispose();

                }
            }
            catch
            {

            }
            finally
            {

            }
        }

        public DataTable SEARCH_MOCTC_MOCTE(string TC001, string TC002)
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);


                sbSql.Clear();
                sbSqlQuery.Clear();

                //庫存數量看LA009 IN ('20004','20006','20008','20019','20020'

                sbSql.AppendFormat(@"  
                                     SELECT *
                                    ,USER_GUID,NAME
                                    ,(SELECT TOP 1 GROUP_ID FROM [192.168.1.223].[UOF].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'GROUP_ID'
                                    ,(SELECT TOP 1 TITLE_ID FROM [192.168.1.223].[UOF].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'TITLE_ID'
                                    FROM 
                                    (
                                    SELECT 
                                    [MOCTC].[COMPANY]
                                    ,[MOCTC].[CREATOR]
                                    ,[MOCTC].[USR_GROUP]
                                    ,[MOCTC].[CREATE_DATE]
                                    ,[MOCTC].[MODIFIER]
                                    ,[MOCTC].[MODI_DATE]
                                    ,[MOCTC].[FLAG]
                                    ,[MOCTC].[CREATE_TIME]
                                    ,[MOCTC].[MODI_TIME]
                                    ,[MOCTC].[TRANS_TYPE]
                                    ,[MOCTC].[TRANS_NAME]
                                    ,[MOCTC].[sync_date]
                                    ,[MOCTC].[sync_time]
                                    ,[MOCTC].[sync_mark]
                                    ,[MOCTC].[sync_count]
                                    ,[MOCTC].[DataUser]
                                    ,[MOCTC].[DataGroup]
                                    ,[TC001]
                                    ,[TC002]
                                    ,[TC003]
                                    ,[TC004]
                                    ,[TC005]
                                    ,[TC006]
                                    ,[TC007]
                                    ,[TC008]
                                    ,[TC009]
                                    ,[TC010]
                                    ,[TC011]
                                    ,[TC012]
                                    ,[TC013]
                                    ,[TC014]
                                    ,[TC015]
                                    ,[TC016]
                                    ,[TC017]
                                    ,[TC018]
                                    ,[TC019]
                                    ,[TC020]
                                    ,[TC021]
                                    ,[TC022]
                                    ,[TC023]
                                    ,[TC024]
                                    ,[TC025]
                                    ,[TC026]
                                    ,[TC027]
                                    ,[TC028]
                                    ,[TC029]
                                    ,[TC030]
                                    ,[TC031]
                                    ,[TC032]
                                    ,[MOCTC].[UDF01] AS 'MOCTCUDF01'
                                    ,[MOCTC].[UDF02] AS 'MOCTCUDF02'
                                    ,[MOCTC].[UDF03] AS 'MOCTCUDF03'
                                    ,[MOCTC].[UDF04] AS 'MOCTCUDF04'
                                    ,[MOCTC].[UDF05] AS 'MOCTCUDF05'
                                    ,[MOCTC].[UDF06] AS 'MOCTCUDF06'
                                    ,[MOCTC].[UDF07] AS 'MOCTCUDF07'
                                    ,[MOCTC].[UDF08] AS 'MOCTCUDF08'
                                    ,[MOCTC].[UDF09] AS 'MOCTCUDF09'
                                    ,[MOCTC].[UDF10] AS 'MOCTCUDF10'
                                    ,[TC200]
                                    ,[TC201]
                                    ,[TC202]
                                    ,[TE001]
                                    ,[TE002]
                                    ,[TE003]
                                    ,[TE004]
                                    ,[TE005]
                                    ,[TE006]
                                    ,[TE007]
                                    ,[TE008]
                                    ,[TE009]
                                    ,[TE010]
                                    ,[TE011]
                                    ,[TE012]
                                    ,[TE013]
                                    ,[TE014]
                                    ,[TE015]
                                    ,[TE016]
                                    ,[TE017]
                                    ,[TE018]
                                    ,[TE019]
                                    ,[TE020]
                                    ,[TE021]
                                    ,[TE022]
                                    ,[TE023]
                                    ,[TE024]
                                    ,[TE025]
                                    ,[TE026]
                                    ,[TE027]
                                    ,[TE028]
                                    ,[TE029]
                                    ,[TE030]
                                    ,[TE031]
                                    ,[TE032]
                                    ,[TE033]
                                    ,[TE034]
                                    ,[TE035]
                                    ,[TE036]
                                    ,[TE037]
                                    ,[TE038]
                                    ,[TE039]
                                    ,[TE040]
                                    ,[TE500]
                                    ,[TE501]
                                    ,[TE502]
                                    ,[TE503]
                                    ,[TE504]
                                    ,[TE505]
                                    ,[TE506]
                                    ,[TE507]
                                    ,[TE508]
                                    ,[MOCTE].[UDF01] AS 'MOCTEUDF01'
                                    ,[MOCTE].[UDF02] AS 'MOCTEUDF02'
                                    ,[MOCTE].[UDF03] AS 'MOCTEUDF03'
                                    ,[MOCTE].[UDF04] AS 'MOCTEUDF04'
                                    ,[MOCTE].[UDF05] AS 'MOCTEUDF05'
                                    ,[MOCTE].[UDF06] AS 'MOCTEUDF06'
                                    ,[MOCTE].[UDF07] AS 'MOCTEUDF07'
                                    ,[MOCTE].[UDF08] AS 'MOCTEUDF08'
                                    ,[MOCTE].[UDF09] AS 'MOCTEUDF09'
                                    ,[MOCTE].[UDF10] AS 'MOCTEUDF10'
                                    ,[TE200]
                                    ,[TE201]
 
                                    ,[TB_EB_USER].USER_GUID,NAME
                                    ,(SELECT TOP 1 MV002 FROM [TK].dbo.CMSMV WHERE MV001=MOCTC.CREATOR) AS 'MV002'

                                    FROM [test0923].dbo.MOCTE,[test0923].dbo.MOCTC
                                    LEFT JOIN [192.168.1.223].[UOF].[dbo].[TB_EB_USER] ON [TB_EB_USER].ACCOUNT=MOCTC.CREATOR COLLATE Chinese_Taiwan_Stroke_BIN
                                    WHERE 1=1
                                    AND TC001=TE001 AND TC002=TE002
                                    AND TC001='{0}' AND TC002='{1}'
                                    ) AS TEMP
                                    
                                 
                              
                                    ", TC001, TC002);


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    return ds1.Tables["ds1"];

                }
                else
                {
                    return null;
                }

            }
            catch
            {
                return null;
            }
            finally
            {
                sqlConn.Close();
            }
        }

        public void UPDATE_MOCTC_UDF01()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dbconn"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sqlConn.Close();
                sqlConn.Open();
                tran = sqlConn.BeginTransaction();

                sbSql.Clear();

                sbSql.AppendFormat(@"
                                    UPDATE  [test0923].dbo.MOCTC
                                    SET UDF01 = 'UOF' 
                                    FROM [test0923].dbo.MOCTC,[TK].dbo.CMSMQ
                                    WHERE TC001=MQ001
                                    AND MQ010='-1'
                                    AND TC009='N'                                  
                                    AND MOCTC.UDF01 IN ('Y','y')
                                

                                    ");

                cmd.Connection = sqlConn;
                cmd.CommandTimeout = 60;
                cmd.CommandText = sbSql.ToString();
                cmd.Transaction = tran;
                result = cmd.ExecuteNonQuery();

                if (result == 0)
                {
                    tran.Rollback();    //交易取消
                }
                else
                {
                    tran.Commit();      //執行交易  
                }

            }
            catch
            {

            }

            finally
            {
                sqlConn.Close();
            }
        }

        public void NEW_BOMMC_BOMMD()
        {

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp22"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                DataSet ds1 = new DataSet();
                SqlDataAdapter adapter1 = new SqlDataAdapter();
                SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();

                sbSql.Clear();
                sbSqlQuery.Clear();

                //TL006='N' AND (UDF01 IN ('Y','y') ) 
                sbSql.AppendFormat(@" 
                                    SELECT MC001,UDF01
                                    FROM [TK].dbo.BOMMC
                                    WHERE UDF01 IN ('Y','y')
                                    ORDER BY MC001


                                    ");

                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");


                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    foreach (DataRow dr in ds1.Tables["ds1"].Rows)
                    {
                        ADD_BOMMC_BOMMD_TB_WKF_EXTERNAL_TASK(dr["MC001"].ToString().Trim());
                    }

                }
                else
                {

                }

            }
            catch
            {

            }
            finally
            {
                sqlConn.Close();
            }

            UPDATE_BOMMC_UDF01();
        }
        public void ADD_BOMMC_BOMMD_TB_WKF_EXTERNAL_TASK(string MC001)
        {

            DataTable DT = SEARCH_BOMMC_BOMMD(MC001);
            DataTable DTUPFDEP = SEARCHUOFDEP(DT.Rows[0]["CREATOR"].ToString());

            string account = DT.Rows[0]["CREATOR"].ToString();
            string groupId = DT.Rows[0]["GROUP_ID"].ToString();
            string jobTitleId = DT.Rows[0]["TITLE_ID"].ToString();
            string fillerName = DT.Rows[0]["MV002"].ToString();
            string fillerUserGuid = DT.Rows[0]["USER_GUID"].ToString();

            string DEPNAME = DTUPFDEP.Rows[0]["DEPNAME"].ToString();
            string DEPNO = DTUPFDEP.Rows[0]["DEPNO"].ToString();

            string EXTERNAL_FORM_NBR = DT.Rows[0]["MC001"].ToString().Trim();

            int rowscounts = 0;

            XmlDocument xmlDoc = new XmlDocument();
            //建立根節點
            XmlElement Form = xmlDoc.CreateElement("Form");

            //正式的id
            string FORM_ID = SEARCHFORM_UOF_VERSION_ID("BOM02.BOM表");

            if (!string.IsNullOrEmpty(FORM_ID))
            {
                Form.SetAttribute("formVersionId", FORM_ID);
            }


            Form.SetAttribute("urgentLevel", "2");
            //加入節點底下
            xmlDoc.AppendChild(Form);

            ////建立節點Applicant
            XmlElement Applicant = xmlDoc.CreateElement("Applicant");
            Applicant.SetAttribute("account", account);
            Applicant.SetAttribute("groupId", groupId);
            Applicant.SetAttribute("jobTitleId", jobTitleId);
            //加入節點底下
            Form.AppendChild(Applicant);

            //建立節點 Comment
            XmlElement Comment = xmlDoc.CreateElement("Comment");
            Comment.InnerText = "申請者意見";
            //加入至節點底下
            Applicant.AppendChild(Comment);

            //建立節點 FormFieldValue
            XmlElement FormFieldValue = xmlDoc.CreateElement("FormFieldValue");
            //加入至節點底下
            Form.AppendChild(FormFieldValue);

            //建立節點FieldItem
            //ID 表單編號	
            XmlElement FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "ID");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);


            //建立節點FieldItem
            //MC001	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "MC001");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["MC001"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            FormFieldValue.AppendChild(FieldItem);
            //加入至members節點底下

            //建立節點FieldItem
            //MC024	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "MC024");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["MC024"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            FormFieldValue.AppendChild(FieldItem);
            //加入至members節點底下

            //建立節點FieldItem
            //MC025	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "MC025");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["MC025"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            FormFieldValue.AppendChild(FieldItem);
            //加入至members節點底下

            //建立節點FieldItem
            //MC002	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "MC002");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["MB004"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            FormFieldValue.AppendChild(FieldItem);
            //加入至members節點底下

            //建立節點FieldItem
            //MC004	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "MC004");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["MC004"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            FormFieldValue.AppendChild(FieldItem);
            //加入至members節點底下

            //建立節點FieldItem
            //MC009	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "MC009");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["MC009"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            FormFieldValue.AppendChild(FieldItem);
            //加入至members節點底下

            //建立節點FieldItem
            //MC010	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "MC010");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["MC010"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            FormFieldValue.AppendChild(FieldItem);
            //加入至members節點底下


            //DataGrid
            //建立節點FieldItem
            //BOMMD
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "BOMMD");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點 DataGrid
            XmlElement DataGrid = xmlDoc.CreateElement("DataGrid");
            //DataGrid 加入至 TB 節點底下
            XmlNode PURTD = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='BOMMD']");
            PURTD.AppendChild(DataGrid);


            foreach (DataRow od in DT.Rows)
            {
                // 新增 Row
                XmlElement Row = xmlDoc.CreateElement("Row");
                Row.SetAttribute("order", (rowscounts).ToString());

                //Row	MD002
                XmlElement Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "MD002");
                Cell.SetAttribute("fieldValue", od["MD002"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);

                //Row	MD003
                 Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "MD003");
                Cell.SetAttribute("fieldValue", od["MD003"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);

                //Row	MD035
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "MD035");
                Cell.SetAttribute("fieldValue", od["MD035"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);

                //Row	MD036
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "MD036");
                Cell.SetAttribute("fieldValue", od["MD036"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);

                //Row	MD004
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "MD004");
                Cell.SetAttribute("fieldValue", od["MD004"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);

                //Row	MD006
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "MD006");
                Cell.SetAttribute("fieldValue", od["MD006"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);

                //Row	MD007
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "MD007");
                Cell.SetAttribute("fieldValue", od["MD007"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);

                //Row	MD008
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "MD008");
                Cell.SetAttribute("fieldValue", od["MD008"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);

                //Row	MD016
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "MD016");
                Cell.SetAttribute("fieldValue", od["MD016"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);
                


                rowscounts = rowscounts + 1;

                //DataGrid PURTM
                XmlNode DataGridS = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='BOMMD']/DataGrid");
                DataGridS.AppendChild(Row);

            }


            ////用ADDTACK，直接啟動起單
            //ADDTACK(Form);

            //ADD TO DB
            ////string connectionString = ConfigurationManager.ConnectionStrings["dbUOF"].ToString();

            //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
            //sqlConn = new SqlConnection(connectionString);

            //20210902密
            Class1 TKID = new Class1();//用new 建立類別實體
            SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

            //資料庫使用者密碼解密
            sqlsb.Password = TKID.Decryption(sqlsb.Password);
            sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

            String connectionString;
            sqlConn = new SqlConnection(sqlsb.ConnectionString);
            connectionString = sqlConn.ConnectionString.ToString();

            StringBuilder queryString = new StringBuilder();




            queryString.AppendFormat(@" INSERT INTO [{0}].dbo.TB_WKF_EXTERNAL_TASK
                                         (EXTERNAL_TASK_ID,FORM_INFO,STATUS,EXTERNAL_FORM_NBR)
                                        VALUES (NEWID(),@XML,2,'{1}')
                                        ", DBNAME, EXTERNAL_FORM_NBR);

            try
            {
                using (SqlConnection connection = new SqlConnection(connectionString))
                {

                    SqlCommand command = new SqlCommand(queryString.ToString(), connection);
                    command.Parameters.Add("@XML", SqlDbType.NVarChar).Value = Form.OuterXml;

                    command.Connection.Open();

                    int count = command.ExecuteNonQuery();

                    connection.Close();
                    connection.Dispose();

                }
            }
            catch
            {

            }
            finally
            {

            }
        }

        public DataTable SEARCH_BOMMC_BOMMD(string MC001)
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);


                sbSql.Clear();
                sbSqlQuery.Clear();

                //庫存數量看LA009 IN ('20004','20006','20008','20019','20020'

                sbSql.AppendFormat(@"  
                                     SELECT *
                                    ,USER_GUID,NAME
                                    ,(SELECT TOP 1 GROUP_ID FROM [192.168.1.223].[UOF].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'GROUP_ID'
                                    ,(SELECT TOP 1 TITLE_ID FROM [192.168.1.223].[UOF].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'TITLE_ID'
                                    FROM 
                                    (
                                    SELECT 
                                    [BOMMC].[COMPANY]
                                    ,[BOMMC].[CREATOR]
                                    ,[BOMMC].[USR_GROUP]
                                    ,[BOMMC].[CREATE_DATE]
                                    ,[BOMMC].[MODIFIER]
                                    ,[BOMMC].[MODI_DATE]
                                    ,[BOMMC].[FLAG]
                                    ,[BOMMC].[CREATE_TIME]
                                    ,[BOMMC].[MODI_TIME]
                                    ,[BOMMC].[TRANS_TYPE]
                                    ,[BOMMC].[TRANS_NAME]
                                    ,[BOMMC].[sync_date]
                                    ,[BOMMC].[sync_time]
                                    ,[BOMMC].[sync_mark]
                                    ,[BOMMC].[sync_count]
                                    ,[BOMMC].[DataUser]
                                    ,[BOMMC].[DataGroup]
                                    ,[BOMMC].[MC001]
                                    ,[BOMMC].[MC002]
                                    ,[BOMMC].[MC003]
                                    ,[BOMMC].[MC004]
                                    ,[BOMMC].[MC005]
                                    ,[BOMMC].[MC006]
                                    ,[BOMMC].[MC007]
                                    ,[BOMMC].[MC008]
                                    ,[BOMMC].[MC009]
                                    ,[BOMMC].[MC010]
                                    ,[BOMMC].[MC011]
                                    ,[BOMMC].[MC012]
                                    ,[BOMMC].[MC013]
                                    ,[BOMMC].[MC014]
                                    ,[BOMMC].[MC015]
                                    ,[BOMMC].[MC016]
                                    ,[BOMMC].[MC017]
                                    ,[BOMMC].[MC018]
                                    ,[BOMMC].[MC019]
                                    ,[BOMMC].[MC020]
                                    ,[BOMMC].[MC021]
                                    ,[BOMMC].[MC022]
                                    ,[BOMMC].[MC023]
                                    ,[BOMMC].[MC024]
                                    ,[BOMMC].[MC025]
                                    ,[BOMMC].[MC026]
                                    ,[BOMMC].[MC027]
                                    ,[BOMMC].[UDF01] AS 'BOMMCUDF01'
                                    ,[BOMMC].[UDF02] AS 'BOMMCUDF02'
                                    ,[BOMMC].[UDF03] AS 'BOMMCUDF03'
                                    ,[BOMMC].[UDF04] AS 'BOMMCUDF04'
                                    ,[BOMMC].[UDF05] AS 'BOMMCUDF05'
                                    ,[BOMMC].[UDF06] AS 'BOMMCUDF06'
                                    ,[BOMMC].[UDF07] AS 'BOMMCUDF07'
                                    ,[BOMMC].[UDF08] AS 'BOMMCUDF08'
                                    ,[BOMMC].[UDF09] AS 'BOMMCUDF09'
                                    ,[BOMMC].[UDF10] AS 'BOMMCUDF10'
                                    ,[BOMMD].[MD001]
                                    ,[BOMMD].[MD002]
                                    ,[BOMMD].[MD003]
                                    ,[BOMMD].[MD004]
                                    ,[BOMMD].[MD005]
                                    ,[BOMMD].[MD006]
                                    ,[BOMMD].[MD007]
                                    ,[BOMMD].[MD008]
                                    ,[BOMMD].[MD009]
                                    ,[BOMMD].[MD010]
                                    ,[BOMMD].[MD011]
                                    ,[BOMMD].[MD012]
                                    ,[BOMMD].[MD013]
                                    ,[BOMMD].[MD014]
                                    ,[BOMMD].[MD015]
                                    ,[BOMMD].[MD016]
                                    ,[BOMMD].[MD017]
                                    ,[BOMMD].[MD018]
                                    ,[BOMMD].[MD019]
                                    ,[BOMMD].[MD020]
                                    ,[BOMMD].[MD021]
                                    ,[BOMMD].[MD022]
                                    ,[BOMMD].[MD023]
                                    ,[BOMMD].[MD024]
                                    ,[BOMMD].[MD025]
                                    ,[BOMMD].[MD026]
                                    ,[BOMMD].[MD027]
                                    ,[BOMMD].[MD028]
                                    ,[BOMMD].[MD029]
                                    ,[BOMMD].[MD030]
                                    ,[BOMMD].[MD031]
                                    ,[BOMMD].[MD032]
                                    ,[BOMMD].[MD033]
                                    ,[BOMMD].[MD034]
                                    ,[BOMMD].[MD035]
                                    ,[BOMMD].[MD036]
                                    ,[BOMMD].[MD037]
                                    ,[BOMMD].[MD038]
                                    ,[BOMMD].[UDF01] AS 'BOMMDUDF01'
                                    ,[BOMMD].[UDF02] AS 'BOMMDUDF02'
                                    ,[BOMMD].[UDF03] AS 'BOMMDUDF03'
                                    ,[BOMMD].[UDF04] AS 'BOMMDUDF04'
                                    ,[BOMMD].[UDF05] AS 'BOMMDUDF05'
                                    ,[BOMMD].[UDF06] AS 'BOMMDUDF06'
                                    ,[BOMMD].[UDF07] AS 'BOMMDUDF07'
                                    ,[BOMMD].[UDF08] AS 'BOMMDUDF08'
                                    ,[BOMMD].[UDF09] AS 'BOMMDUDF09'
                                    ,[BOMMD].[UDF10] AS 'BOMMDUDF10'                                  
                                    ,[TB_EB_USER].USER_GUID,NAME
                                    ,(SELECT TOP 1 MV002 FROM [TK].dbo.CMSMV WHERE MV001=BOMMC.CREATOR) AS 'MV002'
                                    ,INVMB1.MB004

                                    FROM [TK].dbo.BOMMD,[TK].dbo.BOMMC
                                    LEFT JOIN [192.168.1.223].[UOF].[dbo].[TB_EB_USER] ON [TB_EB_USER].ACCOUNT=BOMMC.CREATOR COLLATE Chinese_Taiwan_Stroke_BIN
                                    LEFT JOIN [TK].dbo.INVMB INVMB1 ON INVMB1.MB001=MC001
                                    WHERE 1=1
                                    AND MC001=MD001
                                    AND MC001='{0}'
                                    ) AS TEMP
                                    
                                 
                              
                                    ", MC001);


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    return ds1.Tables["ds1"];

                }
                else
                {
                    return null;
                }

            }
            catch
            {
                return null;
            }
            finally
            {
                sqlConn.Close();
            }
        }

        public void UPDATE_BOMMC_UDF01()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dbconn"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sqlConn.Close();
                sqlConn.Open();
                tran = sqlConn.BeginTransaction();

                sbSql.Clear();

                sbSql.AppendFormat(@"
                                    UPDATE  [TK].dbo.BOMMC
                                    SET UDF01 = 'UOF簽核中'                                   
                                    WHERE  UDF01 IN ('Y','y')

                                    ");

                cmd.Connection = sqlConn;
                cmd.CommandTimeout = 60;
                cmd.CommandText = sbSql.ToString();
                cmd.Transaction = tran;
                result = cmd.ExecuteNonQuery();

                if (result == 0)
                {
                    tran.Rollback();    //交易取消
                }
                else
                {
                    tran.Commit();      //執行交易  
                }

            }
            catch
            {

            }

            finally
            {
                sqlConn.Close();
            }
        }

        public void NEW_BOMMJ_BOMMK()
        {

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp22"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                DataSet ds1 = new DataSet();
                SqlDataAdapter adapter1 = new SqlDataAdapter();
                SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();

                sbSql.Clear();
                sbSqlQuery.Clear();

                //TL006='N' AND (UDF01 IN ('Y','y') ) 
                sbSql.AppendFormat(@" 
                                    SELECT MJ001,UDF01
                                    FROM [TK].dbo.BOMMJ
                                    WHERE UDF01 IN ('Y','y')
                                    ORDER BY MJ001


                                    ");

                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");


                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    foreach (DataRow dr in ds1.Tables["ds1"].Rows)
                    {
                        ADD_BOMMJ_BOMMK_TB_WKF_EXTERNAL_TASK(dr["MJ001"].ToString().Trim());
                    }

                }
                else
                {

                }

            }
            catch
            {

            }
            finally
            {
                sqlConn.Close();
            }

            UPDATE_BOMMJ_UDF01();
        }
        public void ADD_BOMMJ_BOMMK_TB_WKF_EXTERNAL_TASK(string MJ001)
        {

            DataTable DT = SEARCH_BOMMJ_BOMMK(MJ001);
            DataTable DTUPFDEP = SEARCHUOFDEP(DT.Rows[0]["CREATOR"].ToString());

            string account = DT.Rows[0]["CREATOR"].ToString();
            string groupId = DT.Rows[0]["GROUP_ID"].ToString();
            string jobTitleId = DT.Rows[0]["TITLE_ID"].ToString();
            string fillerName = DT.Rows[0]["MV002"].ToString();
            string fillerUserGuid = DT.Rows[0]["USER_GUID"].ToString();

            string DEPNAME = DTUPFDEP.Rows[0]["DEPNAME"].ToString();
            string DEPNO = DTUPFDEP.Rows[0]["DEPNO"].ToString();

            string EXTERNAL_FORM_NBR = DT.Rows[0]["MJ001"].ToString().Trim();

            int rowscounts = 0;

            XmlDocument xmlDoc = new XmlDocument();
            //建立根節點
            XmlElement Form = xmlDoc.CreateElement("Form");

            //正式的id
            string FORM_ID = SEARCHFORM_UOF_VERSION_ID("BOM11.EBOM表");

            if (!string.IsNullOrEmpty(FORM_ID))
            {
                Form.SetAttribute("formVersionId", FORM_ID);
            }


            Form.SetAttribute("urgentLevel", "2");
            //加入節點底下
            xmlDoc.AppendChild(Form);

            ////建立節點Applicant
            XmlElement Applicant = xmlDoc.CreateElement("Applicant");
            Applicant.SetAttribute("account", account);
            Applicant.SetAttribute("groupId", groupId);
            Applicant.SetAttribute("jobTitleId", jobTitleId);
            //加入節點底下
            Form.AppendChild(Applicant);

            //建立節點 Comment
            XmlElement Comment = xmlDoc.CreateElement("Comment");
            Comment.InnerText = "申請者意見";
            //加入至節點底下
            Applicant.AppendChild(Comment);

            //建立節點 FormFieldValue
            XmlElement FormFieldValue = xmlDoc.CreateElement("FormFieldValue");
            //加入至節點底下
            Form.AppendChild(FormFieldValue);

            //建立節點FieldItem
            //ID 表單編號	
            XmlElement FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "ID");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);


            //建立節點FieldItem
            //MJ001	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "MJ001");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["MJ001"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            FormFieldValue.AppendChild(FieldItem);
            //加入至members節點底下

            //建立節點FieldItem
            //MMB002	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "MMB002");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["MMB002"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            FormFieldValue.AppendChild(FieldItem);
            //加入至members節點底下

            //建立節點FieldItem
            //MMB003	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "MMB003");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["MMB003"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            FormFieldValue.AppendChild(FieldItem);
            //加入至members節點底下

            //建立節點FieldItem
            //MMB004	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "MMB004");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["MMB004"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            FormFieldValue.AppendChild(FieldItem);
            //加入至members節點底下

            //建立節點FieldItem
            //MJ004	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "MJ004");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["MJ004"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            FormFieldValue.AppendChild(FieldItem);
            //加入至members節點底下




            //DataGrid
            //建立節點FieldItem
            //BOMMK
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "BOMMK");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點 DataGrid
            XmlElement DataGrid = xmlDoc.CreateElement("DataGrid");
            //DataGrid 加入至 TB 節點底下
            XmlNode PURTD = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='BOMMK']");
            PURTD.AppendChild(DataGrid);


            foreach (DataRow od in DT.Rows)
            {
                // 新增 Row
                XmlElement Row = xmlDoc.CreateElement("Row");
                Row.SetAttribute("order", (rowscounts).ToString());

                //Row	MK002
                XmlElement Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "MK002");
                Cell.SetAttribute("fieldValue", od["MK002"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);

                //Row	MK003
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "MK003");
                Cell.SetAttribute("fieldValue", od["MK003"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);

                //Row	DMB002
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "DMB002");
                Cell.SetAttribute("fieldValue", od["DMB002"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);

                //Row	DMB003
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "DMB003");
                Cell.SetAttribute("fieldValue", od["DMB003"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);

                //Row	DMB004
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "DMB004");
                Cell.SetAttribute("fieldValue", od["DMB004"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);

                //Row	MK006
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "MK006");
                Cell.SetAttribute("fieldValue", od["MK006"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);

                //Row	MK007
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "MK007");
                Cell.SetAttribute("fieldValue", od["MK007"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);

                //Row	MK008
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "MK008");
                Cell.SetAttribute("fieldValue", od["MK008"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);


                rowscounts = rowscounts + 1;

                //DataGrid PURTM
                XmlNode DataGridS = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='BOMMK']/DataGrid");
                DataGridS.AppendChild(Row);

            }


            ////用ADDTACK，直接啟動起單
            //ADDTACK(Form);

            //ADD TO DB
            ////string connectionString = ConfigurationManager.ConnectionStrings["dbUOF"].ToString();

            //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
            //sqlConn = new SqlConnection(connectionString);

            //20210902密
            Class1 TKID = new Class1();//用new 建立類別實體
            SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

            //資料庫使用者密碼解密
            sqlsb.Password = TKID.Decryption(sqlsb.Password);
            sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

            String connectionString;
            sqlConn = new SqlConnection(sqlsb.ConnectionString);
            connectionString = sqlConn.ConnectionString.ToString();

            StringBuilder queryString = new StringBuilder();




            queryString.AppendFormat(@" INSERT INTO [{0}].dbo.TB_WKF_EXTERNAL_TASK
                                         (EXTERNAL_TASK_ID,FORM_INFO,STATUS,EXTERNAL_FORM_NBR)
                                        VALUES (NEWID(),@XML,2,'{1}')
                                        ", DBNAME, EXTERNAL_FORM_NBR);

            try
            {
                using (SqlConnection connection = new SqlConnection(connectionString))
                {

                    SqlCommand command = new SqlCommand(queryString.ToString(), connection);
                    command.Parameters.Add("@XML", SqlDbType.NVarChar).Value = Form.OuterXml;

                    command.Connection.Open();

                    int count = command.ExecuteNonQuery();

                    connection.Close();
                    connection.Dispose();

                }
            }
            catch
            {

            }
            finally
            {

            }
        }

        public DataTable SEARCH_BOMMJ_BOMMK(string MJ001)
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);


                sbSql.Clear();
                sbSqlQuery.Clear();

                //庫存數量看LA009 IN ('20004','20006','20008','20019','20020'

                sbSql.AppendFormat(@"  
                                    SELECT *
                                    ,USER_GUID,NAME
                                    ,(SELECT TOP 1 GROUP_ID FROM [192.168.1.223].[UOF].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'GROUP_ID'
                                    ,(SELECT TOP 1 TITLE_ID FROM [192.168.1.223].[UOF].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'TITLE_ID'
                                    FROM 
                                    (
                                    SELECT 
                                    [BOMMJ].[COMPANY]
                                    ,[BOMMJ].[CREATOR]
                                    ,[BOMMJ].[USR_GROUP]
                                    ,[BOMMJ].[CREATE_DATE]
                                    ,[BOMMJ].[MODIFIER]
                                    ,[BOMMJ].[MODI_DATE]
                                    ,[BOMMJ].[FLAG]
                                    ,[BOMMJ].[CREATE_TIME]
                                    ,[BOMMJ].[MODI_TIME]
                                    ,[BOMMJ].[TRANS_TYPE]
                                    ,[BOMMJ].[TRANS_NAME]
                                    ,[BOMMJ].[sync_date]
                                    ,[BOMMJ].[sync_time]
                                    ,[BOMMJ].[sync_mark]
                                    ,[BOMMJ].[sync_count]
                                    ,[BOMMJ].[DataUser]
                                    ,[BOMMJ].[DataGroup]
                                    ,[BOMMJ].[MJ001]
                                    ,[BOMMJ].[MJ004]
                                    ,[BOMMJ].[MJ005]
                                    ,[BOMMJ].[MJ006]
                                    ,[BOMMJ].[MJ007]
                                    ,[BOMMJ].[MJ008]
                                    ,[BOMMJ].[MJ009]
                                    ,[BOMMJ].[MJ010]
                                    ,[BOMMJ].[MJ011]
                                    ,[BOMMJ].[MJ012]
                                    ,[BOMMJ].[MJ013]
                                    ,[BOMMJ].[MJ014]
                                    ,[BOMMJ].[MJ015]
                                    ,[BOMMJ].[MJ016]
                                    ,[BOMMJ].[MJ017]
                                    ,[BOMMJ].[MJ018]
                                    ,[BOMMJ].[MJ019]
                                    ,[BOMMJ].[MJ020]
                                    ,[BOMMJ].[MJ021]
                                    ,[BOMMJ].[MJ022]
                                    ,[BOMMJ].[UDF01] AS 'BOMMJUDF01'
                                    ,[BOMMJ].[UDF02] AS 'BOMMJUDF02'
                                    ,[BOMMJ].[UDF03] AS 'BOMMJUDF03'
                                    ,[BOMMJ].[UDF04] AS 'BOMMJUDF04'
                                    ,[BOMMJ].[UDF05] AS 'BOMMJUDF05'
                                    ,[BOMMJ].[UDF06] AS 'BOMMJUDF06'
                                    ,[BOMMJ].[UDF07] AS 'BOMMJUDF07'
                                    ,[BOMMJ].[UDF08] AS 'BOMMJUDF08'
                                    ,[BOMMJ].[UDF09] AS 'BOMMJUDF09'
                                    ,[BOMMJ].[UDF10] AS 'BOMMJUDF10'
                                    ,[BOMMK].[MK001]
                                    ,[BOMMK].[MK002]
                                    ,[BOMMK].[MK003]
                                    ,[BOMMK].[MK006]
                                    ,[BOMMK].[MK007]
                                    ,[BOMMK].[MK008]
                                    ,[BOMMK].[MK009]
                                    ,[BOMMK].[MK010]
                                    ,[BOMMK].[MK011]
                                    ,[BOMMK].[MK012]
                                    ,[BOMMK].[MK013]
                                    ,[BOMMK].[MK014]
                                    ,[BOMMK].[MK015]
                                    ,[BOMMK].[MK016]
                                    ,[BOMMK].[MK017]
                                    ,[BOMMK].[MK018]
                                    ,[BOMMK].[MK019]
                                    ,[BOMMK].[MK020]
                                    ,[BOMMK].[MK021]
                                    ,[BOMMK].[MK022]
                                    ,[BOMMK].[MK023]
                                    ,[BOMMK].[MK024]
                                    ,[BOMMK].[MK025]
                                    ,[BOMMK].[MK026]
                                    ,[BOMMK].[MK027]
                                    ,[BOMMK].[MK028]
                                    ,[BOMMK].[MK029]
                                    ,[BOMMK].[MK030]
                                    ,[BOMMK].[MK031]
                                    ,[BOMMK].[MK032]
                                    ,[BOMMK].[MK033]
                                    ,[BOMMK].[MK034]
                                    ,[BOMMK].[MK035]
                                    ,[BOMMK].[MK036]
                                    ,[BOMMK].[MK037]
                                    ,[BOMMK].[MK038]
                                    ,[BOMMK].[UDF01] AS 'BOMMKUDF01'
                                    ,[BOMMK].[UDF02] AS 'BOMMKUDF02'
                                    ,[BOMMK].[UDF03] AS 'BOMMKUDF03'
                                    ,[BOMMK].[UDF04] AS 'BOMMKUDF04'
                                    ,[BOMMK].[UDF05] AS 'BOMMKUDF05'
                                    ,[BOMMK].[UDF06] AS 'BOMMKUDF06'
                                    ,[BOMMK].[UDF07] AS 'BOMMKUDF07'
                                    ,[BOMMK].[UDF08] AS 'BOMMKUDF08'
                                    ,[BOMMK].[UDF09] AS 'BOMMKUDF09'
                                    ,[BOMMK].[UDF10] AS 'BOMMKUDF10'                                  
                                    ,[TB_EB_USER].USER_GUID,NAME
                                    ,(SELECT TOP 1 MV002 FROM [TK].dbo.CMSMV WHERE MV001=BOMMJ.CREATOR) AS 'MV002'
                                    ,INVMB1.MB002 MMB002
                                    ,INVMB1.MB003 MMB003
                                    ,INVMB1.MB004 MMB004
                                    ,INVMB2.MB002 DMB002
                                    ,INVMB2.MB003 DMB003
                                    ,INVMB2.MB004 DMB004
                                    FROM [TK].dbo.BOMMK
                                    LEFT JOIN [TK].dbo.INVMB INVMB2 ON INVMB2.MB001=MK003
                                    ,[TK].dbo.BOMMJ
                                    LEFT JOIN [192.168.1.223].[UOF].[dbo].[TB_EB_USER] ON [TB_EB_USER].ACCOUNT=BOMMJ.CREATOR COLLATE Chinese_Taiwan_Stroke_BIN
                                    LEFT JOIN [TK].dbo.INVMB INVMB1 ON INVMB1.MB001=MJ001

                                    WHERE 1=1
                                    AND MJ001=MK001
                                    AND MJ001='{0}'
                                    ) AS TEMP
                                 
                              
                                    ", MJ001);


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    return ds1.Tables["ds1"];

                }
                else
                {
                    return null;
                }

            }
            catch
            {
                return null;
            }
            finally
            {
                sqlConn.Close();
            }
        }

        public void UPDATE_BOMMJ_UDF01()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dbconn"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sqlConn.Close();
                sqlConn.Open();
                tran = sqlConn.BeginTransaction();

                sbSql.Clear();

                sbSql.AppendFormat(@"
                                    UPDATE  [TK].dbo.BOMMJ
                                    SET UDF01 = 'UOF簽核中'                                   
                                    WHERE  UDF01 IN ('Y','y')

                                    ");

                cmd.Connection = sqlConn;
                cmd.CommandTimeout = 60;
                cmd.CommandText = sbSql.ToString();
                cmd.Transaction = tran;
                result = cmd.ExecuteNonQuery();

                if (result == 0)
                {
                    tran.Rollback();    //交易取消
                }
                else
                {
                    tran.Commit();      //執行交易  
                }

            }
            catch
            {

            }

            finally
            {
                sqlConn.Close();
            }
        }

        public void NEW_BOMMI()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dbconn"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sqlConn.Close();
                sqlConn.Open();
                tran = sqlConn.BeginTransaction();

                sbSql.Clear();

                sbSql.AppendFormat(@"
                                    
                                    INSERT INTO [TK].[dbo].[BOMMI]
                                    ([COMPANY]
                                    ,[CREATOR]
                                    ,[USR_GROUP]
                                    ,[CREATE_DATE]
                                    ,[MODIFIER]
                                    ,[MODI_DATE]
                                    ,[FLAG]
                                    ,[CREATE_TIME]
                                    ,[MODI_TIME]
                                    ,[TRANS_TYPE]
                                    ,[TRANS_NAME]
                                    ,[sync_date]
                                    ,[sync_time]
                                    ,[sync_mark]
                                    ,[sync_count]
                                    ,[DataUser]
                                    ,[DataGroup]
                                    ,[MI001]
                                    ,[MI002]
                                    ,[MI003]
                                    ,[MI004]
                                    ,[MI005]
                                    ,[MI006])
                                    SELECT 
                                    [COMPANY]
                                    ,[CREATOR]
                                    ,[USR_GROUP]
                                    ,[CREATE_DATE]
                                    ,[MODIFIER]
                                    ,[MODI_DATE]
                                    ,[FLAG]
                                    ,[CREATE_TIME]
                                    ,[MODI_TIME]
                                    ,[TRANS_TYPE]
                                    ,[TRANS_NAME]
                                    ,[sync_date]
                                    ,[sync_time]
                                    ,[sync_mark]
                                    ,[sync_count]
                                    ,[DataUser]
                                    ,[DataGroup]
                                    ,MB001 [MI001]
                                    ,MB002 [MI002]
                                    ,MB003 [MI003]
                                    ,MB004 [MI004]
                                    ,MB005 [MI005]
                                    ,MB001 [MI006]
                                    FROM [TK].[dbo].[INVMB]
                                    WHERE MB001 NOT IN (SELECT MI001 FROM [TK].[dbo].[BOMMI])

                                    ");

                cmd.Connection = sqlConn;
                cmd.CommandTimeout = 60;
                cmd.CommandText = sbSql.ToString();
                cmd.Transaction = tran;
                result = cmd.ExecuteNonQuery();

                if (result == 0)
                {
                    tran.Rollback();    //交易取消
                }
                else
                {
                    tran.Commit();      //執行交易  
                }

            }
            catch
            {

            }

            finally
            {
                sqlConn.Close();
            }
        }

        public void NEW_MOCTC_MOCTE_B()
        {

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp22"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                DataSet ds1 = new DataSet();
                SqlDataAdapter adapter1 = new SqlDataAdapter();
                SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();

                sbSql.Clear();
                sbSqlQuery.Clear();

                //TL006='N' AND (UDF01 IN ('Y','y') ) 
                sbSql.AppendFormat(@" 
                                    SELECT TC001,TC002,MOCTC.UDF01
                                    FROM [test0923].dbo.MOCTC,[TK].dbo.CMSMQ
                                    WHERE TC001=MQ001
                                    AND MQ010='1'
                                    AND TC009='N'                                  
                                    AND MOCTC.UDF01 IN ('Y','y')
                                    ORDER BY TC001,TC002


                                    ");

                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");


                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    foreach (DataRow dr in ds1.Tables["ds1"].Rows)
                    {
                        ADD_MOCTC_MOCTE_TB_WKF_EXTERNAL_TASK_B(dr["TC001"].ToString().Trim(), dr["TC002"].ToString().Trim());
                    }

                }
                else
                {

                }

            }
            catch
            {

            }
            finally
            {
                sqlConn.Close();
            }

            UPDATE_MOCTC_UDF01_B();
        }
        public void ADD_MOCTC_MOCTE_TB_WKF_EXTERNAL_TASK_B(string TC001, string TC002)
        {

            DataTable DT = SEARCH_MOCTC_MOCTE_B(TC001, TC002);
            DataTable DTUPFDEP = SEARCHUOFDEP(DT.Rows[0]["CREATOR"].ToString());

            string account = DT.Rows[0]["CREATOR"].ToString();
            string groupId = DT.Rows[0]["GROUP_ID"].ToString();
            string jobTitleId = DT.Rows[0]["TITLE_ID"].ToString();
            string fillerName = DT.Rows[0]["MV002"].ToString();
            string fillerUserGuid = DT.Rows[0]["USER_GUID"].ToString();

            string DEPNAME = DTUPFDEP.Rows[0]["DEPNAME"].ToString();
            string DEPNO = DTUPFDEP.Rows[0]["DEPNO"].ToString();

            string EXTERNAL_FORM_NBR = DT.Rows[0]["TC001"].ToString().Trim() + DT.Rows[0]["TC002"].ToString().Trim();

            int rowscounts = 0;

            XmlDocument xmlDoc = new XmlDocument();
            //建立根節點
            XmlElement Form = xmlDoc.CreateElement("Form");

            //正式的id
            string FORM_ID = SEARCHFORM_UOF_VERSION_ID("MOCI03B.退料單");

            if (!string.IsNullOrEmpty(FORM_ID))
            {
                Form.SetAttribute("formVersionId", FORM_ID);
            }


            Form.SetAttribute("urgentLevel", "2");
            //加入節點底下
            xmlDoc.AppendChild(Form);

            ////建立節點Applicant
            XmlElement Applicant = xmlDoc.CreateElement("Applicant");
            Applicant.SetAttribute("account", account);
            Applicant.SetAttribute("groupId", groupId);
            Applicant.SetAttribute("jobTitleId", jobTitleId);
            //加入節點底下
            Form.AppendChild(Applicant);

            //建立節點 Comment
            XmlElement Comment = xmlDoc.CreateElement("Comment");
            Comment.InnerText = "申請者意見";
            //加入至節點底下
            Applicant.AppendChild(Comment);

            //建立節點 FormFieldValue
            XmlElement FormFieldValue = xmlDoc.CreateElement("FormFieldValue");
            //加入至節點底下
            Form.AppendChild(FormFieldValue);

            //建立節點FieldItem
            //ID 表單編號	
            XmlElement FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "ID");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);


            //建立節點FieldItem
            //TC001	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC001");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC001"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            FormFieldValue.AppendChild(FieldItem);
            //加入至members節點底下

            //TC002	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC002");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC002"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            FormFieldValue.AppendChild(FieldItem);
            //加入至members節點底下

            //TC003	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC003");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC003"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            FormFieldValue.AppendChild(FieldItem);
            //加入至members節點底下

            //TC004	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC004");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC004"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            FormFieldValue.AppendChild(FieldItem);
            //加入至members節點底下

            //TC005	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC005");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC005"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            FormFieldValue.AppendChild(FieldItem);
            //加入至members節點底下

            //TC006	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "TC006");
            FieldItem.SetAttribute("fieldValue", DT.Rows[0]["TC006"].ToString());
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            FormFieldValue.AppendChild(FieldItem);
            //加入至members節點底下



            //DataGrid
            //建立節點FieldItem
            //MOCTG
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "MOCTE");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點 DataGrid
            XmlElement DataGrid = xmlDoc.CreateElement("DataGrid");
            //DataGrid 加入至 TB 節點底下
            XmlNode PURTD = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='MOCTE']");
            PURTD.AppendChild(DataGrid);


            foreach (DataRow od in DT.Rows)
            {
                // 新增 Row
                XmlElement Row = xmlDoc.CreateElement("Row");
                Row.SetAttribute("order", (rowscounts).ToString());

                //Row	TE003
                XmlElement Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TE003");
                Cell.SetAttribute("fieldValue", od["TE003"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);

                //Row	TE004
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TE004");
                Cell.SetAttribute("fieldValue", od["TE004"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);

                //Row	TE017
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TE017");
                Cell.SetAttribute("fieldValue", od["TE017"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);

                //Row	TE018
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TE018");
                Cell.SetAttribute("fieldValue", od["TE018"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);

                //Row	TE005
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TE005");
                Cell.SetAttribute("fieldValue", od["TE005"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);

                //Row	TE006
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TE006");
                Cell.SetAttribute("fieldValue", od["TE006"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);

                //Row	TE010
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TE010");
                Cell.SetAttribute("fieldValue", od["TE010"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);

                //Row	TE008
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TE008");
                Cell.SetAttribute("fieldValue", od["TE008"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);

                //Row	TE011
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TE011");
                Cell.SetAttribute("fieldValue", od["TE011"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);

                //Row	TE012
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "TE012");
                Cell.SetAttribute("fieldValue", od["TE012"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                Row.AppendChild(Cell);


                rowscounts = rowscounts + 1;

                //DataGrid PURTM
                XmlNode DataGridS = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='MOCTE']/DataGrid");
                DataGridS.AppendChild(Row);

            }


            ////用ADDTACK，直接啟動起單
            //ADDTACK(Form);

            //ADD TO DB
            ////string connectionString = ConfigurationManager.ConnectionStrings["dbUOF"].ToString();

            //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
            //sqlConn = new SqlConnection(connectionString);

            //20210902密
            Class1 TKID = new Class1();//用new 建立類別實體
            SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

            //資料庫使用者密碼解密
            sqlsb.Password = TKID.Decryption(sqlsb.Password);
            sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

            String connectionString;
            sqlConn = new SqlConnection(sqlsb.ConnectionString);
            connectionString = sqlConn.ConnectionString.ToString();

            StringBuilder queryString = new StringBuilder();




            queryString.AppendFormat(@" INSERT INTO [{0}].dbo.TB_WKF_EXTERNAL_TASK
                                         (EXTERNAL_TASK_ID,FORM_INFO,STATUS,EXTERNAL_FORM_NBR)
                                        VALUES (NEWID(),@XML,2,'{1}')
                                        ", DBNAME, EXTERNAL_FORM_NBR);

            try
            {
                using (SqlConnection connection = new SqlConnection(connectionString))
                {

                    SqlCommand command = new SqlCommand(queryString.ToString(), connection);
                    command.Parameters.Add("@XML", SqlDbType.NVarChar).Value = Form.OuterXml;

                    command.Connection.Open();

                    int count = command.ExecuteNonQuery();

                    connection.Close();
                    connection.Dispose();

                }
            }
            catch
            {

            }
            finally
            {

            }
        }

        public DataTable SEARCH_MOCTC_MOCTE_B(string TC001, string TC002)
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);


                sbSql.Clear();
                sbSqlQuery.Clear();

                //庫存數量看LA009 IN ('20004','20006','20008','20019','20020'

                sbSql.AppendFormat(@"  
                                     SELECT *
                                    ,USER_GUID,NAME
                                    ,(SELECT TOP 1 GROUP_ID FROM [192.168.1.223].[UOF].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'GROUP_ID'
                                    ,(SELECT TOP 1 TITLE_ID FROM [192.168.1.223].[UOF].[dbo].[TB_EB_EMPL_DEP] WHERE [TB_EB_EMPL_DEP].USER_GUID=TEMP.USER_GUID) AS 'TITLE_ID'
                                    FROM 
                                    (
                                    SELECT 
                                    [MOCTC].[COMPANY]
                                    ,[MOCTC].[CREATOR]
                                    ,[MOCTC].[USR_GROUP]
                                    ,[MOCTC].[CREATE_DATE]
                                    ,[MOCTC].[MODIFIER]
                                    ,[MOCTC].[MODI_DATE]
                                    ,[MOCTC].[FLAG]
                                    ,[MOCTC].[CREATE_TIME]
                                    ,[MOCTC].[MODI_TIME]
                                    ,[MOCTC].[TRANS_TYPE]
                                    ,[MOCTC].[TRANS_NAME]
                                    ,[MOCTC].[sync_date]
                                    ,[MOCTC].[sync_time]
                                    ,[MOCTC].[sync_mark]
                                    ,[MOCTC].[sync_count]
                                    ,[MOCTC].[DataUser]
                                    ,[MOCTC].[DataGroup]
                                    ,[TC001]
                                    ,[TC002]
                                    ,[TC003]
                                    ,[TC004]
                                    ,[TC005]
                                    ,[TC006]
                                    ,[TC007]
                                    ,[TC008]
                                    ,[TC009]
                                    ,[TC010]
                                    ,[TC011]
                                    ,[TC012]
                                    ,[TC013]
                                    ,[TC014]
                                    ,[TC015]
                                    ,[TC016]
                                    ,[TC017]
                                    ,[TC018]
                                    ,[TC019]
                                    ,[TC020]
                                    ,[TC021]
                                    ,[TC022]
                                    ,[TC023]
                                    ,[TC024]
                                    ,[TC025]
                                    ,[TC026]
                                    ,[TC027]
                                    ,[TC028]
                                    ,[TC029]
                                    ,[TC030]
                                    ,[TC031]
                                    ,[TC032]
                                    ,[MOCTC].[UDF01] AS 'MOCTCUDF01'
                                    ,[MOCTC].[UDF02] AS 'MOCTCUDF02'
                                    ,[MOCTC].[UDF03] AS 'MOCTCUDF03'
                                    ,[MOCTC].[UDF04] AS 'MOCTCUDF04'
                                    ,[MOCTC].[UDF05] AS 'MOCTCUDF05'
                                    ,[MOCTC].[UDF06] AS 'MOCTCUDF06'
                                    ,[MOCTC].[UDF07] AS 'MOCTCUDF07'
                                    ,[MOCTC].[UDF08] AS 'MOCTCUDF08'
                                    ,[MOCTC].[UDF09] AS 'MOCTCUDF09'
                                    ,[MOCTC].[UDF10] AS 'MOCTCUDF10'
                                    ,[TC200]
                                    ,[TC201]
                                    ,[TC202]
                                    ,[TE001]
                                    ,[TE002]
                                    ,[TE003]
                                    ,[TE004]
                                    ,[TE005]
                                    ,[TE006]
                                    ,[TE007]
                                    ,[TE008]
                                    ,[TE009]
                                    ,[TE010]
                                    ,[TE011]
                                    ,[TE012]
                                    ,[TE013]
                                    ,[TE014]
                                    ,[TE015]
                                    ,[TE016]
                                    ,[TE017]
                                    ,[TE018]
                                    ,[TE019]
                                    ,[TE020]
                                    ,[TE021]
                                    ,[TE022]
                                    ,[TE023]
                                    ,[TE024]
                                    ,[TE025]
                                    ,[TE026]
                                    ,[TE027]
                                    ,[TE028]
                                    ,[TE029]
                                    ,[TE030]
                                    ,[TE031]
                                    ,[TE032]
                                    ,[TE033]
                                    ,[TE034]
                                    ,[TE035]
                                    ,[TE036]
                                    ,[TE037]
                                    ,[TE038]
                                    ,[TE039]
                                    ,[TE040]
                                    ,[TE500]
                                    ,[TE501]
                                    ,[TE502]
                                    ,[TE503]
                                    ,[TE504]
                                    ,[TE505]
                                    ,[TE506]
                                    ,[TE507]
                                    ,[TE508]
                                    ,[MOCTE].[UDF01] AS 'MOCTEUDF01'
                                    ,[MOCTE].[UDF02] AS 'MOCTEUDF02'
                                    ,[MOCTE].[UDF03] AS 'MOCTEUDF03'
                                    ,[MOCTE].[UDF04] AS 'MOCTEUDF04'
                                    ,[MOCTE].[UDF05] AS 'MOCTEUDF05'
                                    ,[MOCTE].[UDF06] AS 'MOCTEUDF06'
                                    ,[MOCTE].[UDF07] AS 'MOCTEUDF07'
                                    ,[MOCTE].[UDF08] AS 'MOCTEUDF08'
                                    ,[MOCTE].[UDF09] AS 'MOCTEUDF09'
                                    ,[MOCTE].[UDF10] AS 'MOCTEUDF10'
                                    ,[TE200]
                                    ,[TE201]
 
                                    ,[TB_EB_USER].USER_GUID,NAME
                                    ,(SELECT TOP 1 MV002 FROM [TK].dbo.CMSMV WHERE MV001=MOCTC.CREATOR) AS 'MV002'

                                    FROM [test0923].dbo.MOCTE,[test0923].dbo.MOCTC
                                    LEFT JOIN [192.168.1.223].[UOF].[dbo].[TB_EB_USER] ON [TB_EB_USER].ACCOUNT=MOCTC.CREATOR COLLATE Chinese_Taiwan_Stroke_BIN
                                    WHERE 1=1
                                    AND TC001=TE001 AND TC002=TE002
                                    AND TC001='{0}' AND TC002='{1}'
                                    ) AS TEMP
                                    
                                 
                              
                                    ", TC001, TC002);


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    return ds1.Tables["ds1"];

                }
                else
                {
                    return null;
                }

            }
            catch
            {
                return null;
            }
            finally
            {
                sqlConn.Close();
            }
        }

        public void UPDATE_MOCTC_UDF01_B()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dbconn"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sqlConn.Close();
                sqlConn.Open();
                tran = sqlConn.BeginTransaction();

                sbSql.Clear();

                sbSql.AppendFormat(@"
                                    UPDATE  [test0923].dbo.MOCTC
                                    SET UDF01 = 'UOF' 
                                    FROM [test0923].dbo.MOCTC,[TK].dbo.CMSMQ
                                    WHERE TC001=MQ001
                                    AND MQ010='1'
                                    AND TC009='N'                                  
                                    AND MOCTC.UDF01 IN ('Y','y')
                                

                                    ");

                cmd.Connection = sqlConn;
                cmd.CommandTimeout = 60;
                cmd.CommandText = sbSql.ToString();
                cmd.Transaction = tran;
                result = cmd.ExecuteNonQuery();

                if (result == 0)
                {
                    tran.Rollback();    //交易取消
                }
                else
                {
                    tran.Commit();      //執行交易  
                }

            }
            catch
            {

            }

            finally
            {
                sqlConn.Close();
            }
        }

        public void ADD_TBPROMOTIONNFEE()
        {
            DataTable DT = FIND_UOF_PROMOT();

            string DOC_NBR = "";
            string YEARS = "";
            string DEPNAME = "";
            string TITLES = "";
            string SALES = "";
            string NAMES = "";
            string ACTIONS = "";

            if(DT!=null && DT.Rows.Count>=1)
            {
                foreach (DataRow dr in DT.Rows)
                {

                    DOC_NBR = dr["DOC_NBR"].ToString();
                    YEARS = dr["YEARS"].ToString();
                    DEPNAME = dr["COFrm002MDP"].ToString();
                    TITLES = dr["COFrm002CS"].ToString();
                    SALES = dr["SALES"].ToString();
                    NAMES = dr["COFrm002Main"].ToString();
                    ACTIONS = dr["COFrm002TD"].ToString();

                    string html = "@" + dr["COFrm002TD"].ToString();

                    // 使用HtmlAgilityPack解析HTML
                    HtmlAgilityPack.HtmlDocument htmlDoc = new HtmlAgilityPack.HtmlDocument();
                    htmlDoc.LoadHtml(html);

                    // 提取純文字內容
                    string Text = ExtractTextFromHtml(htmlDoc.DocumentNode);
                    Text = Text.Replace("&nbsp;", "").Replace("@u", "");
                    int Text_LEGTH = Text.Length;
                    if(Text_LEGTH<=990)
                    {
                        ACTIONS = Text;
                    }
                    else if(Text_LEGTH>=990)
                    {
                        ACTIONS = Text.Substring(0, 990);
                    }
                   

                    ADD_TO_TKBUSINESS_TBPROMOTIONNFEE(
                                                     DOC_NBR,
                                                     YEARS,
                                                     DEPNAME,
                                                     TITLES,
                                                     SALES,
                                                     NAMES,
                                                     ACTIONS
                                                    );
                }
            }
           
            
        }
        public static string ExtractTextFromHtml(HtmlNode node)
        {
            if (node.NodeType == HtmlNodeType.Text)
            {
                return node.InnerText;
            }

            if (node.NodeType == HtmlNodeType.Element && !node.HasChildNodes)
            {
                string text = node.InnerText.Trim();
                return !string.IsNullOrEmpty(text) ? text + " " : string.Empty;
            }

            return string.Concat(node.ChildNodes.Select(ExtractTextFromHtml));
        }
        public DataTable FIND_UOF_PROMOT()
        {
            DataTable DT = new DataTable();
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sbSql.Clear();
                sbSqlQuery.Clear();

                //庫存數量看LA009 IN ('20004','20006','20008','20019','20020'

                sbSql.AppendFormat(@"  
                                    SELECT *
                                    ,SUBSTRING(COFrm002Date,1,4) AS 'YEARS'
                                    ,SUBSTRING(COFrm002Usr,1,3) AS 'SALES'
    
                                    FROM 
                                    (
                                    SELECT DOC_NBR
                                    ,CURRENT_DOC.value('(Form/FormFieldValue/FieldItem[@fieldId=""COFrm002Date""]/@fieldValue)[1]', 'nvarchar(max)') AS COFrm002Date
                                    , CURRENT_DOC.value('(Form/FormFieldValue/FieldItem[@fieldId=""COFrm002Main""]/@fieldValue)[1]', 'nvarchar(max)') AS COFrm002Main
                                    , CURRENT_DOC.value('(Form/FormFieldValue/FieldItem[@fieldId=""COFrm002Usr""]/@fieldValue)[1]', 'nvarchar(max)')  AS COFrm002Usr
                                    , CURRENT_DOC.value('(Form/FormFieldValue/FieldItem[@fieldId=""COFrm002CS""]/@fieldValue)[1]', 'nvarchar(max)')  AS COFrm002CS
                                    , CURRENT_DOC.value('(Form/FormFieldValue/FieldItem[@fieldId=""COFrm002MDP""]/@fieldValue)[1]', 'nvarchar(max)')  AS COFrm002MDP
                                    , CURRENT_DOC.value('(Form/FormFieldValue/FieldItem[@fieldId=""COFrm002MG""]/@fieldValue)[1]', 'nvarchar(max)') AS COFrm002MG
                                    , CURRENT_DOC.value('(Form/FormFieldValue/FieldItem[@fieldId=""COFrm002TD""]/@fieldValue)[1]', 'nvarchar(max)') AS COFrm002TD

                                    , TB_WKF_FORM.FORM_NAME
                                    FROM[UOF].dbo.TB_WKF_TASK,[UOF].dbo.TB_WKF_FORM,[UOF].dbo.TB_WKF_FORM_VERSION
                                    WHERE 1 = 1
                                    AND TB_WKF_TASK.FORM_VERSION_ID = TB_WKF_FORM_VERSION.FORM_VERSION_ID
                                    AND TB_WKF_FORM.FORM_ID = TB_WKF_FORM_VERSION.FORM_ID
                                    AND TB_WKF_FORM.FORM_NAME IN('2001.會辦單（行企）', '1002.會辦單（一般）')
                                    AND TB_WKF_TASK.TASK_STATUS = '2' AND TASK_RESULT = '0'
                                    
                                    ) AS TEMP
                                    WHERE COFrm002MG IN ('年節/產品活動或價格事宜')
                                    
                                    AND DOC_NBR COLLATE Chinese_Taiwan_Stroke_BIN NOT IN (SELECT[DOC_NBR] FROM[192.168.1.105].[TKBUSINESS].[dbo].[TBPROMOTIONNFEE] WHERE ISNULL([DOC_NBR], '')<> '')
                                    ORDER BY COFrm002Date

                                    ");


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    return ds1.Tables["ds1"];
                }
                else
                {
                    return null;
                }

            }
            catch
            {

            }
            finally
            {
                sqlConn.Close();
            }


            return DT;
        }

        public void ADD_TO_TKBUSINESS_TBPROMOTIONNFEE(
            string DOC_NBR,
            string YEARS,
            string DEPNAME,
            string TITLES,
            string SALES,
            string NAMES ,
            string ACTIONS
            )
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sqlConn.Close();
                sqlConn.Open();
                tran = sqlConn.BeginTransaction();

                sbSql.Clear();

                sbSql.AppendFormat(@"                                   
                                    INSERT INTO [TKBUSINESS].[dbo].[TBPROMOTIONNFEE]
                                    (
                                    [DOC_NBR],
                                    [YEARS],
                                    [DEPNAME],
                                    [TITLES],
                                    [SALES],
                                    [NAMES],
                                    [ACTIONS]
                                    )
                                    VALUES
                                    (
                                    '{0}',
                                    '{1}',
                                    '{2}',
                                    '{3}',
                                    '{4}',
                                    '{5}',
                                    '{6}'
                                    )
                                    "
                                    ,
                                    DOC_NBR,
                                    YEARS,
                                    DEPNAME,
                                    TITLES,
                                    SALES,
                                    NAMES,
                                    ACTIONS
                                    );

                cmd.Connection = sqlConn;
                cmd.CommandTimeout = 60;
                cmd.CommandText = sbSql.ToString();
                cmd.Transaction = tran;
                result = cmd.ExecuteNonQuery();

                if (result == 0)
                {
                    tran.Rollback();    //交易取消
                }
                else
                {
                    tran.Commit();      //執行交易  
                }

            }
            catch
            {

            }

            finally
            {
                sqlConn.Close();
            }
        }

        public string  FIND_TKGAFFAIRS_TBASSINGS(string ASSINGS)
        {
            DataTable DT = new DataTable();
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sbSql.Clear();
                sbSqlQuery.Clear();

                //庫存數量看LA009 IN ('20004','20006','20008','20019','20020'

                sbSql.AppendFormat(@"  
                                    SELECT TOP 1
                                    [ID]
                                    ,[ASSINGS]
                                    ,[TOS]
                                    FROM [TKGAFFAIRS].[dbo].[TBASSINGS]
                                    WHERE [ASSINGS]='{0}'
                                    ", ASSINGS);


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    return ds1.Tables["ds1"].Rows[0]["TOS"].ToString();
                }
                else
                {
                    return null;
                }

            }
            catch
            {

            }
            finally
            {
                sqlConn.Close();
            }


            return null;
        }

        /// <summary>
        /// 利用COPMA的MA0012來比對訂單、銷貨單的收貨部門，如果是SevenEleven、 Family、 HiLife 改成地址
        /// </summary>
        public void COPTC_TC010_TC011_UPDATE()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sqlConn.Close();
                sqlConn.Open();
                tran = sqlConn.BeginTransaction();

                sbSql.Clear();

                sbSql.AppendFormat(@"                                   
                                    UPDATE  [TK].dbo.COPTC
                                    SET COPTC.TC011=TEMP.TC010,COPTC.TC010=TEMP.MA027
                                    FROM 
                                    (
                                    SELECT TC054,TC010,TC011,TC001,TC002
                                    ,MA027
                                    FROM [TK].dbo.COPTC,[TK].dbo.COPMA
                                    WHERE 1=1
                                    AND TC054=MA002
                                    AND TC054 IN (SELECT  [ID] FROM [TK].[dbo].[ZCOPMATOADDRESS])
                                    AND TC010<>MA027
                                    ) AS TEMP
                                    WHERE TEMP.TC001=COPTC.TC001 AND TEMP.TC002=COPTC.TC002
                                    AND COPTC.TC010<>TEMP.MA027

                                    UPDATE [TK].dbo.COPTG
                                    SET COPTG.TG008=TEMP.MA027
                                    FROM
                                    (
                                    SELECT TG001,TG002,TG075,TG008,MA027
                                    FROM [TK].dbo.COPTG,[TK].dbo.COPMA
                                    WHERE 1=1
                                    AND TG075=MA002
                                    AND TG023 IN ('N')
                                    AND TG075 IN ( (SELECT  [ID] FROM [TK].[dbo].[ZCOPMATOADDRESS]))
                                    AND TG008<>MA027
                                    ) AS TEMP
                                    WHERE TEMP.TG001=COPTG.TG001 AND TEMP.TG002=COPTG.TG002
                                    AND COPTG.TG008<>TEMP.MA027
                                    "
                                    );

                cmd.Connection = sqlConn;
                cmd.CommandTimeout = 60;
                cmd.CommandText = sbSql.ToString();
                cmd.Transaction = tran;
                result = cmd.ExecuteNonQuery();

                if (result == 0)
                {
                    tran.Rollback();    //交易取消
                }
                else
                {
                    tran.Commit();      //執行交易  
                }

            }
            catch
            {

            }

            finally
            {
                sqlConn.Close();
            }
        }


        public void UPDATE_TK_BOMMI()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sqlConn.Close();
                sqlConn.Open();
                tran = sqlConn.BeginTransaction();

                sbSql.Clear();

                sbSql.AppendFormat(@"                                   
                                    UPDATE [TK].dbo.BOMMI
                                    SET MI004=MB004
                                    FROM [TK].dbo.BOMMI,[TK].dbo.INVMB
                                    WHERE MI001=MB001
                                    AND MI004<>MB004

                                    UPDATE [TK].dbo.BOMMI
                                    SET MI002=MB002
                                    FROM [TK].dbo.BOMMI,[TK].dbo.INVMB
                                    WHERE MI001=MB001
                                    AND MI002<>MB002

                                    "
                                    );

                cmd.Connection = sqlConn;
                cmd.CommandTimeout = 60;
                cmd.CommandText = sbSql.ToString();
                cmd.Transaction = tran;
                result = cmd.ExecuteNonQuery();

                if (result == 0)
                {
                    tran.Rollback();    //交易取消
                }
                else
                {
                    tran.Commit();      //執行交易  
                }

            }
            catch
            {

            }

            finally
            {
                sqlConn.Close();
            }
        }

        public void UPDATE_TK_COPTGTG113()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sqlConn.Close();
                sqlConn.Open();
                tran = sqlConn.BeginTransaction();

                sbSql.Clear();

                sbSql.AppendFormat(@"  
                                    UPDATE [TK].dbo.COPTG
                                    SET TG113=TG045+TG046
                                    FROM (
                                    SELECT TG001,TG002,TG142,TG113,TG045+TG046 AS MONEYSS
                                    FROM [TK].dbo.COPTG
                                    WHERE TG142 IN (SELECT  [TG142] FROM [TK].[dbo].[ZCOPTG] WHERE  [KIND]='TG142')
                                    AND TG023 NOT IN ('V')
                                    AND TG113<>TG045+TG046
                                    ) AS TEMP
                                    WHERE TEMP.TG001=COPTG.TG001 AND TEMP.TG002=COPTG.TG002


                                    UPDATE [TK].dbo.COPTG
                                    SET TG113=TG045+TG046
                                    FROM (
                                    SELECT TG001,TG002,TG142,TG113,TG045+TG046 AS MONEYSS
                                    FROM [TK].dbo.COPTG
                                    WHERE TG146 IN (SELECT  [TG142] FROM [TK].[dbo].[ZCOPTG] WHERE  [KIND]='TG146')
                                    AND TG023 NOT IN ('V')
                                    AND TG113<>TG045+TG046
                                    ) AS TEMP
                                    WHERE TEMP.TG001=COPTG.TG001 AND TEMP.TG002=COPTG.TG002



                                    "
                                    );

                cmd.Connection = sqlConn;
                cmd.CommandTimeout = 60;
                cmd.CommandText = sbSql.ToString();
                cmd.Transaction = tran;
                result = cmd.ExecuteNonQuery();

                if (result == 0)
                {
                    tran.Rollback();    //交易取消
                }
                else
                {
                    tran.Commit();      //執行交易  
                }

            }
            catch
            {

            }

            finally
            {
                sqlConn.Close();
            }
        }

        public void NEWUOFQC1006()
        {
            DataTable DT = FIND_UOF_QC1006();

            if (DT!=null&& DT.Rows.Count>=1)
            {
                NEW_TO_TMQC_TBUOFQC1006(DT);
            }

           // MessageBox.Show("完成");
        }
        public DataTable FIND_UOF_QC1006()
        {
            DataTable DT = new DataTable();
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sbSql.Clear();
                sbSqlQuery.Clear();

                //庫存數量看LA009 IN ('20004','20006','20008','20019','20020'

                sbSql.AppendFormat(@"  
                                    SELECT 
                                    DOC_NBR
                                    FROM [UOF].[dbo].[TB_WKF_TASK]
                                    WHERE FORM_VERSION_ID IN 
                                    (
                                    SELECT 
                                    FORM_VERSION_ID
                                    FROM [UOF].[dbo].[TB_WKF_FORM_VERSION]
                                    WHERE FORM_ID IN (
                                    SELECT 
                                    [FORM_ID]
                                    FROM [UOF].[dbo].[TB_WKF_FORM]
                                    WHERE [FORM_NAME] LIKE '%委外送驗申請單%'
                                    )
                                    )
                                    AND DOC_NBR COLLATE Chinese_Taiwan_Stroke_BIN  NOT IN (SELECT DOC_NBR FROM [192.168.1.105].[TKQC].[dbo].[TBUOFQC1006])
                                    ");


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    return ds1.Tables["ds1"];
                }
                else
                {
                    return null;
                }

            }
            catch
            {

            }
            finally
            {
                sqlConn.Close();
            }


            return null;
        }

        public void NEW_TO_TMQC_TBUOFQC1006(DataTable DT)
        {
            string xmlData = "";
            string DOC_NBR = ""; 
            string QCFrm004SN = "";
            string QCFrm004Date = "";
            string QCFrm004UserLevel = "";
            string QC6001 = "";
            string QC6002 = "";
            string QC6012 = "";
            string QC6003 = "";
            string QC6004 = "";
            string QC6005 = "";
            string QC6006 = "";
            string QC6007 = "";
            string QC6008 = "";
            string QC6009 = "";
            string QC60010 = "";

            foreach (DataRow row in DT.Rows)
            {
                xmlData = "";
                DOC_NBR = "";
                QCFrm004SN = "";
                QCFrm004Date = "";
                QCFrm004UserLevel = "";
                QC6001 = "";
                QC6002 = "";
                QC6012 = "";
                QC6003 = "";
                QC6004 = "";
                QC6005 = "";
                QC6006 = "";
                QC6007 = "";
                QC6008 = "";
                QC6009 = "";
                QC60010 = "";

                xmlData = FIND_UOF_QC1006(row["DOC_NBR"].ToString());

                XDocument doc = XDocument.Parse(xmlData);

                var fieldItems = doc.Descendants("FieldItem");

                foreach (var fieldItem in fieldItems)
                {
                 
                    string fieldId = fieldItem.Attribute("fieldId").Value;

                    // 節點存在，取值       
                    string fieldValue = fieldItem.Attribute("fieldValue")?.Value;

                    if(fieldId.Equals("QCFrm004SN"))
                    {
                        DOC_NBR = fieldValue;
                        QCFrm004SN = fieldValue;
                    }
                    else if (fieldId.Equals("QCFrm004Date"))
                    {
                        QCFrm004Date = fieldValue;
                    }
                    else if(fieldId.Equals("QCFrm004UserLevel"))
                    {
                        QCFrm004UserLevel = fieldValue;
                    }
                    else if(fieldId.Equals("QC6001"))
                    {
                        QC6001 = fieldValue;
                    }
                    else if(fieldId.Equals("QC6002"))
                    {
                        QC6002 = fieldValue;
                    }
                    else if(fieldId.Equals("QC6012"))
                    {
                        QC6012 = fieldValue;
                    }
                    else if(fieldId.Equals("QC6003"))
                    {
                        QC6003 = fieldValue;
                    }
                    else if(fieldId.Equals("QC6004"))
                    {
                        QC6004 = fieldValue;
                    }
                    else if(fieldId.Equals("QC6005"))
                    {
                        QC6005 = fieldValue;
                    }
                    else if(fieldId.Equals("QC6006"))
                    {
                        QC6006 = fieldValue;
                    }
                    else if(fieldId.Equals("QC6008"))
                    {
                        QC6008 = fieldValue;
                    }
                    else if(fieldId.Equals("QC6009"))
                    {
                        QC6009 = fieldValue;
                    }
                    else if(fieldId.Equals("QC60010"))
                    {
                        QC60010 = fieldValue;
                    }

                }

                var dataGrids = doc.Descendants("DataGrid");

                foreach (var dataGrid in dataGrids)
                {
                    var rows = dataGrid.Descendants("Row");

                    foreach (var rowdata in rows)
                    {
                        QC6007 = "";
                        var cells = rowdata.Descendants("Cell");

                        foreach (var cell in cells)
                        {
                          
                            string cellFieldId = cell.Attribute("fieldId")?.Value; 
                            string cellFieldValue = cell.Attribute("fieldValue")?.Value; 

                            if (cellFieldId.Equals("QC60071"))
                            {
                                QC6007 = QC6007+ cellFieldValue + "-";
                            }
                            else if (cellFieldId.Equals("QC60072"))
                            {
                                QC6007 = QC6007 + cellFieldValue + "、";
                            }

                          
                        }
                        //去除+"、";
                        if (QC6007.Length >=1)
                        {
                            QC6007 = QC6007.Substring(0, QC6007.Length-1);
                        }
                        //
                        if (QC6007.Length >= 250)
                        {
                            QC6007 = QC6007.Substring(0, 249);
                        }
                    }
                }


                ADD_NEW_TO_TMQC_TBUOFQC1006(
                                            DOC_NBR
                                            , QCFrm004SN
                                            , QCFrm004Date
                                            , QCFrm004UserLevel
                                            , QC6001
                                            , QC6002
                                            , QC6012
                                            , QC6003
                                            , QC6004
                                            , QC6005
                                            , QC6006
                                            , QC6007
                                            , QC6008
                                            , QC6009
                                            , QC60010
                                            );
            }
        }

        public string FIND_UOF_QC1006(string DOC_NBR)
        {
            DataTable DT = new DataTable();
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sbSql.Clear();
                sbSqlQuery.Clear();

                //庫存數量看LA009 IN ('20004','20006','20008','20019','20020'

                sbSql.AppendFormat(@"  
                                    SELECT 
                                    DOC_NBR,CONVERT(nvarchar(MAX),CURRENT_DOC) CURRENT_DOC
                                    FROM [UOF].[dbo].[TB_WKF_TASK]
                                    WHERE DOC_NBR='{0}'
                                    ", DOC_NBR);


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    return ds1.Tables["ds1"].Rows[0]["CURRENT_DOC"].ToString();
                }
                else
                {
                    return null;
                }

            }
            catch
            {

            }
            finally
            {
                sqlConn.Close();
            }


            return null;
        }
        public void ADD_NEW_TO_TMQC_TBUOFQC1006(
            string DOC_NBR
            , string QCFrm004SN
            , string QCFrm004Date
            , string QCFrm004UserLevel
            , string QC6001
            , string QC6002
            , string QC6012
            , string QC6003
            , string QC6004
            , string QC6005
            , string QC6006
            , string QC6007
            , string QC6008
            , string QC6009
            , string QC60010
            )
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sqlConn.Close();
                sqlConn.Open();
                tran = sqlConn.BeginTransaction();

                sbSql.Clear();

                sbSql.AppendFormat(@"                                    
                                    INSERT INTO [TKQC].[dbo].[TBUOFQC1006]
                                    (
                                    [DOC_NBR]
                                    ,[QCFrm004SN]
                                    ,[QCFrm004Date]
                                    ,[QCFrm004UserLevel]
                                    ,[QC6001]
                                    ,[QC6002]
                                    ,[QC6012]
                                    ,[QC6003]
                                    ,[QC6004]
                                    ,[QC6005]
                                    ,[QC6006]
                                    ,[QC6007]
                                    ,[QC6008]
                                    ,[QC6009]
                                    ,[QC60010]
                                    )
                                    VALUES
                                    (
                                    '{0}'
                                    ,'{1}'
                                    ,'{2}'
                                    ,'{3}'
                                    ,'{4}'
                                    ,'{5}'
                                    ,'{6}'
                                    ,'{7}'
                                    ,'{8}'
                                    ,'{9}'
                                    ,'{10}'
                                    ,'{11}'
                                    ,'{12}'
                                    ,'{13}'
                                    ,'{14}'
                                    )

                                    ", DOC_NBR
                                    , QCFrm004SN
                                    , QCFrm004Date
                                    , QCFrm004UserLevel
                                    , QC6001
                                    , QC6002
                                    , QC6012
                                    , QC6003
                                    , QC6004
                                    , QC6005
                                    , QC6006
                                    , QC6007
                                    , QC6008
                                    , QC6009
                                    , QC60010
                                    );

                cmd.Connection = sqlConn;
                cmd.CommandTimeout = 60;
                cmd.CommandText = sbSql.ToString();
                cmd.Transaction = tran;
                result = cmd.ExecuteNonQuery();

                if (result == 0)
                {
                    tran.Rollback();    //交易取消
                }
                else
                {
                    tran.Commit();      //執行交易  
                }

            }
            catch
            {

            }

            finally
            {
                sqlConn.Close();
            }
        }

        public void ADD_UOF_COPMA_100A()
        {
            //新增客戶資料
            ADD_TB_UOF_COPMA_100A();

            DataTable dt = FIND_TB_UOF_COPMA_100A();
            if(dt!=null&& dt.Rows.Count>=1)
            {
                ADD_TB_WKF_EXTERNAL_TASK_UOF_COPMA_100A(dt);
            }
        }

        public void ADD_TB_UOF_COPMA_100A()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sqlConn.Close();
                sqlConn.Open();
                tran = sqlConn.BeginTransaction();

                sbSql.Clear();

                sbSql.AppendFormat(@" 
                                     DELETE [TKBUSINESS].[dbo].[UOF_COPMA100A]
                                     INSERT INTO [TKBUSINESS].[dbo].[UOF_COPMA100A]
                                    (
                                    [MA001]
                                    ,[MA016]
                                    ,[sd001]
                                    ,[sd002]
                                    ,[sd003]
                                    ,[sd004]
                                    ,[sd005]
                                    ,[sd90]
                                    ,[sd006]
                                    ,[sd007]
                                    ,[sd008]
                                    ,[sd009]
                                    ,[sd010]
                                    ,[sd011]
                                    ,[sd012]
                                    ,[sd013]
                                    ,[sd014]
                                    ,[sd015]
                                    ,[sd016]
                                    ,[sd017]
                                    ,[sd018]
                                    ,[sd019]
                                    ,[sd020]
                                    ,[sd021]
                                    ,[sd022]
                                    ,[sd023]
                                    ,[sd024]
                                    ,[sd025]
                                    ,[sd026]
                                    ,[sd027]
                                    ,[sd028]
                                    ,[sd029]
                                    ,[sd030]
                                    ,[sd031]
                                    ,[sd032]
                                    ,[sd033]
                                    ,[sd034]
                                    ,[sd035]
                                    ,[sd036]
                                    ,[sd037]
                                    ,[sd038]
                                    ,[sd039]
                                    ,[sd040]
                                    ,[sd041]
                                    ,[sd042]
                                    ,[sd043]
                                    ,[sd044]
                                    ,[sd0]
                                    ,[sd051]
                                    ,[sd052]
                                    ,[sd053]
                                    ,[sd054]
                                    ,[sd055]
                                    ,[sd056]
                                    ,[sd057]
                                    ,[sd058]
                                    ,[sd060]
                                    ,[sd061]
                                    ,[sd062]
                                    ,[sd063]
                                    ,[sd064]
                                    ,[sd065]
                                    ,[sd066]
                                    ,[sd067]
                                    ,[sd068]
                                    ,[sd069]
                                    ,[sd070]
                                    ,[sd071]
                                    ,[sd072]
                                    ,[sd073]
                                    ,[sd074]
                                    ,[sd075]
                                    ,[sd076]
                                    ,[sd077]
                                    ,[sd078]
                                    ,[sd079]
                                    ,[sd080]
                                    ,[sd081]
                                    ,[sd082]
                                    ,[sd083]
                                    )

                                    SELECT   
                                     MA001
                                    ,MA016
                                    ,'' AS  sd001
                                    ,CONVERT(NVARCHAR,CONVERT(DATETIME,GETDATE()),111) AS  sd002
                                    ,'修改' AS  sd003
                                    ,MA002 AS  sd004
                                    ,MA003 AS  sd005
                                    ,(CASE WHEN MA001 LIKE '2%' THEN '國內業務@國內業務' WHEN MA001 LIKE 'A%' THEN '國內業務@國內業務'  WHEN MA001 LIKE '3%' THEN '國外業務@國外業務' WHEN MA001 LIKE 'B%' THEN '國外業務@國外業務' END  )AS  sd90
                                    ,MA023 AS  sd006
                                    ,MA025 AS  sd007
                                    ,MA010 AS  sd008
                                    ,MA004 AS  sd009
                                    ,MA005 AS  sd010
                                    ,'' AS  sd011
                                    ,'' AS  sd012
                                    ,'' AS  sd013
                                    ,MA006 AS  sd014
                                    ,MA007 AS  sd015
                                    ,MA009 AS  sd016
                                    ,(CASE WHEN ISDATE(MA020) = 1  THEN (CONVERT(NVARCHAR,CONVERT(DATETIME,COPMA.MA020),111)) END)  AS  sd017
                                    ,MA011*10000  AS  sd018
                                    ,'有限公司' AS  sd019
                                    ,MA013 AS  sd020
                                    ,(CASE WHEN MA067>=1 THEN '有' ELSE '無' END ) AS  sd021
                                    ,'' AS  sd022
                                    ,(CASE WHEN MA067>=1 THEN '有' ELSE '無' END ) AS  sd023
                                    ,'' AS  sd024
                                    ,'自有' AS  sd025
                                    ,'' AS  sd026
                                    ,'電子發票' AS  sd027
                                    ,(CASE WHEN MA041='1' THEN '現金'  WHEN MA041='2' THEN '電匯' WHEN MA041='3' THEN '支票' WHEN MA041='4' THEN '其他'END ) AS  sd028 
                                    ,'法人' AS  sd029
                                    ,COPMA.UDF02 AS  sd030
                                    ,'' AS  sd031
                                    ,'' AS  sd032
                                    ,'0' AS  sd033
                                    ,'25號' AS  sd034
                                    ,MO006 AS  sd035
                                    ,'月結' AS  sd036
                                    ,'' AS  sd037
                                    ,'' AS  sd038
                                    ,NA003 AS  sd039
                                    ,NA003 AS  sd041
                                    ,NA005 AS  sd040
                                    ,MA033 AS  sd042
                                    ,MA033 AS  sd043
                                    ,MA014 AS  sd044
                                    ,'客戶信用評分及信用額度' AS  sd0
                                    ,'信用評分' AS  sd051
                                    ,'' AS  sd052
                                    ,'' AS  sd053
                                    ,'' AS  sd054
                                    ,'' AS  sd055
                                    ,'信用評分' AS  sd056
                                    ,'3000萬以下(4分)' AS  sd057
                                    ,'4' AS  sd058
                                    ,'0' AS  sd060
                                    ,'0' AS  sd061
                                    ,'0' AS  sd062
                                    ,'' AS  sd063
                                    ,'3000萬以下（4分）' AS  sd064
                                    ,'4' AS  sd065
                                    ,'0' AS  sd066
                                    ,'' AS  sd067
                                    ,'0' AS  sd068
                                    ,'' AS  sd069
                                    ,'50萬以下(5分)' AS  sd070
                                    ,'5' AS  sd071
                                    ,'沒有(10分)' AS  sd072
                                    ,'10' AS  sd073
                                    ,'正常(10分)' AS  sd074
                                    ,'10' AS  sd075
                                    ,'' AS  sd076
                                    ,'5%以下(5分)' AS  sd077
                                    ,'5' AS  sd078
                                    ,'38' AS  sd079
                                    ,'0' AS  sd080
                                    ,'' AS  sd081
                                    ,'38' AS  sd082
                                    ,'0' AS  sd083
                                    FROM [TK].dbo.COPMA
                                    LEFT JOIN [DSCSYS].dbo.CMSMO ON MO001=MA046
                                    LEFT JOIN [TK].dbo.CMSNA ON NA001='2' AND NA002=MA083
                                    WHERE (MA001 LIKE '2%' OR MA001 LIKE 'A%' OR MA001 LIKE '3%' OR MA001 LIKE 'B%')
                                    AND    MA001='2999999A' 

                                    UPDATE [TKBUSINESS].[dbo].[UOF_COPMA100A]
                                    SET [sd057]='3000萬以下(4分)'

                                    UPDATE [TKBUSINESS].[dbo].[UOF_COPMA100A]
                                    SET [sd057]='3001萬~5000萬(6分)'
                                    WHERE MA001 IN (
                                    SELECT MA001 
                                    FROM [TK].dbo.COPMA
                                    WHERE (MA001 LIKE '2%' OR MA001 LIKE 'A%' OR MA001 LIKE '3%' OR MA001 LIKE 'B%')
                                    AND  MA011>=30000001
                                    )

                                    UPDATE [TKBUSINESS].[dbo].[UOF_COPMA100A]
                                    SET [sd057]='5001萬~1億以上(10分)'
                                    WHERE MA001 IN (
                                    SELECT MA001 
                                    FROM [TK].dbo.COPMA
                                    WHERE (MA001 LIKE '2%' OR MA001 LIKE 'A%' OR MA001 LIKE '3%' OR MA001 LIKE 'B%')
                                    AND  MA011>=50000001
                                    )


                                    UPDATE [TKBUSINESS].[dbo].[UOF_COPMA100A]
                                    SET sd058='4'

                                    UPDATE [TKBUSINESS].[dbo].[UOF_COPMA100A]
                                    SET sd058='6'
                                    WHERE MA001 IN (
                                    SELECT MA001 
                                    FROM [TK].dbo.COPMA
                                    WHERE (MA001 LIKE '2%' OR MA001 LIKE 'A%' OR MA001 LIKE '3%' OR MA001 LIKE 'B%')
                                    AND  MA011>=30000001
                                    )

                                    UPDATE [TKBUSINESS].[dbo].[UOF_COPMA100A]
                                    SET sd058='10'
                                    WHERE MA001 IN (
                                    SELECT MA001 
                                    FROM [TK].dbo.COPMA
                                    WHERE (MA001 LIKE '2%' OR MA001 LIKE 'A%' OR MA001 LIKE '3%' OR MA001 LIKE 'B%')
                                    AND  MA011>=50000001
                                    )


                                    UPDATE [TKBUSINESS].[dbo].[UOF_COPMA100A]
                                    SET [sd070]='50萬以下(5分)'

                                    UPDATE [TKBUSINESS].[dbo].[UOF_COPMA100A]
                                    SET [sd070]='51萬~150萬(10分)'
                                    WHERE MA001 IN (
                                    SELECT MA001
                                    FROM (
                                        SELECT MA001,
                                            (
                                                SELECT SUM(LA017 - LA020 - LA022 - LA023)
                                                FROM [TK].dbo.SASLA
                                                WHERE LA006 = MA001 AND  YEAR(LA015) = YEAR(DATEADD(YEAR, -1, GETDATE()))
                                            ) AS LASTMONEYS
                                        FROM [TK].dbo.COPMA
                                        WHERE (MA001 LIKE '2%' OR MA001 LIKE 'A%' OR MA001 LIKE '3%' OR MA001 LIKE 'B%')
                                    ) AS TEMP
                                    WHERE LASTMONEYS > 510000
                                    )

                                    UPDATE [TKBUSINESS].[dbo].[UOF_COPMA100A]
                                    SET [sd070]='151萬~300萬(15分)'
                                    WHERE MA001 IN (
                                    SELECT MA001
                                    FROM (
                                        SELECT MA001,
                                            (
                                                SELECT SUM(LA017 - LA020 - LA022 - LA023)
                                                FROM [TK].dbo.SASLA
                                                WHERE LA006 = MA001 AND  YEAR(LA015) = YEAR(DATEADD(YEAR, -1, GETDATE()))
                                            ) AS LASTMONEYS
                                        FROM [TK].dbo.COPMA
                                        WHERE (MA001 LIKE '2%' OR MA001 LIKE 'A%' OR MA001 LIKE '3%' OR MA001 LIKE 'B%')
                                    ) AS TEMP
                                    WHERE LASTMONEYS > 1510000
                                    )

                                    UPDATE [TKBUSINESS].[dbo].[UOF_COPMA100A]
                                    SET [sd070]='300萬以上(20分)'
                                    WHERE MA001 IN (
                                    SELECT MA001
                                    FROM (
                                        SELECT MA001,
                                            (
                                                SELECT SUM(LA017 - LA020 - LA022 - LA023)
                                                FROM [TK].dbo.SASLA
                                                WHERE LA006 = MA001 AND  YEAR(LA015) = YEAR(DATEADD(YEAR, -1, GETDATE()))
                                            ) AS LASTMONEYS
                                        FROM [TK].dbo.COPMA
                                        WHERE (MA001 LIKE '2%' OR MA001 LIKE 'A%' OR MA001 LIKE '3%' OR MA001 LIKE 'B%')
                                    ) AS TEMP
                                    WHERE LASTMONEYS > 3000000
                                    )


                                    UPDATE [TKBUSINESS].[dbo].[UOF_COPMA100A]
                                    SET [sd071]='5'

                                    UPDATE [TKBUSINESS].[dbo].[UOF_COPMA100A]
                                    SET [sd071]='10'
                                    WHERE MA001 IN (
                                    SELECT MA001
                                    FROM (
                                        SELECT MA001,
                                            (
                                                SELECT SUM(LA017 - LA020 - LA022 - LA023)
                                                FROM [TK].dbo.SASLA
                                                WHERE LA006 = MA001 AND  YEAR(LA015) = YEAR(DATEADD(YEAR, -1, GETDATE()))
                                            ) AS LASTMONEYS
                                        FROM [TK].dbo.COPMA
                                        WHERE (MA001 LIKE '2%' OR MA001 LIKE 'A%' OR MA001 LIKE '3%' OR MA001 LIKE 'B%')
                                    ) AS TEMP
                                    WHERE LASTMONEYS > 510000
                                    )

                                    UPDATE [TKBUSINESS].[dbo].[UOF_COPMA100A]
                                    SET [sd071]='15'
                                    WHERE MA001 IN (
                                    SELECT MA001
                                    FROM (
                                        SELECT MA001,
                                            (
                                                SELECT SUM(LA017 - LA020 - LA022 - LA023)
                                                FROM [TK].dbo.SASLA
                                                WHERE LA006 = MA001 AND  YEAR(LA015) = YEAR(DATEADD(YEAR, -1, GETDATE()))
                                            ) AS LASTMONEYS
                                        FROM [TK].dbo.COPMA
                                        WHERE (MA001 LIKE '2%' OR MA001 LIKE 'A%' OR MA001 LIKE '3%' OR MA001 LIKE 'B%')
                                    ) AS TEMP
                                    WHERE LASTMONEYS > 1510000
                                    )

                                    UPDATE [TKBUSINESS].[dbo].[UOF_COPMA100A]
                                    SET [sd071]='20'
                                    WHERE MA001 IN (
                                    SELECT MA001
                                    FROM (
                                        SELECT MA001,
                                            (
                                                SELECT SUM(LA017 - LA020 - LA022 - LA023)
                                                FROM [TK].dbo.SASLA
                                                WHERE LA006 = MA001 AND  YEAR(LA015) = YEAR(DATEADD(YEAR, -1, GETDATE()))
                                            ) AS LASTMONEYS
                                        FROM [TK].dbo.COPMA
                                        WHERE (MA001 LIKE '2%' OR MA001 LIKE 'A%' OR MA001 LIKE '3%' OR MA001 LIKE 'B%')
                                    ) AS TEMP
                                    WHERE LASTMONEYS > 3000000
                                    )

                                    "


                                    );

                cmd.Connection = sqlConn;
                cmd.CommandTimeout = 60;
                cmd.CommandText = sbSql.ToString();
                cmd.Transaction = tran;
                result = cmd.ExecuteNonQuery();

                if (result == 0)
                {
                    tran.Rollback();    //交易取消
                }
                else
                {
                    tran.Commit();      //執行交易  
                }

            }
            catch
            {

            }

            finally
            {
                sqlConn.Close();
            }
        }

        public DataTable FIND_TB_UOF_COPMA_100A()
        {
            DataTable dt = new DataTable();
            DataTable DT = new DataTable();
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sbSql.Clear();
                sbSqlQuery.Clear();

                //庫存數量看LA009 IN ('20004','20006','20008','20019','20020'

                sbSql.AppendFormat(@"  
                                    SELECT *
                                    FROM [TKBUSINESS].[dbo].[UOF_COPMA100A]
                                    ");


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    return ds1.Tables["ds1"];
                }
                else
                {
                    return null;
                }

            }
            catch
            {

            }
            finally
            {
                sqlConn.Close();
            }

            return dt;
        }

        public void ADD_TB_WKF_EXTERNAL_TASK_UOF_COPMA_100A(DataTable dt)
        {
            DataTable DT = dt;
            DataTable DTUPFDEP = SEARCHUOFDEP("140078");

            string account = DTUPFDEP.Rows[0]["ACCOUNT"].ToString();
            string groupId = DTUPFDEP.Rows[0]["GROUP_ID"].ToString();
            string jobTitleId = DTUPFDEP.Rows[0]["TITLE_ID"].ToString();
            string fillerName = DTUPFDEP.Rows[0]["NAME"].ToString();
            string fillerUserGuid = DTUPFDEP.Rows[0]["USER_GUID"].ToString();

            string DEPNAME = DTUPFDEP.Rows[0]["DEPNAME"].ToString();
            string DEPNO = DTUPFDEP.Rows[0]["DEPNO"].ToString();

            string EXTERNAL_FORM_NBR = "";

            int rowscounts = 0;

            //正式的id
            string VERSION_ID = SEARCHFORM_UOF_VERSION_ID("100A.客戶基本資料表");           


            foreach (DataRow DR in dt.Rows)
            {
                DTUPFDEP = SEARCHUOFDEP(DR["MA016"].ToString());

                account = DTUPFDEP.Rows[0]["ACCOUNT"].ToString();
                groupId = DTUPFDEP.Rows[0]["GROUP_ID"].ToString();
                jobTitleId = DTUPFDEP.Rows[0]["TITLE_ID"].ToString();
                fillerName = DTUPFDEP.Rows[0]["NAME"].ToString();
                fillerUserGuid = DTUPFDEP.Rows[0]["USER_GUID"].ToString();

                DEPNAME = DTUPFDEP.Rows[0]["DEPNAME"].ToString();
                DEPNO = DTUPFDEP.Rows[0]["DEPNO"].ToString();


                EXTERNAL_FORM_NBR = DR["MA001"].ToString();

                XmlDocument xmlDoc = new XmlDocument();
                //建立根節點
                XmlElement Form = xmlDoc.CreateElement("Form");

                if (!string.IsNullOrEmpty(VERSION_ID))
                {
                    Form.SetAttribute("formVersionId", VERSION_ID);
                }

                Form.SetAttribute("urgentLevel", "2");
                //加入節點底下
                xmlDoc.AppendChild(Form);

                ////建立節點Applicant
                XmlElement Applicant = xmlDoc.CreateElement("Applicant");
                Applicant.SetAttribute("account", account);
                Applicant.SetAttribute("groupId", groupId);
                Applicant.SetAttribute("jobTitleId", jobTitleId);
                //加入節點底下
                Form.AppendChild(Applicant);

                //建立節點 Comment
                XmlElement Comment = xmlDoc.CreateElement("Comment");
                Comment.InnerText = "申請者意見";
                //加入至節點底下
                Applicant.AppendChild(Comment);

                //建立節點 FormFieldValue
                XmlElement FormFieldValue = xmlDoc.CreateElement("FormFieldValue");
                //加入至節點底下
                Form.AppendChild(FormFieldValue);

                //建立節點FieldItem
                //sd001 表單編號	
                XmlElement FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd001");
                FieldItem.SetAttribute("fieldValue", "");
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //建立節點FieldItem
                //MA001	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "MA001");
                FieldItem.SetAttribute("fieldValue", DR["MA001"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //建立節點FieldItem
                //sd002	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd002");
                FieldItem.SetAttribute("fieldValue", DR["sd002"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd002	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd002");
                FieldItem.SetAttribute("fieldValue", DR["sd002"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd003	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd003");
                FieldItem.SetAttribute("fieldValue", DR["sd003"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd004	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd004");
                FieldItem.SetAttribute("fieldValue", DR["sd004"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd005	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd005");
                FieldItem.SetAttribute("fieldValue", DR["sd005"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd90	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd90");
                FieldItem.SetAttribute("fieldValue", DR["sd90"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd006	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd006");
                FieldItem.SetAttribute("fieldValue", DR["sd006"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd007	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd007");
                FieldItem.SetAttribute("fieldValue", DR["sd007"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd008	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd008");
                FieldItem.SetAttribute("fieldValue", DR["sd008"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd009	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd009");
                FieldItem.SetAttribute("fieldValue", DR["sd009"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd010	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd010");
                FieldItem.SetAttribute("fieldValue", DR["sd010"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd011	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd011");
                FieldItem.SetAttribute("fieldValue", DR["sd011"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd012	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd012");
                FieldItem.SetAttribute("fieldValue", DR["sd012"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd013	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd013");
                FieldItem.SetAttribute("fieldValue", DR["sd013"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd014	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd014");
                FieldItem.SetAttribute("fieldValue", DR["sd014"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd015	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd015");
                FieldItem.SetAttribute("fieldValue", DR["sd015"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd016	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd016");
                FieldItem.SetAttribute("fieldValue", DR["sd016"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd017	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd017");
                FieldItem.SetAttribute("fieldValue", DR["sd017"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd018	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd018");
                FieldItem.SetAttribute("fieldValue", DR["sd018"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd019	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd019");
                FieldItem.SetAttribute("fieldValue", DR["sd019"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd020	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd020");
                FieldItem.SetAttribute("fieldValue", DR["sd020"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd021	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd021");
                FieldItem.SetAttribute("fieldValue", DR["sd021"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd022	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd022");
                FieldItem.SetAttribute("fieldValue", DR["sd022"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd023	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd023");
                FieldItem.SetAttribute("fieldValue", DR["sd023"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd024	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd024");
                FieldItem.SetAttribute("fieldValue", DR["sd024"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd025	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd025");
                FieldItem.SetAttribute("fieldValue", DR["sd025"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd026	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd026");
                FieldItem.SetAttribute("fieldValue", DR["sd026"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd027	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd027");
                FieldItem.SetAttribute("fieldValue", DR["sd027"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd028	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd028");
                FieldItem.SetAttribute("fieldValue", DR["sd028"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd029	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd029");
                FieldItem.SetAttribute("fieldValue", DR["sd029"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd030	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd030");
                FieldItem.SetAttribute("fieldValue", DR["sd030"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd031	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd031");
                FieldItem.SetAttribute("fieldValue", DR["sd031"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd032	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd032");
                FieldItem.SetAttribute("fieldValue", DR["sd032"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd033	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd033");
                FieldItem.SetAttribute("fieldValue", DR["sd033"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd034	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd034");
                FieldItem.SetAttribute("fieldValue", DR["sd034"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd035	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd035");
                FieldItem.SetAttribute("fieldValue", DR["sd035"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd036	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd036");
                FieldItem.SetAttribute("fieldValue", DR["sd036"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd037	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd037");
                FieldItem.SetAttribute("fieldValue", DR["sd037"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //建立節點FieldItem
                //sd038 表單編號	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd038");
                FieldItem.SetAttribute("fieldValue", "");
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //建立節點FieldItem
                //sd039
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd039");
                FieldItem.SetAttribute("fieldValue", "");
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //建立節點FieldItem
                //sd040
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd040");
                FieldItem.SetAttribute("fieldValue", "");
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //建立節點FieldItem
                //sd041	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd041");
                FieldItem.SetAttribute("fieldValue", "");
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //建立節點FieldItem
                //sd042	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd042");
                FieldItem.SetAttribute("fieldValue", DR["sd042"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //建立節點FieldItem
                //sd043	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd043");
                FieldItem.SetAttribute("fieldValue", DR["sd043"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //建立節點FieldItem
                //sd044	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd044");
                FieldItem.SetAttribute("fieldValue", DR["sd044"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd0	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd0");
                FieldItem.SetAttribute("fieldValue", DR["sd0"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd051	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd051");
                FieldItem.SetAttribute("fieldValue", DR["sd051"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd057	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd057");
                FieldItem.SetAttribute("fieldValue", DR["sd057"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd058	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd058");
                FieldItem.SetAttribute("fieldValue", DR["sd058"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd060	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd060");
                FieldItem.SetAttribute("fieldValue", DR["sd060"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd061	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd061");
                FieldItem.SetAttribute("fieldValue", DR["sd061"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd062	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd062");
                FieldItem.SetAttribute("fieldValue", DR["sd062"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd063	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd063");
                FieldItem.SetAttribute("fieldValue", DR["sd063"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd064	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd064");
                FieldItem.SetAttribute("fieldValue", DR["sd064"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd065	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd065");
                FieldItem.SetAttribute("fieldValue", DR["sd065"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd066	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd066");
                FieldItem.SetAttribute("fieldValue", DR["sd066"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd067	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd067");
                FieldItem.SetAttribute("fieldValue", DR["sd067"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd068	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd068");
                FieldItem.SetAttribute("fieldValue", DR["sd068"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd069	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd069");
                FieldItem.SetAttribute("fieldValue", DR["sd069"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd070	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd070");
                FieldItem.SetAttribute("fieldValue", DR["sd070"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd071	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd071");
                FieldItem.SetAttribute("fieldValue", DR["sd071"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd072	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd072");
                FieldItem.SetAttribute("fieldValue", DR["sd072"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd073	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd073");
                FieldItem.SetAttribute("fieldValue", DR["sd073"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd074	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd074");
                FieldItem.SetAttribute("fieldValue", DR["sd074"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd075	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd075");
                FieldItem.SetAttribute("fieldValue", DR["sd075"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd076	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd076");
                FieldItem.SetAttribute("fieldValue", DR["sd076"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd077	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd077");
                FieldItem.SetAttribute("fieldValue", DR["sd077"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd078	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd078");
                FieldItem.SetAttribute("fieldValue", DR["sd078"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd079	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd079");
                FieldItem.SetAttribute("fieldValue", DR["sd079"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd080	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd080");
                FieldItem.SetAttribute("fieldValue", DR["sd080"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd081	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd081");
                FieldItem.SetAttribute("fieldValue", DR["sd081"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd082	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd082");
                FieldItem.SetAttribute("fieldValue", DR["sd082"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd083	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd083");
                FieldItem.SetAttribute("fieldValue", DR["sd083"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);
               
                //foreach (DataRow od in DT.Rows)
                //{
                //    // 新增 Row
                //    XmlElement Row = xmlDoc.CreateElement("Row");
                //    Row.SetAttribute("order", (rowscounts).ToString());

                //    //Row	TB004
                //    XmlElement Cell = xmlDoc.CreateElement("Cell");
                //    Cell.SetAttribute("fieldId", "sd039");
                //    Cell.SetAttribute("fieldValue", od["sd039"].ToString());
                //    Cell.SetAttribute("realValue", "");
                //    Cell.SetAttribute("customValue", "");
                //    Cell.SetAttribute("enableSearch", "True");
                //    //Row
                //    Row.AppendChild(Cell);


                //    rowscounts = rowscounts + 1;

                //    XmlNode DataGridS = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='TB']/DataGrid");
                //    DataGridS.AppendChild(Row);

                //}

                ////用ADDTACK，直接啟動起單
                //ADDTACK(Form);

                //ADD TO DB
                ////string connectionString = ConfigurationManager.ConnectionStrings["dbUOF"].ToString();

                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);
                connectionString = sqlConn.ConnectionString.ToString();

                StringBuilder queryString = new StringBuilder();




                queryString.AppendFormat(@" 
                                            INSERT INTO [{0}].dbo.TB_WKF_EXTERNAL_TASK
                                            (EXTERNAL_TASK_ID,FORM_INFO,STATUS,EXTERNAL_FORM_NBR)
                                            VALUES (NEWID(),@XML,2,'{1}')
                                        ", DBNAME, EXTERNAL_FORM_NBR);

                try
                {
                    using (SqlConnection connection = new SqlConnection(connectionString))
                    {

                        SqlCommand command = new SqlCommand(queryString.ToString(), connection);
                        command.Parameters.Add("@XML", SqlDbType.NVarChar).Value = Form.OuterXml;

                        command.Connection.Open();

                        int count = command.ExecuteNonQuery();

                        connection.Close();
                        connection.Dispose();

                    }
                }
                catch
                {

                }
                finally
                {

                }
            }

            

           

        }

        public void ADD_UOF_COPMA_1001()
        {
            //新增客戶資料 TKBUSINESS UOF_COPMA1001
            ADD_TB_UOF_COPMA_1001();

            DataTable dt = FIND_TB_UOF_COPMA_1001();
            if (dt != null && dt.Rows.Count >= 1)
            {
                ADD_TB_WKF_EXTERNAL_TASK_UOF_COPMA_1001(dt);
            }
        }

        public void ADD_TB_UOF_COPMA_1001()
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sqlConn.Close();
                sqlConn.Open();
                tran = sqlConn.BeginTransaction();

                sbSql.Clear();

                sbSql.AppendFormat(@" 
                                     DELETE [TKBUSINESS].[dbo].[UOF_COPMA1001]
                                     INSERT INTO [TKBUSINESS].[dbo].[UOF_COPMA1001]
                                    (
                                    [MA001]
                                    ,[MA016]
                                    ,[sd001]
                                    ,[sd002]
                                    ,[sd003]
                                    ,[sd004]
                                    ,[sd005]
                                    ,[sd90]
                                    ,[sd006]
                                    ,[sd007]
                                    ,[sd008]
                                    ,[sd009]
                                    ,[sd010]
                                    ,[sd011]
                                    ,[sd012]
                                    ,[sd013]
                                    ,[sd014]
                                    ,[sd015]
                                    ,[sd016]
                                    ,[sd017]
                                    ,[sd018]
                                    ,[sd019]
                                    ,[sd020]
                                    ,[sd021]
                                    ,[sd022]
                                    ,[sd023]
                                    ,[sd024]
                                    ,[sd025]
                                    ,[sd026]
                                    ,[sd027]
                                    ,[sd028]
                                    ,[sd029]
                                    ,[sd030]
                                    ,[sd031]
                                    ,[sd032]
                                    ,[sd033]
                                    ,[sd034]
                                    ,[sd035]
                                    ,[sd036]
                                    ,[sd037]
                                    ,[sd038]
                                    ,[sd039]
                                    ,[sd040]
                                    ,[sd041]
                                    ,[sd042]
                                    ,[sd043]
                                    ,[sd044]
                                    ,[sd0]
                                    ,[sd051]
                                    ,[sd052]
                                    ,[sd053]
                                    ,[sd054]
                                    ,[sd055]
                                    ,[sd056]
                                    ,[sd057]
                                    ,[sd058]
                                    ,[sd060]
                                    ,[sd061]
                                    ,[sd062]
                                    ,[sd063]
                                    ,[sd064]
                                    ,[sd065]
                                    ,[sd066]
                                    ,[sd067]
                                    ,[sd068]
                                    ,[sd069]
                                    ,[sd070]
                                    ,[sd071]
                                    ,[sd072]
                                    ,[sd073]
                                    ,[sd074]
                                    ,[sd075]
                                    ,[sd076]
                                    ,[sd077]
                                    ,[sd078]
                                    ,[sd079]
                                    ,[sd080]
                                    ,[sd081]
                                    ,[sd082]
                                    ,[sd083]
                                    )

                                    SELECT   
                                     MA001
                                    ,MA016
                                    ,'' AS  sd001
                                    ,CONVERT(NVARCHAR,CONVERT(DATETIME,GETDATE()),111) AS  sd002
                                    ,'新增' AS  sd003
                                    ,MA003 AS  sd004
                                    ,MA002 AS  sd005
                                    ,(CASE WHEN MA001 LIKE '2%' THEN '國內業務@國內業務' WHEN MA001 LIKE 'A%' THEN '國內業務@國內業務'  WHEN MA001 LIKE '3%' THEN '國外業務@國外業務' WHEN MA001 LIKE 'B%' THEN '國外業務@國外業務' END  )AS  sd90
                                    ,MA023 AS  sd006
                                    ,MA025 AS  sd007
                                    ,MA010 AS  sd008
                                    ,MA004 AS  sd009
                                    ,MA005 AS  sd010
                                    ,'' AS  sd011
                                    ,'' AS  sd012
                                    ,'' AS  sd013
                                    ,MA006 AS  sd014
                                    ,MA007 AS  sd015
                                    ,MA009 AS  sd016
                                    ,(CASE WHEN ISDATE(MA020) = 1  THEN (CONVERT(NVARCHAR,CONVERT(DATETIME,COPMA.MA020),111)) END)  AS  sd017
                                    ,MA011*10000 AS  sd018
                                    ,'有限公司' AS  sd019
                                    ,MA013 AS  sd020
                                    ,(CASE WHEN MA067>=1 THEN '有' ELSE '無' END ) AS  sd021
                                    ,'' AS  sd022
                                    ,(CASE WHEN MA067>=1 THEN '有' ELSE '無' END ) AS  sd023
                                    ,'' AS  sd024
                                    ,'自有' AS  sd025
                                    ,'' AS  sd026
                                    ,'電子發票' AS  sd027
                                    ,(CASE WHEN MA041='1' THEN '現金'  WHEN MA041='2' THEN '電匯' WHEN MA041='3' THEN '支票' WHEN MA041='4' THEN '其他'END ) AS  sd028 
                                    ,'法人' AS  sd029
                                    ,COPMA.UDF02 AS  sd030
                                    ,'' AS  sd031
                                    ,'' AS  sd032
                                    ,'0' AS  sd033
                                    ,'25號' AS  sd034
                                    ,MO006 AS  sd035
                                    ,'' AS  sd036
                                    ,'' AS  sd037
                                    ,'' AS  sd038
                                    ,NA003 AS  sd039
                                    ,NA003 AS  sd041
                                    ,NA005 AS  sd040
                                    ,MA033 AS  sd042
                                    ,MA033 AS  sd043
                                    ,MA014 AS  sd044
                                    ,'客戶信用評分及信用額度' AS  sd0
                                    ,'信用評分' AS  sd051
                                    ,'' AS  sd052
                                    ,'' AS  sd053
                                    ,'' AS  sd054
                                    ,'' AS  sd055
                                    ,'信用評分' AS  sd056
                                    ,'3000萬以下(4分)' AS  sd057
                                    ,'4' AS  sd058
                                    ,'0' AS  sd060
                                    ,'0' AS  sd061
                                    ,'0' AS  sd062
                                    ,'' AS  sd063
                                    ,'3000萬以下（4分）' AS  sd064
                                    ,'4' AS  sd065
                                    ,'0' AS  sd066
                                    ,'' AS  sd067
                                    ,'0' AS  sd068
                                    ,'' AS  sd069
                                    ,'50萬以下(5分)' AS  sd070
                                    ,'5' AS  sd071
                                    ,'沒有(10分)' AS  sd072
                                    ,'10' AS  sd073
                                    ,'正常(10分)' AS  sd074
                                    ,'10' AS  sd075
                                    ,'' AS  sd076
                                    ,'5%以下(5分)' AS  sd077
                                    ,'5' AS  sd078
                                    ,'38' AS  sd079
                                    ,'0' AS  sd080
                                    ,'' AS  sd081
                                    ,'38' AS  sd082
                                    ,'0' AS  sd083
                                    FROM [TK].dbo.COPMA
                                    LEFT JOIN [DSCSYS].dbo.CMSMO ON MO001=MA046
                                    LEFT JOIN [TK].dbo.CMSNA ON NA001='2' AND NA002=MA083
                                    WHERE (MA001 LIKE '2%' OR MA001 LIKE 'A%' OR MA001 LIKE '3%' OR MA001 LIKE 'B%')
                                    AND MA001 COLLATE Chinese_Taiwan_Stroke_CI_AS  NOT IN 
                                    (
                                    SELECT [MA001]
                                    FROM [192.168.1.223].[UOF].[dbo].[View_TB_WKF_TASK_COPMA1001]
                                    )
                                    AND MA001 COLLATE Chinese_Taiwan_Stroke_CI_AS  NOT IN 
                                    (
                                    SELECT  [EXTERNAL_FORM_NBR]
                                    FROM [192.168.1.223].[UOF].[dbo].[View_TB_WKF_TASK_COPMA1001_EXTERNAL_TASK]
                                    )


                                    UPDATE [TKBUSINESS].[dbo].[UOF_COPMA1001]
                                    SET [sd057]='3000萬以下(4分)'

                                    UPDATE [TKBUSINESS].[dbo].[UOF_COPMA1001]
                                    SET [sd057]='3001萬~5000萬(6分)'
                                    WHERE MA001 IN (
                                    SELECT MA001 
                                    FROM [TK].dbo.COPMA
                                    WHERE (MA001 LIKE '2%' OR MA001 LIKE 'A%' OR MA001 LIKE '3%' OR MA001 LIKE 'B%')
                                    AND  MA011>=30000001
                                    )

                                    UPDATE [TKBUSINESS].[dbo].[UOF_COPMA1001]
                                    SET [sd057]='5001萬~1億以上(10分)'
                                    WHERE MA001 IN (
                                    SELECT MA001 
                                    FROM [TK].dbo.COPMA
                                    WHERE (MA001 LIKE '2%' OR MA001 LIKE 'A%' OR MA001 LIKE '3%' OR MA001 LIKE 'B%')
                                    AND  MA011>=50000001
                                    )


                                    UPDATE [TKBUSINESS].[dbo].[UOF_COPMA1001]
                                    SET sd058='4'

                                    UPDATE [TKBUSINESS].[dbo].[UOF_COPMA1001]
                                    SET sd058='6'
                                    WHERE MA001 IN (
                                    SELECT MA001 
                                    FROM [TK].dbo.COPMA
                                    WHERE (MA001 LIKE '2%' OR MA001 LIKE 'A%' OR MA001 LIKE '3%' OR MA001 LIKE 'B%')
                                    AND  MA011>=30000001
                                    )

                                    UPDATE [TKBUSINESS].[dbo].[UOF_COPMA1001]
                                    SET sd058='10'
                                    WHERE MA001 IN (
                                    SELECT MA001 
                                    FROM [TK].dbo.COPMA
                                    WHERE (MA001 LIKE '2%' OR MA001 LIKE 'A%' OR MA001 LIKE '3%' OR MA001 LIKE 'B%')
                                    AND  MA011>=50000001
                                    )


                                    UPDATE [TKBUSINESS].[dbo].[UOF_COPMA1001]
                                    SET [sd070]='50萬以下(5分)'

                                    UPDATE [TKBUSINESS].[dbo].[UOF_COPMA1001]
                                    SET [sd070]='51萬~150萬(10分)'
                                    WHERE MA001 IN (
                                    SELECT MA001
                                    FROM (
                                        SELECT MA001,
                                            (
                                                SELECT SUM(LA017 - LA020 - LA022 - LA023)
                                                FROM [TK].dbo.SASLA
                                                WHERE LA006 = MA001 AND  YEAR(LA015) = YEAR(DATEADD(YEAR, -1, GETDATE()))
                                            ) AS LASTMONEYS
                                        FROM [TK].dbo.COPMA
                                        WHERE (MA001 LIKE '2%' OR MA001 LIKE 'A%' OR MA001 LIKE '3%' OR MA001 LIKE 'B%')
                                    ) AS TEMP
                                    WHERE LASTMONEYS > 510000
                                    )

                                    UPDATE [TKBUSINESS].[dbo].[UOF_COPMA1001]
                                    SET [sd070]='151萬~300萬(15分)'
                                    WHERE MA001 IN (
                                    SELECT MA001
                                    FROM (
                                        SELECT MA001,
                                            (
                                                SELECT SUM(LA017 - LA020 - LA022 - LA023)
                                                FROM [TK].dbo.SASLA
                                                WHERE LA006 = MA001 AND  YEAR(LA015) = YEAR(DATEADD(YEAR, -1, GETDATE()))
                                            ) AS LASTMONEYS
                                        FROM [TK].dbo.COPMA
                                        WHERE (MA001 LIKE '2%' OR MA001 LIKE 'A%' OR MA001 LIKE '3%' OR MA001 LIKE 'B%')
                                    ) AS TEMP
                                    WHERE LASTMONEYS > 1510000
                                    )

                                    UPDATE [TKBUSINESS].[dbo].[UOF_COPMA1001]
                                    SET [sd070]='300萬以上(20分)'
                                    WHERE MA001 IN (
                                    SELECT MA001
                                    FROM (
                                        SELECT MA001,
                                            (
                                                SELECT SUM(LA017 - LA020 - LA022 - LA023)
                                                FROM [TK].dbo.SASLA
                                                WHERE LA006 = MA001 AND  YEAR(LA015) = YEAR(DATEADD(YEAR, -1, GETDATE()))
                                            ) AS LASTMONEYS
                                        FROM [TK].dbo.COPMA
                                        WHERE (MA001 LIKE '2%' OR MA001 LIKE 'A%' OR MA001 LIKE '3%' OR MA001 LIKE 'B%')
                                    ) AS TEMP
                                    WHERE LASTMONEYS > 3000000
                                    )


                                    UPDATE [TKBUSINESS].[dbo].[UOF_COPMA1001]
                                    SET [sd071]='5'

                                    UPDATE [TKBUSINESS].[dbo].[UOF_COPMA1001]
                                    SET [sd071]='10'
                                    WHERE MA001 IN (
                                    SELECT MA001
                                    FROM (
                                        SELECT MA001,
                                            (
                                                SELECT SUM(LA017 - LA020 - LA022 - LA023)
                                                FROM [TK].dbo.SASLA
                                                WHERE LA006 = MA001 AND  YEAR(LA015) = YEAR(DATEADD(YEAR, -1, GETDATE()))
                                            ) AS LASTMONEYS
                                        FROM [TK].dbo.COPMA
                                        WHERE (MA001 LIKE '2%' OR MA001 LIKE 'A%' OR MA001 LIKE '3%' OR MA001 LIKE 'B%')
                                    ) AS TEMP
                                    WHERE LASTMONEYS > 510000
                                    )

                                    UPDATE [TKBUSINESS].[dbo].[UOF_COPMA1001]
                                    SET [sd071]='15'
                                    WHERE MA001 IN (
                                    SELECT MA001
                                    FROM (
                                        SELECT MA001,
                                            (
                                                SELECT SUM(LA017 - LA020 - LA022 - LA023)
                                                FROM [TK].dbo.SASLA
                                                WHERE LA006 = MA001 AND  YEAR(LA015) = YEAR(DATEADD(YEAR, -1, GETDATE()))
                                            ) AS LASTMONEYS
                                        FROM [TK].dbo.COPMA
                                        WHERE (MA001 LIKE '2%' OR MA001 LIKE 'A%' OR MA001 LIKE '3%' OR MA001 LIKE 'B%')
                                    ) AS TEMP
                                    WHERE LASTMONEYS > 1510000
                                    )

                                    UPDATE [TKBUSINESS].[dbo].[UOF_COPMA1001]
                                    SET [sd071]='20'
                                    WHERE MA001 IN (
                                    SELECT MA001
                                    FROM (
                                        SELECT MA001,
                                            (
                                                SELECT SUM(LA017 - LA020 - LA022 - LA023)
                                                FROM [TK].dbo.SASLA
                                                WHERE LA006 = MA001 AND  YEAR(LA015) = YEAR(DATEADD(YEAR, -1, GETDATE()))
                                            ) AS LASTMONEYS
                                        FROM [TK].dbo.COPMA
                                        WHERE (MA001 LIKE '2%' OR MA001 LIKE 'A%' OR MA001 LIKE '3%' OR MA001 LIKE 'B%')
                                    ) AS TEMP
                                    WHERE LASTMONEYS > 3000000
                                    )

                                    "


                                    );

                cmd.Connection = sqlConn;
                cmd.CommandTimeout = 60;
                cmd.CommandText = sbSql.ToString();
                cmd.Transaction = tran;
                result = cmd.ExecuteNonQuery();

                if (result == 0)
                {
                    tran.Rollback();    //交易取消
                }
                else
                {
                    tran.Commit();      //執行交易  
                }

            }
            catch
            {

            }

            finally
            {
                sqlConn.Close();
            }
        }

        public DataTable FIND_TB_UOF_COPMA_1001()
        {
            DataTable dt = new DataTable();
            DataTable DT = new DataTable();
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sbSql.Clear();
                sbSqlQuery.Clear();

                //庫存數量看LA009 IN ('20004','20006','20008','20019','20020'

                sbSql.AppendFormat(@"  
                                    SELECT *
                                    FROM [TKBUSINESS].[dbo].[UOF_COPMA1001]
                                    ");


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    return ds1.Tables["ds1"];
                }
                else
                {
                    return null;
                }

            }
            catch
            {

            }
            finally
            {
                sqlConn.Close();
            }

            return dt;
        }
       
        public void ADD_TB_WKF_EXTERNAL_TASK_UOF_COPMA_1001(DataTable dt)
        {
            DataTable DT = dt;
            DataTable DTUPFDEP = SEARCHUOFDEP("140078");

            string account = DTUPFDEP.Rows[0]["ACCOUNT"].ToString();
            string groupId = DTUPFDEP.Rows[0]["GROUP_ID"].ToString();
            string jobTitleId = DTUPFDEP.Rows[0]["TITLE_ID"].ToString();
            string fillerName = DTUPFDEP.Rows[0]["NAME"].ToString();
            string fillerUserGuid = DTUPFDEP.Rows[0]["USER_GUID"].ToString();

            string DEPNAME = DTUPFDEP.Rows[0]["DEPNAME"].ToString();
            string DEPNO = DTUPFDEP.Rows[0]["DEPNO"].ToString();

            string EXTERNAL_FORM_NBR = "";

            int rowscounts = 0;

            //正式的id
            string VERSION_ID = SEARCHFORM_UOF_VERSION_ID("1001.客戶基本資料表");


            foreach (DataRow DR in dt.Rows)
            {
                DTUPFDEP = SEARCHUOFDEP(DR["MA016"].ToString());

                account = DTUPFDEP.Rows[0]["ACCOUNT"].ToString();
                groupId = DTUPFDEP.Rows[0]["GROUP_ID"].ToString();
                jobTitleId = DTUPFDEP.Rows[0]["TITLE_ID"].ToString();
                fillerName = DTUPFDEP.Rows[0]["NAME"].ToString();
                fillerUserGuid = DTUPFDEP.Rows[0]["USER_GUID"].ToString();

                DEPNAME = DTUPFDEP.Rows[0]["DEPNAME"].ToString();
                DEPNO = DTUPFDEP.Rows[0]["DEPNO"].ToString();

                EXTERNAL_FORM_NBR = DR["MA001"].ToString();

                XmlDocument xmlDoc = new XmlDocument();
                //建立根節點
                XmlElement Form = xmlDoc.CreateElement("Form");

                if (!string.IsNullOrEmpty(VERSION_ID))
                {
                    Form.SetAttribute("formVersionId", VERSION_ID);
                }

                Form.SetAttribute("urgentLevel", "2");
                //加入節點底下
                xmlDoc.AppendChild(Form);

                ////建立節點Applicant
                XmlElement Applicant = xmlDoc.CreateElement("Applicant");
                Applicant.SetAttribute("account", account);
                Applicant.SetAttribute("groupId", groupId);
                Applicant.SetAttribute("jobTitleId", jobTitleId);
                //加入節點底下
                Form.AppendChild(Applicant);

                //建立節點 Comment
                XmlElement Comment = xmlDoc.CreateElement("Comment");
                Comment.InnerText = "申請者意見";
                //加入至節點底下
                Applicant.AppendChild(Comment);

                //建立節點 FormFieldValue
                XmlElement FormFieldValue = xmlDoc.CreateElement("FormFieldValue");
                //加入至節點底下
                Form.AppendChild(FormFieldValue);

                //建立節點FieldItem
                //sd001 表單編號	
                XmlElement FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd001");
                FieldItem.SetAttribute("fieldValue", "");
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //建立節點FieldItem
                //MA001	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "MA001");
                FieldItem.SetAttribute("fieldValue", DR["MA001"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //建立節點FieldItem
                //sd002	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd002");
                FieldItem.SetAttribute("fieldValue", DR["sd002"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd002	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd002");
                FieldItem.SetAttribute("fieldValue", DR["sd002"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd003	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd003");
                FieldItem.SetAttribute("fieldValue", DR["sd003"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd004	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd004");
                FieldItem.SetAttribute("fieldValue", DR["sd004"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd005	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd005");
                FieldItem.SetAttribute("fieldValue", DR["sd005"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd90	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd90");
                FieldItem.SetAttribute("fieldValue", DR["sd90"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd006	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd006");
                FieldItem.SetAttribute("fieldValue", DR["sd006"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd007	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd007");
                FieldItem.SetAttribute("fieldValue", DR["sd007"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd008	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd008");
                FieldItem.SetAttribute("fieldValue", DR["sd008"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd009	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd009");
                FieldItem.SetAttribute("fieldValue", DR["sd009"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd010	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd010");
                FieldItem.SetAttribute("fieldValue", DR["sd010"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd011	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd011");
                FieldItem.SetAttribute("fieldValue", DR["sd011"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd012	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd012");
                FieldItem.SetAttribute("fieldValue", DR["sd012"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd013	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd013");
                FieldItem.SetAttribute("fieldValue", DR["sd013"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd014	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd014");
                FieldItem.SetAttribute("fieldValue", DR["sd014"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd015	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd015");
                FieldItem.SetAttribute("fieldValue", DR["sd015"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd016	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd016");
                FieldItem.SetAttribute("fieldValue", DR["sd016"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd017	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd017");
                FieldItem.SetAttribute("fieldValue", DR["sd017"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd018	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd018");
                FieldItem.SetAttribute("fieldValue", DR["sd018"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd019	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd019");
                FieldItem.SetAttribute("fieldValue", DR["sd019"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd020	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd020");
                FieldItem.SetAttribute("fieldValue", DR["sd020"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd021	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd021");
                FieldItem.SetAttribute("fieldValue", DR["sd021"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd022	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd022");
                FieldItem.SetAttribute("fieldValue", DR["sd022"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd023	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd023");
                FieldItem.SetAttribute("fieldValue", DR["sd023"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd024	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd024");
                FieldItem.SetAttribute("fieldValue", DR["sd024"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd025	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd025");
                FieldItem.SetAttribute("fieldValue", DR["sd025"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd026	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd026");
                FieldItem.SetAttribute("fieldValue", DR["sd026"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd027	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd027");
                FieldItem.SetAttribute("fieldValue", DR["sd027"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd028	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd028");
                FieldItem.SetAttribute("fieldValue", DR["sd028"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd029	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd029");
                FieldItem.SetAttribute("fieldValue", DR["sd029"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd030	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd030");
                FieldItem.SetAttribute("fieldValue", DR["sd030"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd031	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd031");
                FieldItem.SetAttribute("fieldValue", DR["sd031"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd032	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd032");
                FieldItem.SetAttribute("fieldValue", DR["sd032"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd033	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd033");
                FieldItem.SetAttribute("fieldValue", DR["sd033"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd034	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd034");
                FieldItem.SetAttribute("fieldValue", DR["sd034"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd035	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd035");
                FieldItem.SetAttribute("fieldValue", DR["sd035"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd036	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd036");
                FieldItem.SetAttribute("fieldValue", DR["sd036"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd037	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd037");
                FieldItem.SetAttribute("fieldValue", DR["sd037"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //建立節點FieldItem
                //sd038 表單編號	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd038");
                FieldItem.SetAttribute("fieldValue", "");
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //建立節點FieldItem
                //sd039
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd039");
                FieldItem.SetAttribute("fieldValue", "");
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //建立節點FieldItem
                //sd040
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd040");
                FieldItem.SetAttribute("fieldValue", "");
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //建立節點FieldItem
                //sd041	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd041");
                FieldItem.SetAttribute("fieldValue", "");
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //建立節點FieldItem
                //sd042	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd042");
                FieldItem.SetAttribute("fieldValue", "");
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //建立節點FieldItem
                //sd043	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd043");
                FieldItem.SetAttribute("fieldValue", "");
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //建立節點FieldItem
                //sd044	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd044");
                FieldItem.SetAttribute("fieldValue", "");
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                ////建立節點 DataGrid
                //XmlElement DataGrid = xmlDoc.CreateElement("DataGrid");
                ////DataGrid 加入至 TB 節點底下
                //XmlNode TB = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='sd038']");
                //TB.AppendChild(DataGrid);

                //// 新增 Row
                //XmlElement Row = xmlDoc.CreateElement("Row");
                //Row.SetAttribute("order", (rowscounts).ToString());

                ////Row	sd039
                //XmlElement Cell = xmlDoc.CreateElement("Cell");
                //Cell.SetAttribute("fieldId", "sd039");
                //Cell.SetAttribute("fieldValue", DR["sd039"].ToString());
                //Cell.SetAttribute("realValue", "");
                //Cell.SetAttribute("customValue", "");
                //Cell.SetAttribute("enableSearch", "True");
                ////Row
                //Row.AppendChild(Cell);
                ////Row	sd040
                //Cell = xmlDoc.CreateElement("Cell");
                //Cell.SetAttribute("fieldId", "sd040");
                //Cell.SetAttribute("fieldValue", DR["sd040"].ToString());
                //Cell.SetAttribute("realValue", "");
                //Cell.SetAttribute("customValue", "");
                //Cell.SetAttribute("enableSearch", "True");
                ////Row
                //Row.AppendChild(Cell);
                ////Row	sd041
                //Cell = xmlDoc.CreateElement("Cell");
                //Cell.SetAttribute("fieldId", "sd041");
                //Cell.SetAttribute("fieldValue", DR["sd041"].ToString());
                //Cell.SetAttribute("realValue", "");
                //Cell.SetAttribute("customValue", "");
                //Cell.SetAttribute("enableSearch", "True");
                ////Row
                //Row.AppendChild(Cell);
                ////Row	sd042
                //Cell = xmlDoc.CreateElement("Cell");
                //Cell.SetAttribute("fieldId", "sd042");
                //Cell.SetAttribute("fieldValue", DR["sd042"].ToString());
                //Cell.SetAttribute("realValue", "");
                //Cell.SetAttribute("customValue", "");
                //Cell.SetAttribute("enableSearch", "True");
                ////Row
                //Row.AppendChild(Cell);
                ////Row	sd043
                //Cell = xmlDoc.CreateElement("Cell");
                //Cell.SetAttribute("fieldId", "sd043");
                //Cell.SetAttribute("fieldValue", DR["sd043"].ToString());
                //Cell.SetAttribute("realValue", "");
                //Cell.SetAttribute("customValue", "");
                //Cell.SetAttribute("enableSearch", "True");
                ////Row
                //Row.AppendChild(Cell);
                ////Row	sd044
                //Cell = xmlDoc.CreateElement("Cell");
                //Cell.SetAttribute("fieldId", "sd044");
                //Cell.SetAttribute("fieldValue", DR["sd044"].ToString());
                //Cell.SetAttribute("realValue", "");
                //Cell.SetAttribute("customValue", "");
                //Cell.SetAttribute("enableSearch", "True");
                ////Row
                //Row.AppendChild(Cell);

                //XmlNode DataGridS = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='sd038']/DataGrid");
                //DataGridS.AppendChild(Row);

                //sd0	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd0");
                FieldItem.SetAttribute("fieldValue", DR["sd0"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd051	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd051");
                FieldItem.SetAttribute("fieldValue", DR["sd051"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd057	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd057");
                FieldItem.SetAttribute("fieldValue", DR["sd057"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd058	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd058");
                FieldItem.SetAttribute("fieldValue", DR["sd058"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd060	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd060");
                FieldItem.SetAttribute("fieldValue", DR["sd060"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd061	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd061");
                FieldItem.SetAttribute("fieldValue", DR["sd061"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd062	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd062");
                FieldItem.SetAttribute("fieldValue", DR["sd062"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd063	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd063");
                FieldItem.SetAttribute("fieldValue", DR["sd063"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd064	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd064");
                FieldItem.SetAttribute("fieldValue", DR["sd064"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd065	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd065");
                FieldItem.SetAttribute("fieldValue", DR["sd065"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd066	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd066");
                FieldItem.SetAttribute("fieldValue", DR["sd066"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd067	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd067");
                FieldItem.SetAttribute("fieldValue", DR["sd067"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd068	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd068");
                FieldItem.SetAttribute("fieldValue", DR["sd068"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd069	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd069");
                FieldItem.SetAttribute("fieldValue", DR["sd069"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd070	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd070");
                FieldItem.SetAttribute("fieldValue", DR["sd070"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd071	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd071");
                FieldItem.SetAttribute("fieldValue", DR["sd071"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd072	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd072");
                FieldItem.SetAttribute("fieldValue", DR["sd072"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd073	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd073");
                FieldItem.SetAttribute("fieldValue", DR["sd073"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd074	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd074");
                FieldItem.SetAttribute("fieldValue", DR["sd074"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd075	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd075");
                FieldItem.SetAttribute("fieldValue", DR["sd075"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd076	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd076");
                FieldItem.SetAttribute("fieldValue", DR["sd076"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd077	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd077");
                FieldItem.SetAttribute("fieldValue", DR["sd077"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd078	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd078");
                FieldItem.SetAttribute("fieldValue", DR["sd078"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd079	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd079");
                FieldItem.SetAttribute("fieldValue", DR["sd079"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd080	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd080");
                FieldItem.SetAttribute("fieldValue", DR["sd080"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd081	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd081");
                FieldItem.SetAttribute("fieldValue", DR["sd081"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd082	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd082");
                FieldItem.SetAttribute("fieldValue", DR["sd082"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //sd083	
                FieldItem = xmlDoc.CreateElement("FieldItem");
                FieldItem.SetAttribute("fieldId", "sd083");
                FieldItem.SetAttribute("fieldValue", DR["sd083"].ToString());
                FieldItem.SetAttribute("realValue", "");
                FieldItem.SetAttribute("enableSearch", "True");
                FieldItem.SetAttribute("fillerName", fillerName);
                FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
                FieldItem.SetAttribute("fillerAccount", account);
                FieldItem.SetAttribute("fillSiteId", "");
                //加入至members節點底下
                FormFieldValue.AppendChild(FieldItem);

                //foreach (DataRow od in DT.Rows)
                //{
                //    // 新增 Row
                //    XmlElement Row = xmlDoc.CreateElement("Row");
                //    Row.SetAttribute("order", (rowscounts).ToString());

                //    //Row	TB004
                //    XmlElement Cell = xmlDoc.CreateElement("Cell");
                //    Cell.SetAttribute("fieldId", "sd039");
                //    Cell.SetAttribute("fieldValue", od["sd039"].ToString());
                //    Cell.SetAttribute("realValue", "");
                //    Cell.SetAttribute("customValue", "");
                //    Cell.SetAttribute("enableSearch", "True");
                //    //Row
                //    Row.AppendChild(Cell);


                //    rowscounts = rowscounts + 1;

                //    XmlNode DataGridS = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='TB']/DataGrid");
                //    DataGridS.AppendChild(Row);

                //}

                ////用ADDTACK，直接啟動起單
                //ADDTACK(Form);

                //ADD TO DB
                ////string connectionString = ConfigurationManager.ConnectionStrings["dbUOF"].ToString();

                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);
                connectionString = sqlConn.ConnectionString.ToString();

                StringBuilder queryString = new StringBuilder();




                queryString.AppendFormat(@" 
                                            INSERT INTO [{0}].dbo.TB_WKF_EXTERNAL_TASK
                                            (EXTERNAL_TASK_ID,FORM_INFO,STATUS,EXTERNAL_FORM_NBR)
                                            VALUES (NEWID(),@XML,2,'{1}')
                                        ", DBNAME, EXTERNAL_FORM_NBR);

                try
                {
                    using (SqlConnection connection = new SqlConnection(connectionString))
                    {

                        SqlCommand command = new SqlCommand(queryString.ToString(), connection);
                        command.Parameters.Add("@XML", SqlDbType.NVarChar).Value = Form.OuterXml;

                        command.Connection.Open();

                        int count = command.ExecuteNonQuery();

                        connection.Close();
                        connection.Dispose();

                    }
                }
                catch
                {

                }
                finally
                {

                }
            }





        }

        public void NEWPURTEPURTF_ERP()
        {
            //查詢請購變更單已核，但是未產生採購變更單的明細
            DataTable DT_FIND_View_TB_WKF_TASK_PURTACHANGE = FIND_View_TB_WKF_TASK_PURTACHANGE();

            if (DT_FIND_View_TB_WKF_TASK_PURTACHANGE!=null&& DT_FIND_View_TB_WKF_TASK_PURTACHANGE.Rows.Count>=1)
            {
                foreach(DataRow DR_FIND_View_TB_WKF_TASK_PURTACHANGE in DT_FIND_View_TB_WKF_TASK_PURTACHANGE.Rows)
                {
                    string TA001 = DR_FIND_View_TB_WKF_TASK_PURTACHANGE["TA001"].ToString();
                    string TA002 = DR_FIND_View_TB_WKF_TASK_PURTACHANGE["TA002"].ToString();
                    string VERSIONS = DR_FIND_View_TB_WKF_TASK_PURTACHANGE["VERSIONS"].ToString();

                    //檢查請購變更單的採購單，是否有採購變更單未核準
                    DataTable DTCHECKPURTEPURTF = CHECKPURTEPURTF(TA001, TA002, VERSIONS);
                    //DTCHECKPURTEPURTF = null;
                    if (DTCHECKPURTEPURTF == null)
                    {
                        //找出請購變更單有幾張採購單，要1對多
                        DataTable DTPURTCPURTD = SEARCHPURTCPURTD(TA001, TA002, VERSIONS);
                        //DataTable DTPURTCPURTD = SEARCHPURTCPURTD("A312", "20221116001", "2");
                        DataTable DTOURTE = new DataTable();

                        //找出採購單跟最大的版次
                        if (DTPURTCPURTD.Rows.Count > 0)
                        {
                            DTOURTE = FINDPURTE(DTPURTCPURTD);

                            //新增採購變更單
                            if (DTOURTE.Rows.Count > 0)
                            {
                                ADDTOPURTEPURTF(DTOURTE);
                            }
                        }

                       
                    }
                    else
                    {
                        StringBuilder MESS = new StringBuilder();
                        foreach (DataRow DR in DTCHECKPURTEPURTF.Rows)
                        {
                            MESS.AppendFormat(@" 採購變更單:" + DR["TE001"].ToString() + " " + DR["TE002"].ToString() + "" + "變更版次:" + DR["TE003"].ToString() + " 沒有核準 ");
                        }

                        MessageBox.Show(MESS.ToString());
                    }

                }


            }



        }

        public DataTable FIND_View_TB_WKF_TASK_PURTACHANGE()
        {
            SqlDataAdapter adapter = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder = new SqlCommandBuilder();
            DataSet ds = new DataSet();

            try
            {
                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);



                sbSql.Clear();
                sbSqlQuery.Clear();


                sbSql.AppendFormat(@"  
                                    SELECT 
                                    [TA001]
                                    ,[TA002]
                                    ,[VERSIONS]
                                    FROM [UOF].[dbo].[View_TB_WKF_TASK_PURTACHANGE]
                                    WHERE 1=1
                                    AND ISNULL([TA002],'')<>''
                                    AND [VERSIONS]+[TA001]+[TA002] COLLATE Chinese_Taiwan_Stroke_BIN NOT IN
                                    (
                                    SELECT SUBSTRING(UDF01,1,LEN(UDF01)-4) FROM [192.168.1.105].[TK].dbo.PURTF 
                                    WHERE ISNULL(UDF01,'')<>''

                                    GROUP BY SUBSTRING(UDF01,1,LEN(UDF01)-4)
                                    )
                                    AND TA002>='20231207001'
                                    GROUP BY TA001, TA002, VERSIONS
                                    ORDER BY [TA002]

                                    ");

                adapter = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder = new SqlCommandBuilder(adapter);
                sqlConn.Open();
                ds.Clear();
                adapter.Fill(ds, "TEMPds1");
                sqlConn.Close();


                if (ds.Tables["TEMPds1"].Rows.Count >= 1)
                {

                    return ds.Tables["TEMPds1"];
                }
                else
                {
                    return null;

                }


            }
            catch
            {
                return null;
            }
            finally
            {

            }



        }

        public DataTable CHECKPURTEPURTF(string TA001, string TA002, string VERSIONS)
        {
            SqlDataAdapter adapter = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder = new SqlCommandBuilder();
            DataSet ds = new DataSet();

            try
            {
                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbconn"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);



                sbSql.Clear();
                sbSqlQuery.Clear();


                sbSql.AppendFormat(@"  
                                    SELECT TE001,TE002,TE003
                                    FROM [TK].dbo.PURTE
                                    WHERE TE017 IN ('N')
                                    AND TE001+TE002 IN 
                                    (
                                    SELECT TD001+TD002
                                    FROM [TK].dbo.PURTD
                                    WHERE TD026+TD027+TD028 IN 
                                    (
                                    SELECT TA001+TA002+TB003
                                    FROM [TKPUR].[dbo].[PURTATBCHAGE]
                                    WHERE  TA001='{0}' AND TA002='{1}' AND VERSIONS='{2}'
                                    )
                                    GROUP BY  TD001,TD002
                                    )

                                    ", TA001, TA002, VERSIONS);

                adapter = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder = new SqlCommandBuilder(adapter);
                sqlConn.Open();
                ds.Clear();
                adapter.Fill(ds, "TEMPds1");
                sqlConn.Close();


                if (ds.Tables["TEMPds1"].Rows.Count >= 1)
                {

                    return ds.Tables["TEMPds1"];
                }
                else
                {
                    return null;

                }


            }
            catch
            {
                return null;
            }
            finally
            {

            }



        }

        public DataTable SEARCHPURTCPURTD(string TA001, string TA002, string VERSIONS)
        {
            SqlDataAdapter adapter = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder = new SqlCommandBuilder();
            DataSet ds = new DataSet();

            try
            {
                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbconn"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);



                sbSql.Clear();
                sbSqlQuery.Clear();


                sbSql.AppendFormat(@"  
                                  
                                    SELECT TD001,TD002,'{0}' TA001,'{1}' TA002,'{2}' VERSIONS
                                    FROM [TK].dbo.PURTD
                                    WHERE TD026+TD027+TD028 IN 
                                    (
                                    SELECT TA001+TA002+TB003
                                    FROM [TKPUR].[dbo].[PURTATBCHAGE]
                                    WHERE  TA001='{0}' AND TA002='{1}' AND VERSIONS='{2}'
                                    )
                                    GROUP BY  TD001,TD002

                                    ", TA001, TA002, VERSIONS);

                adapter = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder = new SqlCommandBuilder(adapter);
                sqlConn.Open();
                ds.Clear();
                adapter.Fill(ds, "TEMPds1");
                sqlConn.Close();


                if (ds.Tables["TEMPds1"].Rows.Count >= 1)
                {

                    return ds.Tables["TEMPds1"];
                }
                else
                {
                    return null;

                }


            }
            catch
            {
                return null;
            }
            finally
            {

            }



        }

        public DataTable FINDPURTE(DataTable DTTEMP)
        {
            DataTable DT = new DataTable();
            DT.Clear();
            DT.Columns.Add("TE001");
            DT.Columns.Add("TE002");
            DT.Columns.Add("TE003");
            DT.Columns.Add("TA001");
            DT.Columns.Add("TA002");
            DT.Columns.Add("VERSIONS");



            SqlDataAdapter adapter = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder = new SqlCommandBuilder();
            DataSet ds = new DataSet();

            string TE001 = null;
            string TE002 = null;
            string TA001 = null;
            string TA002 = null;
            string VERSIONS = null;

            if (DTTEMP.Rows.Count > 0)
            {
                foreach (DataRow DR in DTTEMP.Rows)
                {

                    TE001 = DR["TD001"].ToString();
                    TE002 = DR["TD002"].ToString();
                    TA001 = DR["TA001"].ToString();
                    TA002 = DR["TA002"].ToString();
                    VERSIONS = DR["VERSIONS"].ToString();

                    try
                    {
                        //20210902密
                        Class1 TKID = new Class1();//用new 建立類別實體
                        SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbconn"].ConnectionString);

                        //資料庫使用者密碼解密
                        sqlsb.Password = TKID.Decryption(sqlsb.Password);
                        sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                        String connectionString;
                        sqlConn = new SqlConnection(sqlsb.ConnectionString);



                        sbSql.Clear();
                        sbSqlQuery.Clear();


                        sbSql.AppendFormat(@"  
                                            SELECT TOP 1 TE001,TE002,TE003
                                            FROM [TK].dbo.PURTE
                                            WHERE TE001='{0}' AND TE002='{1}'
                                            ORDER BY TE001 DESC,TE002 DESC,TE003 DESC

                                             ", TE001, TE002);

                        adapter = new SqlDataAdapter(@"" + sbSql, sqlConn);

                        sqlCmdBuilder = new SqlCommandBuilder(adapter);
                        sqlConn.Open();
                        ds.Clear();
                        adapter.Fill(ds, "TEMPds1");
                        sqlConn.Close();


                        if (ds.Tables["TEMPds1"].Rows.Count >= 1)
                        {
                            int serno = Convert.ToInt16(ds.Tables["TEMPds1"].Rows[0]["TE003"].ToString());
                            serno = serno + 1;
                            string temp = serno.ToString();
                            temp = temp.PadLeft(4, '0');

                            DataRow NEWDR = DT.NewRow();
                            NEWDR["TE001"] = TE001;
                            NEWDR["TE002"] = TE002;
                            NEWDR["TE003"] = temp;
                            NEWDR["TA001"] = TA001;
                            NEWDR["TA002"] = TA002;
                            NEWDR["VERSIONS"] = VERSIONS;
                            DT.Rows.Add(NEWDR);

                        }
                        else
                        {
                            DataRow NEWDR = DT.NewRow();
                            NEWDR["TE001"] = TE001;
                            NEWDR["TE002"] = TE002;
                            NEWDR["TE003"] = "0001";
                            NEWDR["TA001"] = TA001;
                            NEWDR["TA002"] = TA002;
                            NEWDR["VERSIONS"] = VERSIONS;
                            DT.Rows.Add(NEWDR);

                        }


                    }
                    catch
                    {
                        return null;
                    }
                    finally
                    {

                    }
                }

                return DT;
            }
            else
            {
                return null;
            }
        }


        public void ADDTOPURTEPURTF(DataTable NEWPURTEPURTF)
        {
            if (NEWPURTEPURTF.Rows.Count > 0)
            {
                try
                {
                    //20210902密
                    Class1 TKID = new Class1();//用new 建立類別實體
                    SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbconn"].ConnectionString);

                    //資料庫使用者密碼解密
                    sqlsb.Password = TKID.Decryption(sqlsb.Password);
                    sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                    String connectionString;
                    sqlConn = new SqlConnection(sqlsb.ConnectionString);



                    sqlConn.Close();
                    sqlConn.Open();
                    tran = sqlConn.BeginTransaction();

                    sbSql.Clear();

                    foreach (DataRow DR in NEWPURTEPURTF.Rows)
                    {
                        sbSql.AppendFormat(@"  
                                   
                                            INSERT INTO [TK].[dbo].[PURTF]
                                            (
                                            [COMPANY]
                                            ,[CREATOR]
                                            ,[USR_GROUP]
                                            ,[CREATE_DATE]
                                            ,[MODIFIER]
                                            ,[MODI_DATE]
                                            ,[FLAG]
                                            ,[CREATE_TIME]
                                            ,[MODI_TIME]
                                            ,[TRANS_TYPE]
                                            ,[TRANS_NAME]
                                            ,[sync_date]
                                            ,[sync_time]
                                            ,[sync_mark]
                                            ,[sync_count]
                                            ,[DataUser]
                                            ,[DataGroup]
                                            ,[TF001]
                                            ,[TF002]
                                            ,[TF003]
                                            ,[TF004]
                                            ,[TF005]
                                            ,[TF006]
                                            ,[TF007]
                                            ,[TF008]
                                            ,[TF009]
                                            ,[TF010]
                                            ,[TF011]
                                            ,[TF012]
                                            ,[TF013]
                                            ,[TF014]
                                            ,[TF015]
                                            ,[TF016]
                                            ,[TF017]
                                            ,[TF018]
                                            ,[TF019]
                                            ,[TF020]
                                            ,[TF021]
                                            ,[TF022]
                                            ,[TF023]
                                            ,[TF024]
                                            ,[TF025]
                                            ,[TF026]
                                            ,[TF027]
                                            ,[TF028]
                                            ,[TF029]
                                            ,[TF030]
                                            ,[TF031]
                                            ,[TF032]
                                            ,[TF033]
                                            ,[TF034]
                                            ,[TF035]
                                            ,[TF036]
                                            ,[TF037]
                                            ,[TF038]
                                            ,[TF039]
                                            ,[TF040]
                                            ,[TF041]
                                            ,[TF104]
                                            ,[TF105]
                                            ,[TF106]
                                            ,[TF107]
                                            ,[TF108]
                                            ,[TF109]
                                            ,[TF110]
                                            ,[TF111]
                                            ,[TF112]
                                            ,[TF113]
                                            ,[TF114]
                                            ,[TF118]
                                            ,[TF119]
                                            ,[TF120]
                                            ,[TF121]
                                            ,[TF122]
                                            ,[TF123]
                                            ,[TF124]
                                            ,[TF125]
                                            ,[TF126]
                                            ,[TF127]
                                            ,[TF128]
                                            ,[TF129]
                                            ,[TF130]
                                            ,[TF131]
                                            ,[TF132]
                                            ,[TF133]
                                            ,[TF134]
                                            ,[TF135]
                                            ,[TF136]
                                            ,[TF137]
                                            ,[TF138]
                                            ,[TF139]
                                            ,[TF140]
                                            ,[TF141]
                                            ,[TF142]
                                            ,[TF143]
                                            ,[TF144]
                                            ,[TF145]
                                            ,[TF146]
                                            ,[TF147]
                                            ,[TF148]
                                            ,[TF149]
                                            ,[TF150]
                                            ,[TF151]
                                            ,[TF152]
                                            ,[TF153]
                                            ,[TF154]
                                            ,[TF155]
                                            ,[TF156]
                                            ,[TF157]
                                            ,[TF158]
                                            ,[TF159]
                                            ,[TF160]
                                            ,[TF161]
                                            ,[TF162]
                                            ,[TF163]
                                            ,[TF164]
                                            ,[TF165]
                                            ,[TF166]
                                            ,[TF167]
                                            ,[TF168]
                                            ,[TF169]
                                            ,[TF170]
                                            ,[TF171]
                                            ,[TF172]
                                            ,[TF173]
                                            ,[UDF01]
                                            ,[UDF02]
                                            ,[UDF03]
                                            ,[UDF04]
                                            ,[UDF05]
                                            ,[UDF06]
                                            ,[UDF07]
                                            ,[UDF08]
                                            ,[UDF09]
                                            ,[UDF10]
                                            )

                                            SELECT 
                                            PURTD.[COMPANY]
                                            ,PURTD.[CREATOR] AS [CREATOR]
                                            ,PURTD.[USR_GROUP] AS [USR_GROUP]
                                            ,PURTD.[CREATE_DATE] AS [CREATE_DATE]
                                            ,PURTD.[MODIFIER] AS [MODIFIER]
                                            ,PURTD.[MODI_DATE] AS [MODI_DATE]
                                            ,PURTD.[FLAG] AS [FLAG]
                                            ,PURTD.[CREATE_TIME] AS [CREATE_TIME]
                                            ,PURTD.[MODI_TIME] AS [MODI_TIME]
                                            ,PURTD.[TRANS_TYPE] AS [TRANS_TYPE]
                                            ,'PURI08' AS [TRANS_NAME]
                                            ,PURTD.[sync_date] AS [sync_date]
                                            ,PURTD.[sync_time] AS [sync_time]
                                            ,PURTD.[sync_mark] AS [sync_mark]
                                            ,PURTD.[sync_count] AS [sync_count]
                                            ,PURTD.[DataUser] AS [DataUser]
                                            ,PURTD.[DataGroup] AS [DataGroup]
                                            ,TD001 AS [TF001]
                                            ,TD002 AS [TF002]
                                            ,'{3}' AS [TF003]
                                            ,TD003 AS [TF004]
                                            ,[PURTATBCHAGE].TB004 AS [TF005]
                                            ,[PURTATBCHAGE].TB005 AS [TF006]
                                            ,[PURTATBCHAGE].TB006 AS [TF007]
                                            ,TD007 AS [TF008]
                                            ,[PURTATBCHAGE].TB009 AS [TF009]
                                            ,TD009 AS [TF010]
                                            ,TD010 AS [TF011]
                                            ,[PURTATBCHAGE].TB009*TD010 AS [TF012]
                                            ,[PURTATBCHAGE].TB011 AS [TF013]
                                            ,'N' AS [TF014]
                                            ,TD015 AS [TF015]
                                            ,'N' AS [TF016]
                                            ,[PURTATBCHAGE].TB012 AS [TF017]
                                            ,TD019 AS [TF018]
                                            ,TD020 AS [TF019]
                                            ,TD022 AS [TF020]
                                            ,TD025 AS [TF021]
                                            ,TD017 AS [TF022]
                                            ,TD029 AS [TF023]
                                            ,TD030 AS [TF024]
                                            ,TD032 AS [TF025]
                                            ,TD033 AS [TF026]
                                            ,TD036 AS [TF027]
                                            ,TD037 AS [TF028]
                                            ,TD038 AS [TF029]
                                            ,TD014 AS [TF030]
                                            ,'' AS [TF031]
                                            ,'' AS [TF032]
                                            ,'' AS [TF033]
                                            ,'' AS [TF034]
                                            ,'' AS [TF035]
                                            ,0 AS [TF036]
                                            ,0 AS [TF037]
                                            ,'' AS [TF038]
                                            ,'' AS [TF039]
                                            ,'' AS [TF040]
                                            ,0 AS [TF041]
                                            ,TD003 AS [TF104]
                                            ,TD004 AS [TF105]
                                            ,TD005 AS [TF106]
                                            ,TD006 AS [TF107]
                                            ,TD007 AS [TF108]
                                            ,TD008 AS [TF109]
                                            ,TD009 AS [TF110]
                                            ,TD010 AS [TF111]
                                            ,TD011 AS [TF112]
                                            ,TD012 AS [TF113]
                                            ,TD016 AS [TF114]
                                            ,TD019 AS [TF118]
                                            ,TD020 AS [TF119]
                                            ,TD022 AS [TF120]
                                            ,TD025 AS [TF121]
                                            ,TD017 AS [TF122]
                                            ,TD029 AS [TF123]
                                            ,TD030 AS [TF124]
                                            ,TD031 AS [TF125]
                                            ,TD032 AS [TF126]
                                            ,TD033 AS [TF127]
                                            ,TD034 AS [TF128]
                                            ,TD035 AS [TF129]
                                            ,TD034 AS [TF130]
                                            ,TD035 AS [TF131]
                                            ,TD036 AS [TF132]
                                            ,TD037 AS [TF133]
                                            ,TD038 AS [TF134]
                                            ,TD014 AS [TF135]
                                            ,0 AS [TF136]
                                            ,0 AS [TF137]
                                            ,'' AS [TF138]
                                            ,'' AS [TF139]
                                            ,'' AS [TF140]
                                            ,0 AS [TF141]
                                            ,'' AS [TF142]
                                            ,'' AS [TF143]
                                            ,'' AS [TF144]
                                            ,'2' AS [TF145]
                                            ,'2' AS [TF146]
                                            ,'' AS [TF147]
                                            ,'' AS [TF148]
                                            ,'' AS [TF149]
                                            ,'' AS [TF150]
                                            ,'' AS [TF151]
                                            ,TD080 AS [TF152]
                                            ,TD081 AS [TF153]
                                            ,TD082 AS [TF154]
                                            ,TD083 AS [TF155]
                                            ,TD080 AS [TF156]
                                            ,TD081 AS [TF157]
                                            ,TD082 AS [TF158]
                                            ,TD083 AS [TF159]
                                            ,TD084 AS [TF160]
                                            ,TD085 AS [TF161]
                                            ,TD084 AS [TF162]
                                            ,TD085 AS [TF163]
                                            ,0 AS [TF164]
                                            ,0 AS [TF165]
                                            ,0 AS [TF166]
                                            ,0 AS [TF167]
                                            ,'' AS [TF168]
                                            ,'' AS [TF169]
                                            ,'' AS [TF170]
                                            ,'' AS [TF171]
                                            ,'' AS [TF172]
                                            ,'' AS [TF173]
                                            ,CONVERT(NVARCHAR,[PURTATBCHAGE].VERSIONS)+CONVERT(NVARCHAR,[PURTATBCHAGE].TA001)+CONVERT(NVARCHAR,[PURTATBCHAGE].TA002)+CONVERT(NVARCHAR,[PURTATBCHAGE].TB003) AS [UDF01]
                                            ,'' AS [UDF02]
                                            ,'' AS [UDF03]
                                            ,'' AS [UDF04]
                                            ,'' AS [UDF05]
                                            ,0 AS [UDF06]
                                            ,0 AS [UDF07]
                                            ,0 AS [UDF08]
                                            ,0 AS [UDF09]
                                            ,0 AS [UDF10]

                                            FROM [TK].dbo.PURTD,[TKPUR].[dbo].[PURTATBCHAGE]
                                            WHERE 1=1
                                            AND PURTD.TD026=[PURTATBCHAGE].TA001 AND PURTD.TD027=[PURTATBCHAGE].TA002 AND PURTD.TD028=[PURTATBCHAGE].TB003
                                            AND TD001='{4}' AND TD002='{5}'
                                            AND [PURTATBCHAGE].TA001='{0}' AND [PURTATBCHAGE].TA002='{1}' AND [PURTATBCHAGE].VERSIONS='{2}'



                                            INSERT INTO [TK].[dbo].[PURTE]
                                            (
                                            [COMPANY]
                                            ,[CREATOR]
                                            ,[USR_GROUP]
                                            ,[CREATE_DATE]
                                            ,[MODIFIER]
                                            ,[MODI_DATE]
                                            ,[FLAG]
                                            ,[CREATE_TIME]
                                            ,[MODI_TIME]
                                            ,[TRANS_TYPE]
                                            ,[TRANS_NAME]
                                            ,[sync_date]
                                            ,[sync_time]
                                            ,[sync_mark]
                                            ,[sync_count]
                                            ,[DataUser]
                                            ,[DataGroup]
                                            ,[TE001]
                                            ,[TE002]
                                            ,[TE003]
                                            ,[TE004]
                                            ,[TE005]
                                            ,[TE006]
                                            ,[TE007]
                                            ,[TE008]
                                            ,[TE009]
                                            ,[TE010]
                                            ,[TE011]
                                            ,[TE012]
                                            ,[TE013]
                                            ,[TE014]
                                            ,[TE015]
                                            ,[TE016]
                                            ,[TE017]
                                            ,[TE018]
                                            ,[TE019]
                                            ,[TE020]
                                            ,[TE021]
                                            ,[TE022]
                                            ,[TE023]
                                            ,[TE024]
                                            ,[TE025]
                                            ,[TE026]
                                            ,[TE027]
                                            ,[TE028]
                                            ,[TE029]
                                            ,[TE030]
                                            ,[TE031]
                                            ,[TE032]
                                            ,[TE033]
                                            ,[TE034]
                                            ,[TE035]
                                            ,[TE036]
                                            ,[TE037]
                                            ,[TE038]
                                            ,[TE039]
                                            ,[TE040]
                                            ,[TE041]
                                            ,[TE042]
                                            ,[TE043]
                                            ,[TE045]
                                            ,[TE046]
                                            ,[TE047]
                                            ,[TE048]
                                            ,[TE103]
                                            ,[TE107]
                                            ,[TE108]
                                            ,[TE109]
                                            ,[TE110]
                                            ,[TE113]
                                            ,[TE114]
                                            ,[TE115]
                                            ,[TE118]
                                            ,[TE119]
                                            ,[TE120]
                                            ,[TE121]
                                            ,[TE122]
                                            ,[TE123]
                                            ,[TE124]
                                            ,[TE125]
                                            ,[TE134]
                                            ,[TE135]
                                            ,[TE136]
                                            ,[TE137]
                                            ,[TE138]
                                            ,[TE139]
                                            ,[TE140]
                                            ,[TE141]
                                            ,[TE142]
                                            ,[TE143]
                                            ,[TE144]
                                            ,[TE145]
                                            ,[TE146]
                                            ,[TE147]
                                            ,[TE148]
                                            ,[TE149]
                                            ,[TE150]
                                            ,[TE151]
                                            ,[TE152]
                                            ,[TE153]
                                            ,[TE154]
                                            ,[TE155]
                                            ,[TE156]
                                            ,[TE157]
                                            ,[TE158]
                                            ,[TE159]
                                            ,[TE160]
                                            ,[TE161]
                                            ,[TE162]
                                            ,[UDF01]
                                            ,[UDF02]
                                            ,[UDF03]
                                            ,[UDF04]
                                            ,[UDF05]
                                            ,[UDF06]
                                            ,[UDF07]
                                            ,[UDF08]
                                            ,[UDF09]
                                            ,[UDF10]
                                            )
                                            SELECT 
                                            PURTC.[COMPANY]
                                            ,PURTC.[CREATOR]
                                            ,PURTC.[USR_GROUP]
                                            ,PURTC.[CREATE_DATE]
                                            ,PURTC.[MODIFIER]
                                            ,PURTC.[MODI_DATE]
                                            ,PURTC.[FLAG]
                                            ,PURTC.[CREATE_TIME]
                                            ,PURTC.[MODI_TIME]
                                            ,PURTC.[TRANS_TYPE]
                                            ,'PURI08' AS [TRANS_NAME]
                                            ,PURTC.[sync_date]
                                            ,PURTC.[sync_time]
                                            ,PURTC.[sync_mark]
                                            ,PURTC.[sync_count]
                                            ,PURTC.[DataUser]
                                            ,PURTC.[DataGroup]
                                            ,TC001 AS [TE001]
                                            ,TC002 AS [TE002]
                                            ,'{3}' AS [TE003]
                                            ,CONVERT(NVARCHAR,GETDATE(),112) AS [TE004]
                                            ,TC004 AS [TE005]
                                            ,'' AS [TE006]
                                            ,TC005 AS [TE007]
                                            ,TC006 AS [TE008]
                                            ,TC007 AS [TE009]
                                            ,TC008 AS [TE010]
                                            ,CONVERT(NVARCHAR,GETDATE(),112) AS [TE011]
                                            ,'N' AS [TE012]
                                            ,TC015 AS [TE013]
                                            ,TC016 AS [TE014]
                                            ,TC017 AS [TE015]
                                            ,0 AS [TE016]
                                            ,'N' AS [TE017]
                                            ,TC018 AS [TE018]
                                            ,TC021 AS [TE019]
                                            ,TC022 AS [TE020]
                                            ,'' AS [TE021]
                                            ,TC026 AS [TE022]
                                            ,TC027 AS [TE023]
                                            ,TC028 AS [TE024]
                                            ,'N' AS [TE025]
                                            ,0 AS [TE026]
                                            ,TC009 AS [TE027]
                                            ,'N' AS [TE028]
                                            ,TC035 AS [TE029]
                                            ,'' AS [TE030]
                                            ,'' AS [TE031]
                                            ,'N' AS [TE032]
                                            ,'' AS [TE033]
                                            ,0 AS [TE034]
                                            ,0 AS [TE035]
                                            ,'' AS [TE036]
                                            ,TC011 AS [TE037]
                                            ,'' AS [TE038]
                                            ,'' AS [TE039]
                                            ,'' AS [TE040]
                                            ,TC050 AS [TE041]
                                            ,'' AS [TE042]
                                            ,TC036 AS [TE043]
                                            ,TC037 AS [TE045]
                                            ,TC038 AS [TE046]
                                            ,TC039 AS [TE047]
                                            ,TC040 AS [TE048]
                                            ,'' AS [TE103]
                                            ,TC005 AS [TE107]
                                            ,TC006 AS [TE108]
                                            ,TC007 AS [TE109]
                                            ,TC008 AS [TE110]
                                            ,TC015 AS [TE113]
                                            ,TC016 AS [TE114]
                                            ,TC017 AS [TE115]
                                            ,TC018 AS [TE118]
                                            ,TC021 AS [TE119]
                                            ,TC022 AS [TE120]
                                            ,TC026 AS [TE121]
                                            ,TC027 AS [TE122]
                                            ,TC028 AS [TE123]
                                            ,TC009 AS [TE124]
                                            ,TC035 AS [TE125]
                                            ,0 AS [TE134]
                                            ,0 AS [TE135]
                                            ,'' AS [TE136]
                                            ,'' AS [TE137]
                                            ,'' AS [TE138]
                                            ,'' AS [TE139]
                                            ,'1' AS [TE140]
                                            ,'N' AS [TE141]
                                            ,'N' AS [TE142]
                                            ,TC036 AS [TE143]
                                            ,'N' AS [TE144]
                                            ,'' AS [TE145]
                                            ,TC041 AS [TE146]
                                            ,TC041 AS [TE147]
                                            ,TC011 AS [TE148]
                                            ,0 AS [TE149]
                                            ,0 AS [TE150]
                                            ,0 AS [TE151]
                                            ,0 AS [TE152]
                                            ,'' AS [TE153]
                                            ,'' AS [TE154]
                                            ,'' AS [TE155]
                                            ,'' AS [TE156]
                                            ,'' AS [TE157]
                                            ,'' AS [TE158]
                                            ,TC037 AS [TE159]
                                            ,TC038 AS [TE160]
                                            ,TC039 AS [TE161]
                                            ,TC040 AS [TE162]
                                            ,'' AS [UDF01]
                                            ,'' AS [UDF02]
                                            ,'' AS [UDF03]
                                            ,'' AS [UDF04]
                                            ,'' AS [UDF05]
                                            ,0 AS [UDF06]
                                            ,0 AS [UDF07]
                                            ,0 AS [UDF08]
                                            ,0 AS [UDF09]
                                            ,0 AS [UDF10]
                                            FROM  [TK].dbo.PURTC
                                            WHERE 1=1
                                            AND TC001='{4}' AND TC002='{5}'
                                            ", DR["TA001"].ToString(), DR["TA002"].ToString(), DR["VERSIONS"].ToString(), DR["TE003"].ToString(), DR["TE001"].ToString(), DR["TE002"].ToString());
                    }

                    sbSql.AppendFormat(@"  
                                   
                                        ");

                    cmd.Connection = sqlConn;
                    cmd.CommandTimeout = 60;


                    cmd.CommandText = sbSql.ToString();
                    cmd.Transaction = tran;
                    result = cmd.ExecuteNonQuery();

                    if (result == 0)
                    {
                        tran.Rollback();    //交易取消
                    }
                    else
                    {
                        tran.Commit();      //執行交易  


                    }
                }
                catch
                {

                }

                finally
                {
                    sqlConn.Close();
                }
            }
        }

        public void NEW_POSET()
        {
            //找出POS的活動簽核單，已簽核但沒有記錄在TK_Z_POSSET中
            DataTable DT_FIND_POSETS = FIND_POSETS();           

            if (DT_FIND_POSETS != null && DT_FIND_POSETS.Rows.Count >= 1)
            {
                ADD_TK_Z_POSSET(DT_FIND_POSETS);
            }

            //針對TK_Z_POSSET的活動做POS機的LOG發送
            DataTable DT_TK_Z_POSSET = FIND_TK_Z_POSSET();
            if (DT_TK_Z_POSSET != null && DT_TK_Z_POSSET.Rows.Count >= 1)
            {
                INSERT_UPDATE_LOG_POSM(DT_TK_Z_POSSET);
            }

            //更新TK_Z_POSSET的[ISUPDATE]
            UPDATE_Z_POSSET();
        }

        public DataTable FIND_POSETS()
        {
            DataTable DT = new DataTable();
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sbSql.Clear();
                sbSqlQuery.Clear();

                //庫存數量看LA009 IN ('20004','20006','20008','20019','20020'

                sbSql.AppendFormat(@"  
                                    SELECT *
                                    FROM 
                                    (
                                    SELECT DOC_NBR
                                    ,CURRENT_DOC.value('(Form/FormFieldValue/FieldItem[@fieldId=""FIELD001""]/@fieldValue)[1]', 'nvarchar(max)') AS FIELD001
                                    , CURRENT_DOC.value('(Form/FormFieldValue/FieldItem[@fieldId=""FIELD002""]/ @fieldValue)[1]', 'nvarchar(max)') AS FIELD002
                                    , CURRENT_DOC.value('(Form/FormFieldValue/FieldItem[@fieldId=""FIELD003""]/@fieldValue)[1]', 'nvarchar(max)')  AS FIELD003
                                    , CURRENT_DOC.value('(Form/FormFieldValue/FieldItem[@fieldId=""FIELD004""]/@fieldValue)[1]', 'nvarchar(max)')  AS FIELD004
                                    , CURRENT_DOC.value('(Form/FormFieldValue/FieldItem[@fieldId=""FIELD005""]/@fieldValue)[1]', 'nvarchar(max)')  AS FIELD005
                                    , CURRENT_DOC.value('(Form/FormFieldValue/FieldItem[@fieldId=""FIELD006""]/@fieldValue)[1]', 'nvarchar(max)') AS FIELD006
                                    , CURRENT_DOC.value('(Form/FormFieldValue/FieldItem[@fieldId=""FIELD007""]/@fieldValue)[1]', 'nvarchar(max)') AS FIELD007
                                    , CURRENT_DOC.value('(Form/FormFieldValue/FieldItem[@fieldId=""FIELD008""]/@fieldValue)[1]', 'nvarchar(max)') AS FIELD008
                                    ,CURRENT_DOC.value('(Form/Applicant/@account)[1]', 'nvarchar(max)') AS account

                                    , TB_WKF_FORM.FORM_NAME
                                    FROM [UOF].dbo.TB_WKF_TASK,[UOF].dbo.TB_WKF_FORM,[UOF].dbo.TB_WKF_FORM_VERSION
                                    WHERE 1 = 1
                                    AND TB_WKF_TASK.FORM_VERSION_ID = TB_WKF_FORM_VERSION.FORM_VERSION_ID
                                    AND TB_WKF_FORM.FORM_ID = TB_WKF_FORM_VERSION.FORM_ID
                                    AND TB_WKF_FORM.FORM_NAME IN('POS,商品活動設定')
                                    AND TB_WKF_TASK.TASK_STATUS = '2' AND TASK_RESULT = '0'

                                    ) AS TEMP
                                    WHERE 1 = 1
                                    AND DOC_NBR COLLATE Chinese_Taiwan_Stroke_BIN NOT IN (SELECT DOC_NBR FROM[192.168.1.105].[TK].[dbo].[Z_POSSET] WHERE ISNULL(DOC_NBR, '') <> '')


                                    ");


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    return ds1.Tables["ds1"];
                }
                else
                {
                    return null;
                }

            }
            catch
            {

            }
            finally
            {
                sqlConn.Close();
            }


            return DT;
        }

        public void ADD_TK_Z_POSSET(DataTable DT)
        {
            string DOC_NBR = null;
            string KINDS = null;
            string ID = null;
            string account = null;
            StringBuilder SQL = new StringBuilder();
            SQL.Clear();

            foreach (DataRow dr in DT.Rows)
            {
                DOC_NBR = dr["DOC_NBR"].ToString();
                KINDS = dr["FIELD007"].ToString();
                ID = dr["FIELD002"].ToString();
                account= dr["account"].ToString();
                SQL.AppendFormat(@" 
                                INSERT INTO [TK].[dbo].[Z_POSSET]
                                ([DOC_NBR],[KINDS],[ID],[ADMINID])
                                VALUES
                                ('{0}','{1}','{2}','{3}')
                                ", DOC_NBR, KINDS, ID, account);

            }

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sqlConn.Close();
                sqlConn.Open();
                tran = sqlConn.BeginTransaction();
                

                cmd.Connection = sqlConn;
                cmd.CommandTimeout = 60;
                cmd.CommandText = SQL.ToString();
                cmd.Transaction = tran;
                result = cmd.ExecuteNonQuery();

                if (result == 0)
                {
                    tran.Rollback();    //交易取消
                }
                else
                {
                    tran.Commit();      //執行交易  
                    //Console.WriteLine("ADDTOUOFTB_EIP_SCH_MEMO_MOC OK");

                }

            }
            catch
            {

            }

            finally
            {
                sqlConn.Close();
            }

        }

        public void INSERT_UPDATE_LOG_POSM(DataTable DT)
        {
          
            StringBuilder SQL = new StringBuilder();
            SQL.Clear();

            if (DT!=null&& DT.Rows.Count>=1)
            {
                foreach(DataRow DR in DT.Rows)
                {
                    SQL.AppendFormat(@"
                                        --POSMB
                                        UPDATE [TK].dbo.POSMB
                                        SET MB008='Y',MB007=ADMINID,MB006=MB005
                                        FROM [TK].[dbo].[Z_POSSET]
                                        WHERE [Z_POSSET].ID=MB003
                                        AND MB003='{0}'


                                        --POSMC
                                        UPDATE [TK].dbo.POSMC
                                        SET MC011='Y'
                                        WHERE MC003='{0}'

                                        --POSMI
                                        UPDATE [TK].dbo.POSMI
                                        SET MI015='Y',MI016=ADMINID,MI014=MI007
                                        FROM [TK].[dbo].[Z_POSSET]
                                        WHERE [Z_POSSET].ID=MI003
                                        AND MI003='{0}'

                                        --POSMJ
                                        UPDATE [TK].dbo.POSMJ
                                        SET MJ006='Y'
                                        WHERE MJ003='{0}'

                                        --POSMM
                                        UPDATE [TK].dbo.POSMM
                                        SET MM015='Y',MM017=ADMINID,MM014=MM007
                                        FROM [TK].[dbo].[Z_POSSET]
                                        WHERE [Z_POSSET].ID=MM003
                                        AND MM003='{0}'

                                        --POSMN
                                        UPDATE [TK].dbo.POSMN
                                        SET MN010='Y'
                                        WHERE MN003='{0}'

                                        --POSMO
                                        UPDATE [TK].dbo.POSMO
                                        SET MO008='Y',MO007=ADMINID,MO006=MO005
                                        FROM [TK].[dbo].[Z_POSSET]
                                        WHERE [Z_POSSET].ID=MO003
                                        AND MO003='{0}'

                                        --POSMP
                                        UPDATE [TK].dbo.POSMP
                                        SET MP008='Y'
                                        WHERE MP003='{0}'

                                        --LOG_POSMB                                 

                                        DELETE [TK].dbo.LOG_POSMB
                                        WHERE MB003='{0}'

                                        INSERT INTO [TK].dbo.LOG_POSMB
                                        (TRS_CODE,TRS_DATE,TRS_TIME,store_ip,sync_date,sync_time,sync_mark,sync_count,MB001,MB002,MB003)
                                        SELECT
                                        '2' TRS_CODE
                                        ,CONVERT(char(08), GETDATE(), 112 )  TRS_DATE
                                        ,CONVERT(char(12), GETDATE(), 114 )  TRS_TIME
                                        ,PI010 store_ip
                                        ,'' sync_date
                                        ,'' sync_time
                                        ,'N'  sync_mark
                                        ,0  sync_count
                                        ,POSMB.MB001 MB001
                                        ,POSMB.MB002 MB002
                                        ,POSMB.MB003 MB003
                                        FROM [TK].dbo.POSPI, [TK].dbo.POSMB
                                        WHERE PI025<>'2'  
                                        AND MB003='{0}' 
                                        GROUP BY PI010,POSMB.MB001,POSMB.MB002,POSMB.MB003
                                        ORDER BY PI010

                                        --LOG_POSMC
                                        DELETE  [TK].dbo.LOG_POSMC
                                        WHERE MC003='{0}'

                                        INSERT INTO [TK].dbo.LOG_POSMC
                                        (
                                        TRS_CODE
                                        ,TRS_DATE
                                        ,TRS_TIME
                                        ,store_ip
                                        ,sync_date
                                        ,sync_time
                                        ,sync_mark
                                        ,sync_count
                                        ,MC001
                                        ,MC002
                                        ,MC003
                                        ,MC019
                                        ,MC004
                                        )
                                        SELECT
                                        '2' TRS_CODE
                                        ,CONVERT(char(08), GETDATE(), 112 )  TRS_DATE
                                        ,CONVERT(char(12), GETDATE(), 114 )  TRS_TIME
                                        ,PI010 store_ip
                                        ,'' sync_date
                                        ,'' sync_time
                                        ,'N'  sync_mark
                                        ,0  sync_count
                                        ,MC001
                                        ,MC002
                                        ,MC003
                                        ,MC019
                                        ,MC004
                                        FROM [TK].dbo.POSPI, [TK].dbo.POSMC
                                        WHERE PI025<>'2'  
                                        AND MC003='{0}' 
                                        GROUP BY PI010,MC001,MC002,MC003,MC019,MC004
                                        ORDER BY PI010

                                        --LOG_POSMD
                                        DELETE  [TK].dbo.LOG_POSMD
                                        WHERE MD003='{0}'

                                        INSERT INTO [TK].dbo.LOG_POSMD
                                        (
                                        TRS_CODE
                                        ,TRS_DATE
                                        ,TRS_TIME
                                        ,store_ip
                                        ,sync_date
                                        ,sync_time
                                        ,sync_mark
                                        ,sync_count
                                        ,MD001
                                        ,MD002
                                        ,MD003
                                        ,MD021
                                        ,MD004
                                        )
                                        SELECT 
                                        '2' TRS_CODE
                                        ,CONVERT(char(08), GETDATE(), 112 )  TRS_DATE
                                        ,CONVERT(char(12), GETDATE(), 114 )  TRS_TIME
                                        ,PI010 store_ip
                                        ,'' sync_date
                                        ,'' sync_time
                                        ,'N'  sync_mark
                                        ,0  sync_count
                                        ,MD001
                                        ,MD002
                                        ,MD003
                                        ,MD021
                                        ,MD004
                                        FROM [TK].dbo.POSPI, [TK].dbo.POSMD
                                        WHERE PI025<>'2'  
                                        AND MD003='{0}' 
                                        GROUP BY PI010,MD001,MD002,MD003,MD021,MD004
                                        ORDER BY PI010

                                        --LOG_POSME
                                        DELETE  [TK].dbo.LOG_POSME
                                        WHERE ME003='{0}'

                                        INSERT INTO  [TK].dbo.LOG_POSME
                                        (
                                        TRS_CODE
                                        ,TRS_DATE
                                        ,TRS_TIME
                                        ,store_ip
                                        ,sync_date
                                        ,sync_time
                                        ,sync_mark
                                        ,sync_count
                                        ,ME001
                                        ,ME002
                                        ,ME003
                                        ,ME004
                                        )
                                        SELECT 
                                        '2' TRS_CODE
                                        ,CONVERT(char(08), GETDATE(), 112 )  TRS_DATE
                                        ,CONVERT(char(12), GETDATE(), 114 )  TRS_TIME
                                        ,PI010 store_ip
                                        ,'' sync_date
                                        ,'' sync_time
                                        ,'N'  sync_mark
                                        ,0  sync_count
                                        ,ME001
                                        ,ME002
                                        ,ME003
                                        ,ME004
                                        FROM [TK].dbo.POSPI, [TK].dbo.POSME
                                        WHERE PI025<>'2'  
                                        AND ME003='{0}' 
                                        GROUP BY PI010,ME001,ME002,ME003,ME004
                                        ORDER BY PI010

                                        ---LOG_POSMF
                                        DELETE [TK].dbo.LOG_POSMF
                                        WHERE MF003='{0}'

                                        INSERT INTO  [TK].dbo.LOG_POSMF
                                        (
                                        TRS_CODE
                                        ,TRS_DATE
                                        ,TRS_TIME
                                        ,store_ip
                                        ,sync_date
                                        ,sync_time
                                        ,sync_mark
                                        ,sync_count
                                        ,MF001
                                        ,MF002
                                        ,MF003
                                        ,MF004
                                        )
                                        SELECT 
                                        '2' TRS_CODE
                                        ,CONVERT(char(08), GETDATE(), 112 )  TRS_DATE
                                        ,CONVERT(char(12), GETDATE(), 114 )  TRS_TIME
                                        ,PI010 store_ip
                                        ,'' sync_date
                                        ,'' sync_time
                                        ,'N'  sync_mark
                                        ,0  sync_count
                                        ,MF001
                                        ,MF002
                                        ,MF003
                                        ,MF004
                                        FROM [TK].dbo.POSPI, [TK].dbo.POSMF
                                        WHERE PI025<>'2'  
                                        AND MF003='{0}' 
                                        GROUP BY PI010,MF001,MF002,MF003,MF004
                                        ORDER BY PI010

                                        --LOG_POSMG
                                        DELETE [TK].dbo.LOG_POSMG
                                        WHERE MG003='{0}'

                                        INSERT INTO [TK].dbo.LOG_POSMG
                                        (
                                        TRS_CODE
                                        ,TRS_DATE
                                        ,TRS_TIME
                                        ,store_ip
                                        ,sync_date
                                        ,sync_time
                                        ,sync_mark
                                        ,sync_count
                                        ,MG001
                                        ,MG002
                                        ,MG003
                                        ,MG017
                                        ,MG004
                                        ,MG005
                                        )
                                        SELECT 
                                        '2' TRS_CODE
                                        ,CONVERT(char(08), GETDATE(), 112 )  TRS_DATE
                                        ,CONVERT(char(12), GETDATE(), 114 )  TRS_TIME
                                        ,PI010 store_ip
                                        ,'' sync_date
                                        ,'' sync_time
                                        ,'N'  sync_mark
                                        ,0  sync_count
                                        ,MG001
                                        ,MG002
                                        ,MG003
                                        ,MG017
                                        ,MG004
                                        ,MG005
                                        FROM [TK].dbo.POSPI, [TK].dbo.POSMG
                                        WHERE PI025<>'2'  
                                        AND MG003='{0}' 
                                        GROUP BY PI010,MG001,MG002,MG003,MG017,MG004,MG005
                                        ORDER BY PI010

                                        --LOG_POSMH
                                        DELETE  [TK].dbo.LOG_POSMH
                                        WHERE MH003='{0}'

                                        INSERT INTO [TK].dbo.LOG_POSMH
                                        (
                                        TRS_CODE
                                        ,TRS_DATE
                                        ,TRS_TIME
                                        ,store_ip
                                        ,sync_date
                                        ,sync_time
                                        ,sync_mark
                                        ,sync_count
                                        ,MH001
                                        ,MH002
                                        ,MH003
                                        ,MH004
                                        ,MH005
                                        )
                                        SELECT 
                                        '2' TRS_CODE
                                        ,CONVERT(char(08), GETDATE(), 112 )  TRS_DATE
                                        ,CONVERT(char(12), GETDATE(), 114 )  TRS_TIME
                                        ,PI010 store_ip
                                        ,'' sync_date
                                        ,'' sync_time
                                        ,'N'  sync_mark
                                        ,0  sync_count
                                        ,MH001
                                        ,MH002
                                        ,MH003
                                        ,MH004
                                        ,MH005
                                        FROM [TK].dbo.POSPI, [TK].dbo.POSMH
                                        WHERE PI025<>'2'  
                                        AND MH003='{0}' 
                                        GROUP BY PI010,MH001,MH002,MH003,MH004,MH005
                                        ORDER BY PI010

                                        --LOG_POSMI
                                        DELETE [TK].dbo.LOG_POSMI
                                        WHERE MI003='{0}'

                                        INSERT INTO [TK].dbo.LOG_POSMI
                                        (
                                        TRS_CODE
                                        ,TRS_DATE
                                        ,TRS_TIME
                                        ,store_ip
                                        ,sync_date
                                        ,sync_time
                                        ,sync_mark
                                        ,sync_count
                                        ,MI001
                                        ,MI002
                                        ,MI003
                                        )
                                        SELECT 
                                        '2' TRS_CODE
                                        ,CONVERT(char(08), GETDATE(), 112 )  TRS_DATE
                                        ,CONVERT(char(12), GETDATE(), 114 )  TRS_TIME
                                        ,PI010 store_ip
                                        ,'' sync_date
                                        ,'' sync_time
                                        ,'N'  sync_mark
                                        ,0  sync_count
                                        ,MI001
                                        ,MI002
                                        ,MI003
                                        FROM [TK].dbo.POSPI, [TK].dbo.POSMI
                                        WHERE PI025<>'2'  
                                        AND MI003='{0}' 
                                        GROUP BY PI010,MI001,MI002,MI003
                                        ORDER BY PI010

                                        --LOG_POSMJ
                                        DELETE  [TK].dbo.LOG_POSMJ
                                        WHERE MJ003='{0}'

                                        INSERT INTO [TK].dbo.LOG_POSMJ
                                        (
                                        TRS_CODE
                                        ,TRS_DATE
                                        ,TRS_TIME
                                        ,store_ip
                                        ,sync_date
                                        ,sync_time
                                        ,sync_mark
                                        ,sync_count
                                        ,MJ001
                                        ,MJ002
                                        ,MJ003
                                        ,MJ015
                                        ,MJ004
                                        )
                                        SELECT 
                                        '2' TRS_CODE
                                        ,CONVERT(char(08), GETDATE(), 112 )  TRS_DATE
                                        ,CONVERT(char(12), GETDATE(), 114 )  TRS_TIME
                                        ,PI010 store_ip
                                        ,'' sync_date
                                        ,'' sync_time
                                        ,'N'  sync_mark
                                        ,0  sync_count
                                        ,MJ001
                                        ,MJ002
                                        ,MJ003
                                        ,MJ015
                                        ,MJ004
                                        FROM [TK].dbo.POSPI, [TK].dbo.POSMJ
                                        WHERE PI025<>'2'  
                                        AND MJ003='{0}' 
                                        GROUP BY PI010,MJ001,MJ002,MJ003,MJ015,MJ004
                                        ORDER BY PI010


                                        --LOG_POSMK
                                        DELETE [TK].dbo.LOG_POSMK
                                        WHERE MK003='{0}'

                                        INSERT INTO [TK].dbo.LOG_POSMK
                                        (
                                        TRS_CODE
                                        ,TRS_DATE
                                        ,TRS_TIME
                                        ,store_ip
                                        ,sync_date
                                        ,sync_time
                                        ,sync_mark
                                        ,sync_count
                                        ,MK001
                                        ,MK002
                                        ,MK003
                                        ,MK017
                                        ,MK004
                                        )
                                        SELECT 
                                        '2' TRS_CODE
                                        ,CONVERT(char(08), GETDATE(), 112 )  TRS_DATE
                                        ,CONVERT(char(12), GETDATE(), 114 )  TRS_TIME
                                        ,PI010 store_ip
                                        ,'' sync_date
                                        ,'' sync_time
                                        ,'N'  sync_mark
                                        ,0  sync_count
                                        ,MK001
                                        ,MK002
                                        ,MK003
                                        ,MK017
                                        ,MK004
                                        FROM [TK].dbo.POSPI, [TK].dbo.POSMK
                                        WHERE PI025<>'2'  
                                        AND MK003='{0}' 
                                        GROUP BY PI010,MK001,MK002,MK003,MK017,MK004
                                        ORDER BY PI010



                                        --LOG_POSML
                                        DELETE [TK].dbo.LOG_POSML
                                        WHERE ML003='{0}'

                                        INSERT INTO  [TK].dbo.LOG_POSML
                                        (
                                        TRS_CODE
                                        ,TRS_DATE
                                        ,TRS_TIME
                                        ,store_ip
                                        ,sync_date
                                        ,sync_time
                                        ,sync_mark
                                        ,sync_count
                                        ,ML001
                                        ,ML002
                                        ,ML003
                                        ,ML004
                                        )
                                        SELECT
                                        '2' TRS_CODE
                                        ,CONVERT(char(08), GETDATE(), 112 )  TRS_DATE
                                        ,CONVERT(char(12), GETDATE(), 114 )  TRS_TIME
                                        ,PI010 store_ip
                                        ,'' sync_date
                                        ,'' sync_time
                                        ,'N'  sync_mark
                                        ,0  sync_count
                                        ,ML001
                                        ,ML002
                                        ,ML003
                                        ,ML004
                                        FROM [TK].dbo.POSPI, [TK].dbo.POSML
                                        WHERE PI025<>'2'  
                                        AND ML003='{0}' 
                                        GROUP BY PI010,ML001,ML002,ML003,ML004
                                        ORDER BY PI010


                                        --LOG_POSMM
                                        DELETE [TK].dbo.LOG_POSMM
                                        WHERE MM003='{0}'

                                        INSERT INTO [TK].dbo.LOG_POSMM
                                        (
                                        TRS_CODE
                                        ,TRS_DATE
                                        ,TRS_TIME
                                        ,store_ip
                                        ,sync_date
                                        ,sync_time
                                        ,sync_mark
                                        ,sync_count
                                        ,MM001
                                        ,MM002
                                        ,MM003
                                        )
                                        SELECT 
                                        '2' TRS_CODE
                                        ,CONVERT(char(08), GETDATE(), 112 )  TRS_DATE
                                        ,CONVERT(char(12), GETDATE(), 114 )  TRS_TIME
                                        ,PI010 store_ip
                                        ,'' sync_date
                                        ,'' sync_time
                                        ,'N'  sync_mark
                                        ,0  sync_count
                                        ,MM001
                                        ,MM002
                                        ,MM003
                                        FROM [TK].dbo.POSPI, [TK].dbo.POSMM
                                        WHERE PI025<>'2'  
                                        AND MM003='{0}' 
                                        GROUP BY PI010,MM001,MM002,MM003
                                        ORDER BY PI010

                                        --LOG_POSMN
                                        DELETE  [TK].dbo.LOG_POSMN
                                        WHERE MN003='{0}' 

                                        INSERT INTO  [TK].dbo.LOG_POSMN
                                        (
                                        TRS_CODE
                                        ,TRS_DATE
                                        ,TRS_TIME
                                        ,store_ip
                                        ,sync_date
                                        ,sync_time
                                        ,sync_mark
                                        ,sync_count
                                        ,MN001
                                        ,MN002
                                        ,MN003
                                        ,MN004
                                        )
                                        SELECT 
                                        '2' TRS_CODE
                                        ,CONVERT(char(08), GETDATE(), 112 )  TRS_DATE
                                        ,CONVERT(char(12), GETDATE(), 114 )  TRS_TIME
                                        ,PI010 store_ip
                                        ,'' sync_date
                                        ,'' sync_time
                                        ,'N'  sync_mark
                                        ,0  sync_count
                                        ,MN001
                                        ,MN002
                                        ,MN003
                                        ,MN004
                                        FROM [TK].dbo.POSPI, [TK].dbo.POSMN
                                        WHERE PI025<>'2'  
                                        AND MN003='{0}' 
                                        GROUP BY PI010,MN001,MN002,MN003,MN004
                                        ORDER BY PI010


                                        --LOG_POSMO
                                        DELETE  [TK].dbo.LOG_POSMO
                                        WHERE MO003='{0}'

                                        INSERT INTO [TK].dbo.LOG_POSMO
                                        (
                                        TRS_CODE
                                        ,TRS_DATE
                                        ,TRS_TIME
                                        ,store_ip
                                        ,sync_date
                                        ,sync_time
                                        ,sync_mark
                                        ,sync_count
                                        ,MO001
                                        ,MO002
                                        ,MO003
                                        )
                                        SELECT 
                                        '2' TRS_CODE
                                        ,CONVERT(char(08), GETDATE(), 112 )  TRS_DATE
                                        ,CONVERT(char(12), GETDATE(), 114 )  TRS_TIME
                                        ,PI010 store_ip
                                        ,'' sync_date
                                        ,'' sync_time
                                        ,'N'  sync_mark
                                        ,0  sync_count
                                        ,MO001
                                        ,MO002
                                        ,MO003
                                        FROM [TK].dbo.POSPI, [TK].dbo.POSMO
                                        WHERE PI025<>'2'  
                                        AND MO003='{0}' 
                                        GROUP BY PI010,MO001,MO002,MO003
                                        ORDER BY PI010


                                        --LOG_POSMP
                                        DELETE  [TK].dbo.LOG_POSMP
                                        WHERE MP003='{0}'

                                        INSERT INTO  [TK].dbo.LOG_POSMP
                                        (
                                        TRS_CODE
                                        ,TRS_DATE
                                        ,TRS_TIME
                                        ,store_ip
                                        ,sync_date
                                        ,sync_time
                                        ,sync_mark
                                        ,sync_count
                                        ,MP001
                                        ,MP002
                                        ,MP003
                                        ,MP004
                                        ,MP017
                                        ,MP005
                                        )
                                        SELECT 
                                        '2' TRS_CODE
                                        ,CONVERT(char(08), GETDATE(), 112 )  TRS_DATE
                                        ,CONVERT(char(12), GETDATE(), 114 )  TRS_TIME
                                        ,PI010 store_ip
                                        ,'' sync_date
                                        ,'' sync_time
                                        ,'N'  sync_mark
                                        ,0  sync_count
                                        ,MP001
                                        ,MP002
                                        ,MP003
                                        ,MP004
                                        ,MP017
                                        ,MP005
                                        FROM [TK].dbo.POSPI, [TK].dbo.POSMP
                                        WHERE PI025<>'2'  
                                        AND MP003='{0}' 
                                        GROUP BY PI010,MP001,MP002,MP003,MP004,MP017,MP005
                                        ORDER BY PI010

                                        --LOG_POSRL
                                        DELETE [TK].dbo.LOG_POSRL
                                        WHERE RL003='{0}'

                                        INSERT INTO [TK].dbo.LOG_POSRL
                                        (
                                        TRS_CODE
                                        ,TRS_DATE
                                        ,TRS_TIME
                                        ,store_ip
                                        ,sync_date
                                        ,sync_time
                                        ,sync_mark
                                        ,sync_count
                                        ,RL001
                                        ,RL002
                                        ,RL003
                                        ,RL004
                                        )

                                        SELECT 
                                        '2' TRS_CODE
                                        ,CONVERT(char(08), GETDATE(), 112 )  TRS_DATE
                                        ,CONVERT(char(12), GETDATE(), 114 )  TRS_TIME
                                        ,PI010 store_ip
                                        ,'' sync_date
                                        ,'' sync_time
                                        ,'N'  sync_mark
                                        ,0  sync_count
                                        ,RL001
                                        ,RL002
                                        ,RL003
                                        ,RL004
                                        FROM [TK].dbo.POSPI, [TK].dbo.POSRL
                                        WHERE PI025<>'2'  
                                        AND RL003='{0}' 
                                        GROUP BY PI010,RL001,RL002,RL003,RL004
                                        ORDER BY PI010

                                        ", DR["ID"].ToString());
                }
            }

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sqlConn.Close();
                sqlConn.Open();
                tran = sqlConn.BeginTransaction();


                cmd.Connection = sqlConn;
                cmd.CommandTimeout = 60;
                cmd.CommandText = SQL.ToString();
                cmd.Transaction = tran;
                result = cmd.ExecuteNonQuery();

                if (result == 0)
                {
                    tran.Rollback();    //交易取消
                }
                else
                {
                    tran.Commit();      //執行交易  
                    //Console.WriteLine("ADDTOUOFTB_EIP_SCH_MEMO_MOC OK");

                }

            }
            catch
            {

            }

            finally
            {
                sqlConn.Close();
            }

        }

        public DataTable FIND_TK_Z_POSSET()
        {
            DataTable DT = new DataTable();
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sbSql.Clear();
                sbSqlQuery.Clear();

                //庫存數量看LA009 IN ('20004','20006','20008','20019','20020'

                sbSql.AppendFormat(@"  
                                    SELECT
                                    [DOC_NBR]
                                    ,[KINDS]
                                    ,[ID]
                                    ,[ISUPDATE]
                                    ,[CREATEDATES]
                                    FROM [TK].[dbo].[Z_POSSET]
                                    WHERE ISUPDATE IN ('N')

                                    ");


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    return ds1.Tables["ds1"];
                }
                else
                {
                    return null;
                }

            }
            catch
            {

            }
            finally
            {
                sqlConn.Close();
            }


            return DT;
        }

        public void UPDATE_Z_POSSET()
        {
            StringBuilder SQL = new StringBuilder();
            SQL.Clear();

            SQL.AppendFormat(@"
                            UPDATE  [TK].[dbo].[Z_POSSET]
                            SET ISUPDATE='Y'
                            WHERE ISUPDATE IN ('N')
                            ");



            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sqlConn.Close();
                sqlConn.Open();
                tran = sqlConn.BeginTransaction();


                cmd.Connection = sqlConn;
                cmd.CommandTimeout = 60;
                cmd.CommandText = SQL.ToString();
                cmd.Transaction = tran;
                result = cmd.ExecuteNonQuery();

                if (result == 0)
                {
                    tran.Rollback();    //交易取消
                }
                else
                {
                    tran.Commit();      //執行交易  
                    //Console.WriteLine("ADDTOUOFTB_EIP_SCH_MEMO_MOC OK");

                }

            }
            catch
            {

            }

            finally
            {
                sqlConn.Close();
            }

        }
         //門市日誌-早班
        public void NEW_TBSTOREDAILY_MORNING()
        {
            DataTable DT = FIND_UOF_TBSTOREDAILY_MORNING();

            if (DT != null && DT.Rows.Count >= 1)
            {
                NEW_TO_TKMK_TBSTOREDAILY_MORNING(DT);
            }
        }
        ///門市日誌-午班
        public void NEW_TBSTOREDAILY_AFTERMOON()
        {

        }
        public DataTable FIND_UOF_TBSTOREDAILY_MORNING()
        {
            DataTable DT = new DataTable();
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sbSql.Clear();
                sbSqlQuery.Clear();

                sbSql.AppendFormat(@"                                     
                                    SELECT TB_WKF_FORM.FORM_NAME,DOC_NBR,*
                                    FROM [UOF].dbo.TB_WKF_TASK,[UOF].dbo.TB_WKF_FORM,[UOF].dbo.TB_WKF_FORM_VERSION
                                    WHERE 1=1
                                    AND TB_WKF_TASK.FORM_VERSION_ID=TB_WKF_FORM_VERSION.FORM_VERSION_ID
                                    AND TB_WKF_FORM.FORM_ID=TB_WKF_FORM_VERSION.FORM_ID
                                    AND TB_WKF_FORM.FORM_NAME IN ('0901.門市營業日誌-早班')
                                    AND TB_WKF_TASK.TASK_RESULT='0'
                                    AND DOC_NBR COLLATE Chinese_Taiwan_Stroke_BIN NOT IN (SELECT  [DOC_NBR] FROM [192.168.1.105].[TKMK].[dbo].[TBSTOREDAILY_MORNING])
   
                                    ");


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    return ds1.Tables["ds1"];
                }
                else
                {
                    return null;
                }

            }
            catch
            {

            }
            finally
            {
                sqlConn.Close();
            }


            return null;
        }
        public void NEW_TO_TKMK_TBSTOREDAILY_MORNING(DataTable DT)
        {
            string xmlData = "";
            string DOC_NBR = "";
            string FIELD1 = "";           
            string FIELD2 = "";
            string FIELD3 = "";
            string FIELD4 = "";
            string FIELD5 = "";
            string FIELD6 = "";
            string FIELD7 = "";
            string FIELD8 = "";
            string FIELD9 = "";
            string FIELD10 = "";
            string FIELD11 = "";
            string FIELD12 = "";
            string FIELD13 = "";
            string FIELD14 = "";
            string FIELD15 = "";
            string FIELD16 = "";
            string FIELD17 = "";
            string FIELD18 = "";
            string FIELD19 = "";
            string FIELD20 = "";
            string FIELD21 = "";


            foreach (DataRow row in DT.Rows)
            {
                xmlData = "";
                DOC_NBR = "";
                FIELD1 = "";
                FIELD2 = "";
                FIELD3 = "";
                FIELD4 = "";
                FIELD5 = "";
                FIELD6 = "";
                FIELD7 = "";
                FIELD8 = "";
                FIELD9 = "";
                FIELD10 = "";
                FIELD11 = "";
                FIELD12 = "";
                FIELD13 = "";
                FIELD14 = "";
                FIELD15 = "";
                FIELD16 = "";
                FIELD17 = "";
                FIELD18 = "";
                FIELD19 = "";
                FIELD20 = "";
                FIELD21 = "";

                xmlData = FIND_UOF_CURRENT_DOC(row["DOC_NBR"].ToString());

                XDocument doc = XDocument.Parse(xmlData);

                var fieldItems = doc.Descendants("FieldItem");

                foreach (var fieldItem in fieldItems)
                {

                    string fieldId = fieldItem.Attribute("fieldId").Value;

                    // 節點存在，取值       
                    string fieldValue = fieldItem.Attribute("fieldValue")?.Value;

                    if (fieldId.Equals("ID"))
                    {
                        DOC_NBR = fieldValue;                       
                    }
                    else if (fieldId.Equals("FIELD1"))
                    {
                        string S_fieldValue = fieldValue;
                        string[] parts = S_fieldValue.Split('@');

                        // 如果分割後的部分數量大於等於1，取第一部分
                        if (parts.Length >= 1)
                        {
                            FIELD1 = parts[0];                            
                        }
                    }
                    else if(fieldId.Equals("FIELD2"))
                    {
                        FIELD2 = fieldValue;
                    }
                    else if (fieldId.Equals("FIELD3"))
                    {
                        FIELD3 = fieldValue;
                    }
                    else if (fieldId.Equals("FIELD4"))
                    {
                        FIELD4 = fieldValue;
                    }
                    else if (fieldId.Equals("FIELD5"))
                    {
                        FIELD5 = fieldValue;
                    }
                    else if (fieldId.Equals("FIELD6"))
                    {
                        string S_fieldValue = fieldValue;
                        string[] parts = S_fieldValue.Split('@');

                        // 如果分割後的部分數量大於等於1，取第一部分
                        if (parts.Length >= 1)
                        {
                            FIELD6 = parts[0];
                        }
                    }
                    else if (fieldId.Equals("FIELD7"))
                    {
                        string S_fieldValue = fieldValue;
                        string[] parts = S_fieldValue.Split('@');

                        // 如果分割後的部分數量大於等於1，取第一部分
                        if (parts.Length >= 1)
                        {
                            FIELD7 = parts[0];
                        }
                    }
                    else if (fieldId.Equals("FIELD8"))
                    {
                        FIELD8 = fieldValue;
                    }
                    else if (fieldId.Equals("FIELD9"))
                    {
                        FIELD9 = fieldValue;
                        FIELD9 = FIELD9.Replace("@", "、");
                    }
                    else if (fieldId.Equals("FIELD10"))
                    {
                        FIELD10 = fieldValue;
                        FIELD10 = FIELD10.Replace("@", "、");
                    }
                    else if (fieldId.Equals("FIELD11"))
                    {
                        FIELD11 = fieldValue;
                        FIELD11 = FIELD11.Replace("@", "、");
                    }
                    else if (fieldId.Equals("FIELD12"))
                    {
                        FIELD12 = fieldValue;
                        FIELD12 = FIELD12.Replace("@", "、");
                    }
                    else if (fieldId.Equals("FIELD13"))
                    {
                        FIELD13 = fieldValue;
                        FIELD13 = FIELD13.Replace("@", "、");
                    }
                    else if (fieldId.Equals("FIELD14"))
                    {
                        FIELD14 = fieldValue;
                    }
                    else if (fieldId.Equals("FIELD15"))
                    {
                        FIELD15 = fieldValue;
                    }
                    else if (fieldId.Equals("FIELD16"))
                    {
                        FIELD16 = fieldValue;
                    }
                    else if (fieldId.Equals("FIELD17"))
                    {
                        FIELD17 = fieldValue;
                    }
                    else if (fieldId.Equals("FIELD18"))
                    {
                        FIELD18 = fieldValue;
                    }                  
                    else if (fieldId.Equals("FIELD21"))
                    {
                        FIELD21 = fieldValue;
                    }
                }

                //var dataGrids = doc.Descendants("DataGrid");

                //foreach (var dataGrid in dataGrids)
                //{
                //    var rows = dataGrid.Descendants("Row");

                //    foreach (var rowdata in rows)
                //    {
                //        QC6007 = "";
                //        var cells = rowdata.Descendants("Cell");

                //        foreach (var cell in cells)
                //        {

                //            string cellFieldId = cell.Attribute("fieldId")?.Value;
                //            string cellFieldValue = cell.Attribute("fieldValue")?.Value;

                //            if (cellFieldId.Equals("QC60071"))
                //            {
                //                QC6007 = QC6007 + cellFieldValue + "-";
                //            }
                //            else if (cellFieldId.Equals("QC60072"))
                //            {
                //                QC6007 = QC6007 + cellFieldValue + "、";
                //            }


                //        }
                //        //去除+"、";
                //        if (QC6007.Length >= 1)
                //        {
                //            QC6007 = QC6007.Substring(0, QC6007.Length - 1);
                //        }
                //        //
                //        if (QC6007.Length >= 250)
                //        {
                //            QC6007 = QC6007.Substring(0, 249);
                //        }
                //    }
                //}


                ADD_NEW_TO_TKMK_TBSTOREDAILY_MORNING(
                                            DOC_NBR
                                            , FIELD1
                                            , FIELD2
                                            , FIELD3
                                            , FIELD4
                                            , FIELD5
                                            , FIELD6
                                            , FIELD7
                                            , FIELD8
                                            , FIELD9
                                            , FIELD10
                                            , FIELD11
                                            , FIELD12
                                            , FIELD13
                                            , FIELD14
                                            , FIELD15
                                            , FIELD16
                                            , FIELD17
                                            , FIELD18
                                            , FIELD19
                                            , FIELD20
                                            , FIELD21
                                            );
            }
        }

        public string FIND_UOF_CURRENT_DOC(string DOC_NBR)
        {
            DataTable DT = new DataTable();
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sbSql.Clear();
                sbSqlQuery.Clear();

                //庫存數量看LA009 IN ('20004','20006','20008','20019','20020'

                sbSql.AppendFormat(@"  
                                    SELECT 
                                    DOC_NBR,CONVERT(nvarchar(MAX),CURRENT_DOC) CURRENT_DOC
                                    FROM [UOF].[dbo].[TB_WKF_TASK]
                                    WHERE DOC_NBR='{0}'
                                    ", DOC_NBR);


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    return ds1.Tables["ds1"].Rows[0]["CURRENT_DOC"].ToString();
                }
                else
                {
                    return null;
                }

            }
            catch
            {

            }
            finally
            {
                sqlConn.Close();
            }


            return null;
        }

        public void ADD_NEW_TO_TKMK_TBSTOREDAILY_MORNING(
            string DOC_NBR
            ,string FIELD1
            ,string FIELD2 
            ,string FIELD3
            ,string FIELD4 
            ,string FIELD5 
            ,string FIELD6 
            ,string FIELD7 
            ,string FIELD8
            ,string FIELD9 
            ,string FIELD10 
            ,string FIELD11 
            ,string FIELD12 
            ,string FIELD13
            ,string FIELD14 
            ,string FIELD15 
            ,string FIELD16 
            ,string FIELD17 
            ,string FIELD18 
            ,string FIELD19
            ,string FIELD20 
            ,string FIELD21 

            )
        {
            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sqlConn.Close();
                sqlConn.Open();
                tran = sqlConn.BeginTransaction();

                sbSql.Clear();

                sbSql.AppendFormat(@"                                    
                                    INSERT INTO [TKMK].[dbo].[TBSTOREDAILY_MORNING]
                                    (
                                    [DOC_NBR]                            
                                    ,[FIELD1]
                                    ,[FIELD2]
                                    ,[FIELD3]
                                    ,[FIELD4]
                                    ,[FIELD5]
                                    ,[FIELD6]
                                    ,[FIELD7]
                                    ,[FIELD8]
                                    ,[FIELD9]
                                    ,[FIELD10]
                                    ,[FIELD11]
                                    ,[FIELD12]
                                    ,[FIELD13]
                                    ,[FIELD14]
                                    ,[FIELD15]
                                    ,[FIELD16]
                                    ,[FIELD17]
                                    ,[FIELD18]
                                    ,[FIELD19]
                                    ,[FIELD20]
                                    ,[FIELD21]

                                    )
                                    VALUES
                                    (
                                    '{0}'
                                    ,'{1}'
                                    ,'{2}'
                                    ,'{3}'
                                    ,'{4}'
                                    ,'{5}'
                                    ,'{6}'
                                    ,'{7}'
                                    ,'{8}'
                                    ,'{9}'
                                    ,'{10}'
                                    ,'{11}'
                                    ,'{12}'
                                    ,'{13}'
                                    ,'{14}'
                                    ,'{15}'
                                    ,'{16}'
                                    ,'{17}'
                                    ,'{18}'
                                    ,'{19}'
                                    ,'{20}'
                                    ,'{21}'
                                   
                                    )

                                    ", DOC_NBR
                                   ,   FIELD1
                                   ,FIELD2
,FIELD3
,FIELD4
,FIELD5
,FIELD6
,FIELD7
,FIELD8
,FIELD9
,FIELD10
,FIELD11
,FIELD12
,FIELD13
,FIELD14
,FIELD15
,FIELD16
,FIELD17
,FIELD18
,FIELD19
,FIELD20
,FIELD21

                                    );

                cmd.Connection = sqlConn;
                cmd.CommandTimeout = 60;
                cmd.CommandText = sbSql.ToString();
                cmd.Transaction = tran;
                result = cmd.ExecuteNonQuery();

                if (result == 0)
                {
                    tran.Rollback();    //交易取消
                }
                else
                {
                    tran.Commit();      //執行交易  
                }

            }
            catch
            {

            }

            finally
            {
                sqlConn.Close();
            }
        }

        public void ADD_TKPUR_PURVERSIONSNUMS()
        {
            StringBuilder SQL = new StringBuilder();
            SQL.Clear();

            SQL.AppendFormat(@"                            
                            INSERT INTO [TKPUR].[dbo].[PURVERSIONSNUMS]                            
                            (
                            [NAMES]
                            ,[BACKMONEYS]
                            ,[ISCLOSE]
                            ,[PAYKINDS]
                            ,[CREATEDATES]
                            ,[COMMENTS]
                            )
                            SELECT 
                            TD005 AS NAMES
                            ,TD011 AS BACKMONEYS
                            ,'N' AS  ISCLOSE
                            ,'預付版費' AS PAYKINDS
                            ,TD012 AS CREATEDATES
                            ,CONVERT(NVARCHAR,CONVERT(INT,TD008))+TD009+' '+TD014 AS COMMENTS
                            FROM [TK].dbo.PURTC,[TK].dbo.PURTD
                            WHERE TD001=TD001 AND TC002=TD002
                            AND TD004 IN ('299990001','299990007')
                            AND TC014='Y'
                            AND TD005 LIKE '%預付%'
                            AND TD005 NOT IN (SELECT [NAMES] FROM [TKPUR].[dbo].[PURVERSIONSNUMS]) 
                            ORDER BY TD005,TD012


                            INSERT INTO [TKPUR].[dbo].[PURVERSIONSNUMS]
                            (
                            [NAMES]
                            ,[BACKMONEYS]
                            ,[ISCLOSE]
                            ,[PAYKINDS]
                            ,[CREATEDATES]
                            ,[COMMENTS]
                            )
                            SELECT 
                            TD005 AS NAMES
                            ,TD011 AS BACKMONEYS
                            ,'N' AS  ISCLOSE
                            ,'版費' AS PAYKINDS
                            ,TD012 AS CREATEDATES
                            ,CONVERT(NVARCHAR,CONVERT(INT,TD008))+TD009+' '+TD014 AS COMMENTS
                            FROM [TK].dbo.PURTC,[TK].dbo.PURTD
                            WHERE TD001=TD001 AND TC002=TD002
                            AND TD004 IN ('299990001','299990007')
                            AND TC014='Y'
                            AND TD005 NOT LIKE '%預付%'
                            AND TD005 NOT IN (SELECT [NAMES] FROM [TKPUR].[dbo].[PURVERSIONSNUMS]) 
                            ORDER BY TD005,TD012


                            
                            INSERT INTO [TKPUR].[dbo].[PURVERSIONSNUMS]
                            (
                            [NAMES]
                            ,[BACKMONEYS]
                            ,[ISCLOSE]
                            ,[PAYKINDS]
                            ,[CREATEDATES]
                            ,[COMMENTS]
                            ,[MB001]
                            ,[MB002]
                            ,[TOTALNUMS]
                            )
                            SELECT 
                            TD005 AS NAMES
                            ,0 AS BACKMONEYS
                            ,'N' AS  ISCLOSE
                            ,'改版未收版費' AS PAYKINDS
                            ,TD012 AS CREATEDATES
                            ,CONVERT(NVARCHAR,CONVERT(INT,TD008))+TD009+' '+TD014 AS COMMENTS
                            ,TD004 MB001
                            ,TD005 MB002
                            ,TD015 TOTALNUMS
                            FROM [TK].dbo.PURTC,[TK].dbo.PURTD
                            WHERE TD001=TD001 AND TC002=TD002
                            AND (TD014 LIKE '%美工%' OR TD014 LIKE '%改版%')
                            AND TC014='Y'
                            AND TD005 NOT IN (SELECT [NAMES] FROM [TKPUR].[dbo].[PURVERSIONSNUMS]) 
                            ORDER BY TD005,TD012
                            ");



            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sqlConn.Close();
                sqlConn.Open();
                tran = sqlConn.BeginTransaction();


                cmd.Connection = sqlConn;
                cmd.CommandTimeout = 60;
                cmd.CommandText = SQL.ToString();
                cmd.Transaction = tran;
                result = cmd.ExecuteNonQuery();

                if (result == 0)
                {
                    tran.Rollback();    //交易取消
                }
                else
                {
                    tran.Commit();      //執行交易  
                   

                }

            }
            catch
            {

            }

            finally
            {
                sqlConn.Close();
            }

        }

        public void ADD_TKPUR_PURMODELSNUMS()
        {
            StringBuilder SQL = new StringBuilder();
            SQL.Clear();

            SQL.AppendFormat(@"                            
                            INSERT INTO [TKPUR].[dbo].[PURMODELSNUMS]                            
                            (
                            [NAMES]
                            ,[BACKMONEYS]
                            ,[ISCLOSE]
                            ,[PAYKINDS]
                            ,[CREATEDATES]
                            ,[COMMENTS]
                            )
                            SELECT 
                            TD005 AS NAMES
                            ,TD011 AS BACKMONEYS
                            ,'N' AS  ISCLOSE
                            ,'模具費(預付)' AS PAYKINDS
                            ,TD012 AS CREATEDATES
                            ,CONVERT(NVARCHAR,CONVERT(INT,TD008))+TD009+' '+TD014 AS COMMENTS
                            FROM [TK].dbo.PURTC,[TK].dbo.PURTD
                            WHERE TD001=TD001 AND TC002=TD002
                            AND TD004 IN ('299990006')
                            AND TC014='Y'
                            AND TD005 NOT IN (SELECT [NAMES] FROM [TKPUR].[dbo].[PURMODELSNUMS]) 
                            ORDER BY TD005,TD012


                            INSERT INTO [TKPUR].[dbo].[PURMODELSNUMS]   
                            (
                            [NAMES]
                            ,[BACKMONEYS]
                            ,[ISCLOSE]
                            ,[PAYKINDS]
                            ,[CREATEDATES]
                            ,[COMMENTS]
                            )
                            SELECT 
                            TD005 AS NAMES
                            ,TD011 AS BACKMONEYS
                            ,'N' AS  ISCLOSE
                            ,'模具費(物料)' AS PAYKINDS
                            ,TD012 AS CREATEDATES
                            ,CONVERT(NVARCHAR,CONVERT(INT,TD008))+TD009+' '+TD014 AS COMMENTS
                            FROM [TK].dbo.PURTC,[TK].dbo.PURTD
                            WHERE TD001=TD001 AND TC002=TD002
                            AND TD004 IN ('299990010')
                            AND TC014='Y'
                            AND TD005 NOT IN (SELECT [NAMES] FROM [TKPUR].[dbo].[PURMODELSNUMS]) 
                            ORDER BY TD005,TD012
                            ");



            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sqlConn.Close();
                sqlConn.Open();
                tran = sqlConn.BeginTransaction();


                cmd.Connection = sqlConn;
                cmd.CommandTimeout = 60;
                cmd.CommandText = SQL.ToString();
                cmd.Transaction = tran;
                result = cmd.ExecuteNonQuery();

                if (result == 0)
                {
                    tran.Rollback();    //交易取消
                }
                else
                {
                    tran.Commit();      //執行交易  


                }

            }
            catch
            {

            }

            finally
            {
                sqlConn.Close();
            }

        }

        public void ADD_TK_ZINVMBBAKING()
        {
            StringBuilder SQL = new StringBuilder();
            SQL.Clear();

            SQL.AppendFormat(@"                            
                            INSERT INTO [TK].[dbo].[ZINVMBBAKING]
                            (
                            [MB001]
                            ,[MB002]
                            )
                            SELECT MB001,MB002
                            FROM [TK].dbo.INVMB
                            WHERE (MB001 LIKE '408%' OR MB001 LIKE '409%' )
                            AND MB001 NOT IN (SELECT  [MB001] FROM [TK].[dbo].[ZINVMBBAKING])
                            ");



            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sqlConn.Close();
                sqlConn.Open();
                tran = sqlConn.BeginTransaction();


                cmd.Connection = sqlConn;
                cmd.CommandTimeout = 60;
                cmd.CommandText = SQL.ToString();
                cmd.Transaction = tran;
                result = cmd.ExecuteNonQuery();

                if (result == 0)
                {
                    tran.Rollback();    //交易取消
                }
                else
                {
                    tran.Commit();      //執行交易  


                }

            }
            catch
            {

            }

            finally
            {
                sqlConn.Close();
            }

        }

        public void ADD_TK_MOC_REPORTMOCBOMPROCESS_REPORTMOCBOMORIPROCESS()
        {
            StringBuilder SQL = new StringBuilder();
            SQL.Clear();

            SQL.AppendFormat(@"                            
                            INSERT INTO [TKMOC].[dbo].[REPORTMOCBOMPROCESS]
                            ([MB001]
                            ,[MB002])
                            SELECT RTRIM(LTRIM([MB001])), RTRIM(LTRIM([MB002])) FROM [TK].dbo.INVMB 
                            WHERE ([MB001] LIKE '3%' OR [MB001] LIKE  '4%')
                            AND MB001 NOT IN (SELECT [MB001] FROM [TKMOC].[dbo].[REPORTMOCBOMPROCESS])

                            INSERT INTO [TKMOC].[dbo].[REPORTMOCBOMORIPROCESS]
                            ([MB001]
                            ,[MB002])
                            SELECT RTRIM(LTRIM([MB001])), RTRIM(LTRIM([MB002])) FROM [TK].dbo.INVMB 
                            WHERE ([MB001] LIKE '3%' OR [MB001] LIKE  '4%')
                            AND MB001 NOT IN (SELECT [MB001] FROM [TKMOC].[dbo].[REPORTMOCBOMORIPROCESS])
                            ");



            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dberp"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sqlConn.Close();
                sqlConn.Open();
                tran = sqlConn.BeginTransaction();


                cmd.Connection = sqlConn;
                cmd.CommandTimeout = 60;
                cmd.CommandText = SQL.ToString();
                cmd.Transaction = tran;
                result = cmd.ExecuteNonQuery();

                if (result == 0)
                {
                    tran.Rollback();    //交易取消
                }
                else
                {
                    tran.Commit();      //執行交易  


                }

            }
            catch
            {

            }

            finally
            {
                sqlConn.Close();
            }

        }

        //
        public void ADD_UOF_FORM_GRAFFIRS_1005_GG004_NULL()
        {
            DataTable DT1003 = SEARCH_UOF_GRAFFIRS_1003_GG004_NULL();

            if (DT1003 != null && DT1003.Rows.Count >= 1)
            {
                foreach (DataRow dr in DT1003.Rows)
                {
                    SEARCHUOFTB_WKF_TASK_TKGRAFFAIRS_1003_GG004_NULL(dr["DOC_NBR"].ToString());
                }
            }
        }
        public DataTable SEARCH_UOF_GRAFFIRS_1003_GG004_NULL()
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();


            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sbSql.Clear();
                sbSqlQuery.Clear();

                //AND [View_TB_WKF_TASK_APPLYBUY].DOC_NBR NOT IN (SELECT  EXTERNAL_FORM_NBR FROM [UOF].[dbo].[TB_WKF_EXTERNAL_TASK] WHERE STATUS IN ('1','2')  AND ISNULL(EXTERNAL_FORM_NBR,'')<>'') 
                //AND DOC_NBR = 'GA1003240700088'
                sbSql.AppendFormat(@"  
                                   SELECT [View_TB_WKF_TASK_APPLYBUY].DOC_NBR,GG004_fieldValue,*
                                    FROM [UOF].[dbo].[View_TB_WKF_TASK_APPLYBUY]
                                    WHERE 1=1
                                    AND [View_TB_WKF_TASK_APPLYBUY].DOC_NBR  IN (SELECT  EXTERNAL_FORM_NBR FROM [UOF].[dbo].[TB_WKF_EXTERNAL_TASK] WHERE STATUS IN ('1','2')  AND ISNULL(EXTERNAL_FORM_NBR,'')<>'') 
                                    AND ISNULL(GG004_fieldValue,'')=''
                                    AND [View_TB_WKF_TASK_APPLYBUY].DOC_NBR='GA1003240700088'
                        
                                    ORDER BY [View_TB_WKF_TASK_APPLYBUY].DOC_NBR
                                    ");


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    return ds1.Tables["ds1"];

                }
                else
                {
                    return null;
                }

            }
            catch
            {
                return null;
            }
            finally
            {
                sqlConn.Close();
            }
        }
        public void SEARCHUOFTB_WKF_TASK_TKGRAFFAIRS_1003_GG004_NULL(string DOC_NBR)
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            int ROWS = 0;

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sbSql.Clear();
                sbSqlQuery.Clear();

                //庫存數量看LA009 IN ('20004','20006','20008','20019','20020'

                sbSql.AppendFormat(@"                                   
                                    SELECT DOC_NBR,GG004_fieldValue,*
                                    FROM [UOF].[dbo].[View_TB_WKF_TASK_APPLYBUY]
                                    LEFT JOIN [UOF].[dbo].[TB_EB_USER] ON [TB_EB_USER].USER_GUID=[View_TB_WKF_TASK_APPLYBUY].USER_GUID
                                    WHERE 1=1
                                    AND ISNULL(GG004_fieldValue,'')=''
                                    AND DOC_NBR='GA1003240700088'
                              
                                    ", DOC_NBR);


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    string NAME = ds1.Tables["ds1"].Rows[0]["NAME"].ToString();
                    string USER_GUID = ds1.Tables["ds1"].Rows[0]["USER_GUID"].ToString();


                    string GA001 = ds1.Tables["ds1"].Rows[0]["GA005_fieldValue"].ToString();
                    string GA002 = "";
                    string GA003 = ds1.Tables["ds1"].Rows[0]["GA006_fieldValue"].ToString();
                    string GA004 = ds1.Tables["ds1"].Rows[0]["GA007_fieldValue"].ToString();
                    string GA005 = ds1.Tables["ds1"].Rows[0]["GG002_fieldValue"].ToString();
                    string GA006 = ds1.Tables["ds1"].Rows[0]["GG003_fieldValue"].ToString();
                    string GA007 = ds1.Tables["ds1"].Rows[0]["GG009_fieldValue"].ToString();
                    string GA008 = ds1.Tables["ds1"].Rows[0]["GG005_fieldValue"].ToString();
                    string GA009 = "";
                    string GA010 = "";
                    string GA011 = ds1.Tables["ds1"].Rows[0]["GG004_fieldValue"].ToString();
                    string GA012 = "";
                    string GA013 = "";
                    string GA014 = "";
                    string GA015 = "";
                    string GA016 = "";
                    string GA017 = "";
                    string GA019 = ds1.Tables["ds1"].Rows[0]["GG010_fieldValue"].ToString();
                    string GA098 = "";
                    string GA099 = "";
                    string GA999 = FIND_TKGAFFAIRS_TBASSINGS(ds1.Tables["ds1"].Rows[0]["GA010_fieldValue"].ToString());
                    string GG010 = "";

                    string TEMP = ds1.Tables["ds1"].Rows[0]["GA010_fieldValue"].ToString();
                    string NAMES = TEMP.Substring(0, 3);
                    DataTable DT = SEARCH_UOF_TB_EB_USER(NAMES);

                    if (DT != null && DT.Rows.Count >= 1)
                    {
                        USER_GUID = DT.Rows[0]["USER_GUID"].ToString();
                    }



                    ROWS = ROWS + 1;
                    GA002 = DOC_NBR;
                    GA017 = DOC_NBR + '-' + ROWS;

                    ADD_GRAFFAIRS_1005_TB_WKF_EXTERNAL_TASK(USER_GUID, DOC_NBR
                                                    , GA001
                                                    , GA002
                                                    , GA003
                                                    , GA004
                                                    , GA005
                                                    , GA006
                                                    , GA007
                                                    , GA008
                                                    , GA009
                                                    , GA010
                                                    , GA011
                                                    , GA012
                                                    , GA013
                                                    , GA014
                                                    , GA015
                                                    , GA016
                                                    , GA017
                                                    , GA098
                                                    , GA099
                                                    , GA999
                                                    , GA019
                                                    );

                }

            }
            catch
            {

            }
            finally
            {
                sqlConn.Close();
            }
        }
        public void ADD_UOF_FORM_GRAFFIRS_1005_GG004_NOT_NULL()
        {
            DataTable DT1003 = SEARCH_UOF_GRAFFIRS_1003_GG004_NOT_NULL();

            if (DT1003 != null && DT1003.Rows.Count >= 1)
            {
                foreach (DataRow dr in DT1003.Rows)
                {
                    SEARCHUOFTB_WKF_TASK_TKGRAFFAIRS_1003_GG004_NOT_NULL(dr["GG004_fieldValue"].ToString());
                }
            }
        }

        public DataTable SEARCH_UOF_GRAFFIRS_1003_GG004_NOT_NULL()
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();


            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sbSql.Clear();
                sbSqlQuery.Clear();

                //只查 現在到上個月，CONVERT(datetime,[GA005_fieldValue])>=DATEADD(MONTH, -1,  GETDATE())
                //過濾 已成功發出草稿的請購單+品名，[EXTERNAL_FORM_NBR_fieldValue]+[GG002_fieldValue]
                //View_TB_WKF_TASK_APPLYBUY_MERGE，會記錄  已申請成功+申請中
                sbSql.AppendFormat(@"  
                                   SELECT GG004_fieldValue
                                    FROM [UOF].[dbo].[View_TB_WKF_TASK_APPLYBUY]
                                    WHERE 1=1
                                    AND CONVERT(datetime,[GA005_fieldValue])>=DATEADD(MONTH, -1,  GETDATE())
                                    AND REPLACE([View_TB_WKF_TASK_APPLYBUY].DOC_NBR+[GG002_fieldValue],' ','' ) NOT IN
                                    (
                                    SELECT REPLACE([EXTERNAL_FORM_NBR_fieldValue]+[GG002_fieldValue],' ','')
                                    FROM [UOF].[dbo].[View_TB_WKF_TASK_APPLYBUY_MERGE]
                                    )
                                    AND ISNULL(GG004_fieldValue,'')<>''
                                    AND GG004_fieldValue='東昇'

                                    GROUP BY GG004_fieldValue
                                    ORDER BY GG004_fieldValue
                                    ");


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    return ds1.Tables["ds1"];

                }
                else
                {
                    return null;
                }

            }
            catch
            {
                return null;
            }
            finally
            {
                sqlConn.Close();
            }
        }
        public void SEARCHUOFTB_WKF_TASK_TKGRAFFAIRS_1003_GG004_NOT_NULL(string GG004_fieldValue)
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();

            int ROWS = 0;

            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sbSql.Clear();
                sbSqlQuery.Clear();

                //庫存數量看LA009 IN ('20004','20006','20008','20019','20020'

                sbSql.AppendFormat(@"                                   
                                    SELECT DOC_NBR,GG004_fieldValue,*
                                    FROM [UOF].[dbo].[View_TB_WKF_TASK_APPLYBUY]
                                    LEFT JOIN [UOF].[dbo].[TB_EB_USER] ON [TB_EB_USER].USER_GUID=[View_TB_WKF_TASK_APPLYBUY].USER_GUID
                                    WHERE 1=1
                                    AND CONVERT(datetime,[GA005_fieldValue])>=DATEADD(MONTH, -1,  GETDATE())
                                    AND REPLACE([View_TB_WKF_TASK_APPLYBUY].DOC_NBR+[GG002_fieldValue],' ','' ) NOT IN
                                    (
                                    SELECT REPLACE([EXTERNAL_FORM_NBR_fieldValue]+[GG002_fieldValue],' ','')
                                    FROM [UOF].[dbo].[View_TB_WKF_TASK_APPLYBUY_MERGE]
                                    )
                                    AND ISNULL(GG004_fieldValue,'')<>''
                                    AND GG004_fieldValue='大福'
                              
                                    ", GG004_fieldValue);


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    string NAME = ds1.Tables["ds1"].Rows[0]["NAME"].ToString();
                    string USER_GUID = ds1.Tables["ds1"].Rows[0]["USER_GUID"].ToString();

                    string TEMP = ds1.Tables["ds1"].Rows[0]["GA010_fieldValue"].ToString();
                    string NAMES = TEMP.Substring(0, 3);
                    DataTable DT = SEARCH_UOF_TB_EB_USER(NAMES);

                    if (DT != null && DT.Rows.Count >= 1)
                    {
                        USER_GUID = DT.Rows[0]["USER_GUID"].ToString();
                    }

                    ADD_GRAFFAIRS_1005_TB_WKF_EXTERNAL_TASK_NOT_NULL(USER_GUID, ds1.Tables["ds1"]);
                }



                   

            }
            catch
            {

            }
            finally
            {
                sqlConn.Close();
            }
        }

        public void ADD_GRAFFAIRS_1005_TB_WKF_EXTERNAL_TASK_NOT_NULL(string USER_GUID,DataTable DT)
        {
            //吳德明
            //USER_GUID = "d3679881-68b1-477e-a2c6-b4ebe42482a3";
            //何翔鈞
            //USER_GUID = "192f1ddd-f6ef-4725-81e0-dc15c15a10cf";
            DataTable DTUSERDEP = SEARCHUOFUSERDEP(USER_GUID);
            //何翔鈞
            DataTable DTUSERDEP_DEFAULT = FIND_Z_UOF_FORM1005_DEFAULT_PERSON();
            //總務部人員
            DataTable DT_Z_UOF_FORM1005_FLOW = FIND_Z_UOF_FORM1005_FLOW();


            string account = "";
            string groupId = "";
            string jobTitleId = "";
            string fillerName = "";
            string fillerUserGuid = "";

            string DEPNAME = "";
            string DEPNO = "";

            //表單申請人要在總務部中
            //如果不在總務部，就改成何翔鈞
            if (DTUSERDEP != null && DTUSERDEP.Rows.Count >= 1&& DT_Z_UOF_FORM1005_FLOW!=null && DT_Z_UOF_FORM1005_FLOW.Rows.Count>=1)
            {
                foreach(DataRow DATAROW_DTUSERDEP in DTUSERDEP.Rows)
                {
                    foreach(DataRow DATAROW_DT_Z_UOF_FORM1005_FLOW in DT_Z_UOF_FORM1005_FLOW.Rows)
                    {
                        string SOURCE_account = DATAROW_DTUSERDEP["ACCOUNT"].ToString();
                        string TARGET_account = DATAROW_DT_Z_UOF_FORM1005_FLOW["ID"].ToString();

                        if(SOURCE_account.Equals(TARGET_account))
                        {
                            account = DATAROW_DTUSERDEP["ACCOUNT"].ToString();
                            groupId = DATAROW_DTUSERDEP["GROUP_ID"].ToString();
                            jobTitleId = DATAROW_DTUSERDEP["TITLE_ID"].ToString();
                            fillerName = DATAROW_DTUSERDEP["NAME"].ToString();
                            fillerUserGuid = DATAROW_DTUSERDEP["USER_GUID"].ToString();

                            DEPNAME = DATAROW_DTUSERDEP["DEPNAME"].ToString();
                            DEPNO = DATAROW_DTUSERDEP["DEPNO"].ToString();
                        }
                        else
                        {
                            account = DTUSERDEP_DEFAULT.Rows[0]["ACCOUNT"].ToString();
                            groupId = DTUSERDEP_DEFAULT.Rows[0]["GROUP_ID"].ToString();
                            jobTitleId = DTUSERDEP_DEFAULT.Rows[0]["TITLE_ID"].ToString();
                            fillerName = DTUSERDEP_DEFAULT.Rows[0]["NAME"].ToString();
                            fillerUserGuid = DTUSERDEP_DEFAULT.Rows[0]["USER_GUID"].ToString();

                            DEPNAME = DTUSERDEP_DEFAULT.Rows[0]["DEPNAME"].ToString();
                            DEPNO = DTUSERDEP_DEFAULT.Rows[0]["DEPNO"].ToString();
                        }
                    }
                }
                

            }

            //account = DTUSERDEP.Rows[0]["ACCOUNT"].ToString();
            //groupId = DTUSERDEP.Rows[0]["GROUP_ID"].ToString();
            //jobTitleId = DTUSERDEP.Rows[0]["TITLE_ID"].ToString();
            //fillerName = DTUSERDEP.Rows[0]["NAME"].ToString();
            //fillerUserGuid = DTUSERDEP.Rows[0]["USER_GUID"].ToString();

            //DEPNAME = DTUSERDEP.Rows[0]["DEPNAME"].ToString();
            //DEPNO = DTUSERDEP.Rows[0]["DEPNO"].ToString();

            string EXTERNAL_FORM_NBR = "MERGE1003";




            int rowscounts = 0;

            XmlDocument xmlDoc = new XmlDocument();
            //建立根節點
            XmlElement Form = xmlDoc.CreateElement("Form");

            //正式的id
            string FORMID = SEARCHFORM_UOF_VERSION_ID("1005.雜項採購單");

            if (!string.IsNullOrEmpty(FORMID))
            {
                Form.SetAttribute("formVersionId", FORMID);
            }


            Form.SetAttribute("urgentLevel", "2");
            //加入節點底下
            xmlDoc.AppendChild(Form);

            ////建立節點Applicant
            XmlElement Applicant = xmlDoc.CreateElement("Applicant");
            Applicant.SetAttribute("account", account);
            Applicant.SetAttribute("groupId", groupId);
            Applicant.SetAttribute("jobTitleId", jobTitleId);
            //加入節點底下
            Form.AppendChild(Applicant);

            //建立節點 Comment
            XmlElement Comment = xmlDoc.CreateElement("Comment");
            Comment.InnerText = "申請者意見";
            //加入至節點底下
            Applicant.AppendChild(Comment);

            //建立節點 FormFieldValue
            XmlElement FormFieldValue = xmlDoc.CreateElement("FormFieldValue");
            //加入至節點底下
            Form.AppendChild(FormFieldValue);

            //建立節點FieldItem
            //ID 表單編號	
            XmlElement FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "ID");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點FieldItem
            //GA001	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "GA001");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //GA002	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "GA002");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //GA003	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "GA003");
            FieldItem.SetAttribute("fieldValue", fillerName+"("+ account + ")");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //GA004	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "GA004");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //GA005	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "GA005");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //GA006	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "GA006");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //GA007	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "GA007");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //GA008	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "GA008");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //GA009	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "GA009");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //GA010	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "GA010");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //GA011	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "GA011");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //GA012	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "GA012");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //GA013	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "GA013");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //GA014	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "GA014");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //GA015	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "GA015");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //GA016	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "GA016");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //GA017	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "GA017");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //GA098
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "GA098");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //GA099	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "GA099");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //GA999	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "GA999");
            FieldItem.SetAttribute("fieldValue", fillerName);           
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);
            //GA019	
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "GA019");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);





            //DataGrid
            //建立節點FieldItem
            //INVTB
            FieldItem = xmlDoc.CreateElement("FieldItem");
            FieldItem.SetAttribute("fieldId", "DETAILS");
            FieldItem.SetAttribute("fieldValue", "");
            FieldItem.SetAttribute("realValue", "");
            FieldItem.SetAttribute("enableSearch", "True");
            FieldItem.SetAttribute("fillerName", fillerName);
            FieldItem.SetAttribute("fillerUserGuid", fillerUserGuid);
            FieldItem.SetAttribute("fillerAccount", account);
            FieldItem.SetAttribute("fillSiteId", "");
            //加入至members節點底下
            FormFieldValue.AppendChild(FieldItem);

            //建立節點 DataGrid
            XmlElement DataGrid = xmlDoc.CreateElement("DataGrid");
            //DataGrid 加入至 TB 節點底下
            XmlNode DETAILS = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='DETAILS']");
            DETAILS.AppendChild(DataGrid);


            foreach (DataRow od in DT.Rows)
            {

                // 新增 Row
                XmlElement Row = xmlDoc.CreateElement("Row");
                Row.SetAttribute("order", (rowscounts).ToString());

                //Row	TGG002B004
                XmlElement Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "GG002");
                Cell.SetAttribute("fieldValue", od["GG002_fieldValue"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	GG010
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "GG010");
                Cell.SetAttribute("fieldValue", od["GG010_fieldValue"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	GG003
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "GG003");
                Cell.SetAttribute("fieldValue", od["GG003_fieldValue"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	GG004
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "GG004");
                Cell.SetAttribute("fieldValue", od["GG004_fieldValue"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	GG005
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "GG005");
                Cell.SetAttribute("fieldValue", od["GG005_fieldValue"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	GG009
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "GG009");
                Cell.SetAttribute("fieldValue", od["GG009_fieldValue"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	GG006
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "GG006");
                Cell.SetAttribute("fieldValue", od["GG006_fieldValue"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	GG007
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "GG007");
                Cell.SetAttribute("fieldValue", "");
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	GG008
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "GG008");
                Cell.SetAttribute("fieldValue", "");
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	GG011
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "GG011");
                Cell.SetAttribute("fieldValue", od["GG007_fieldValue"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);

                //Row	EXTERNAL_FORM_NBR
                Cell = xmlDoc.CreateElement("Cell");
                Cell.SetAttribute("fieldId", "EXTERNAL_FORM_NBR");
                Cell.SetAttribute("fieldValue", od["DOC_NBR"].ToString());
                Cell.SetAttribute("realValue", "");
                Cell.SetAttribute("customValue", "");
                Cell.SetAttribute("enableSearch", "True");
                //Row
                Row.AppendChild(Cell);


                rowscounts = rowscounts + 1;

                //DataGrid PURTM
                XmlNode DataGridS = xmlDoc.SelectSingleNode("./Form/FormFieldValue/FieldItem[@fieldId='DETAILS']/DataGrid");
                DataGridS.AppendChild(Row);

            }


            ////用ADDTACK，直接啟動起單
            //ADDTACK(Form);

            //ADD TO DB
            ////string connectionString = ConfigurationManager.ConnectionStrings["dbUOF"].ToString();

            //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
            //sqlConn = new SqlConnection(connectionString);

            //20210902密
            Class1 TKID = new Class1();//用new 建立類別實體
            SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

            //資料庫使用者密碼解密
            sqlsb.Password = TKID.Decryption(sqlsb.Password);
            sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

            String connectionString;
            sqlConn = new SqlConnection(sqlsb.ConnectionString);
            connectionString = sqlConn.ConnectionString.ToString();

            StringBuilder queryString = new StringBuilder();




            queryString.AppendFormat(@" INSERT INTO [{0}].dbo.TB_WKF_EXTERNAL_TASK
                                         (EXTERNAL_TASK_ID,FORM_INFO,STATUS,EXTERNAL_FORM_NBR)
                                        VALUES (NEWID(),@XML,2,'{1}')
                                        ", DBNAME, EXTERNAL_FORM_NBR);

            try
            {
                using (SqlConnection connection = new SqlConnection(connectionString))
                {

                    SqlCommand command = new SqlCommand(queryString.ToString(), connection);
                    command.Parameters.Add("@XML", SqlDbType.NVarChar).Value = Form.OuterXml;

                    command.Connection.Open();

                    int count = command.ExecuteNonQuery();

                    connection.Close();
                    connection.Dispose();

                }
            }
            catch
            {

            }
            finally
            {

            }
        }

        public DataTable FIND_Z_UOF_FORM1005_FLOW()
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();


            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sbSql.Clear();
                sbSqlQuery.Clear();

                //只查 現在到上個月，CONVERT(datetime,[GA005_fieldValue])>=DATEADD(MONTH, -1,  GETDATE())
                //過濾 已成功發出草稿的請購單+品名，[EXTERNAL_FORM_NBR_fieldValue]+[GG002_fieldValue]
                //View_TB_WKF_TASK_APPLYBUY_MERGE，會記錄  已申請成功+申請中
                sbSql.AppendFormat(@"  
                                   SELECT 
                                    [ID]
                                    ,[NAMES]
                                    FROM [UOF].[dbo].[Z_UOF_FORM1005_FLOW]
                                    ");


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    return ds1.Tables["ds1"];

                }
                else
                {
                    return null;
                }

            }
            catch
            {
                return null;
            }
            finally
            {
                sqlConn.Close();
            }
        }

        public DataTable FIND_Z_UOF_FORM1005_DEFAULT_PERSON()
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            SqlCommandBuilder sqlCmdBuilder1 = new SqlCommandBuilder();
            DataSet ds1 = new DataSet();


            try
            {
                //connectionString = ConfigurationManager.ConnectionStrings["dberp"].ConnectionString;
                //sqlConn = new SqlConnection(connectionString);

                //20210902密
                Class1 TKID = new Class1();//用new 建立類別實體
                SqlConnectionStringBuilder sqlsb = new SqlConnectionStringBuilder(ConfigurationManager.ConnectionStrings["dbUOF"].ConnectionString);

                //資料庫使用者密碼解密
                sqlsb.Password = TKID.Decryption(sqlsb.Password);
                sqlsb.UserID = TKID.Decryption(sqlsb.UserID);

                String connectionString;
                sqlConn = new SqlConnection(sqlsb.ConnectionString);

                sbSql.Clear();
                sbSqlQuery.Clear();

                //何翔鈞
                string ACCOUNT = "190041";

                sbSql.AppendFormat(@"  
                                   SELECT 
                                    [GROUP_NAME] AS 'DEPNAME'
                                    ,[TB_EB_EMPL_DEP].[GROUP_ID]+','+[GROUP_NAME]+',False' AS 'DEPNO'
                                    ,[TB_EB_USER].[USER_GUID]
                                    ,[ACCOUNT]
                                    ,[NAME]
                                    ,[TB_EB_EMPL_DEP].[GROUP_ID]
                                    ,[TITLE_ID]     
                                    ,[GROUP_NAME]
                                    ,[GROUP_CODE]
                                    FROM [UOF].[dbo].[TB_EB_USER],[UOF].[dbo].[TB_EB_EMPL_DEP],[UOF].[dbo].[TB_EB_GROUP]
                                    WHERE [TB_EB_USER].[USER_GUID]=[TB_EB_EMPL_DEP].[USER_GUID]
                                    AND [TB_EB_EMPL_DEP].[GROUP_ID]=[TB_EB_GROUP].[GROUP_ID]
                                    AND ISNULL([TB_EB_GROUP].[GROUP_CODE],'')<>''
                                    AND TB_EB_EMPL_DEP.ORDERS=0
                                    AND ACCOUNT='{0}'
                                    ", ACCOUNT);


                adapter1 = new SqlDataAdapter(@"" + sbSql, sqlConn);

                sqlCmdBuilder1 = new SqlCommandBuilder(adapter1);
                sqlConn.Open();
                ds1.Clear();
                adapter1.Fill(ds1, "ds1");
                sqlConn.Close();

                if (ds1.Tables["ds1"].Rows.Count >= 1)
                {
                    return ds1.Tables["ds1"];

                }
                else
                {
                    return null;
                }

            }
            catch
            {
                return null;
            }
            finally
            {
                sqlConn.Close();
            }
        }

        #endregion

        #region BUTTON
        private void button1_Click(object sender, EventArgs e)
        {
            BASELIMITHRSBAR1 = SEARCHBASELIMITHRS("製一線桶數");
            BASELIMITHRSBAR1 = Math.Round(BASELIMITHRSBAR1,0);
            BASELIMITHRSBAR2 = SEARCHBASELIMITHRS("製二線桶數");
            BASELIMITHRSBAR2 = Math.Round(BASELIMITHRSBAR2, 0);

            BASELIMITHRS1 = SEARCHBASELIMITHRS("製一線稼動率時數");
            BASELIMITHRS2 = SEARCHBASELIMITHRS("製二線稼動率時數");
            BASELIMITHRS3 = SEARCHBASELIMITHRS("手工線稼動率時數");
            BASELIMITHRS9 = SEARCHBASELIMITHRS("包裝線稼動率時數");

            ADDTOUOFTB_EIP_SCH_MEMO_MOC(DateTime.Now.ToString("yyyyMMdd"));
        }

        private void button2_Click(object sender, EventArgs e)
        {
            ADDTOUOFTB_EIP_SCH_MEMO_PUR(DateTime.Now.ToString("yyyyMMdd"));
        }

        private void button3_Click(object sender, EventArgs e)
        {
            ADDTOUOFTB_EIP_SCH_MEMO_COP(DateTime.Now.ToString("yyyyMMdd"));
        }
        private void button4_Click(object sender, EventArgs e)
        {
            UPDATEtb_COMPANYSTATUS1();
            UPDATEtb_COMPANYSTATUS2();
        }
        private void button5_Click(object sender, EventArgs e)
        {
            ADDtb_COMPANY();
        }

        private void button6_Click(object sender, EventArgs e)
        {
            //UPDATEtb_COMPANYOWNER_ID();
        }
        private void button7_Click(object sender, EventArgs e)
        {
            ADDTOUOFOURTAB();
            //ADDTB_WKF_EXTERNAL_TASK("A311", "20210415007");
        }
        private void button8_Click(object sender, EventArgs e)
        {
            //別用，改UOF送單
            //ADDCOPTCCOPTD();
        }
        private void button9_Click(object sender, EventArgs e)
        {
            //別用，改UOF送單
            //ADDCOPTECOPTF();
        }

        private void button11_Click(object sender, EventArgs e)
        {
            ADDTKMKdboTBSTORESCHECK();
            //SEARCHUOFTB_WKF_TASK();
        }
        private void button12_Click(object sender, EventArgs e)
        {
            //20230529
            // 02.老楊出差訓練及外出申請單 轉 2001.教育訓練課程心得報告 
            //20230721 暫停
            CHECKADDTOUOFFORMEDUCATION();



        }
        private void button13_Click(object sender, EventArgs e)
        {
            //出差報告單
            //20230721 暫停
            CHECKADDTOUOFFORBUSINESSTRIPS();
        }

        private void button14_Click(object sender, EventArgs e)
        {
            NEWTBUOFQC1002();
        }
        private void button15_Click(object sender, EventArgs e)
        {
            NEWPURTCPURTD();
        }

        private void button16_Click(object sender, EventArgs e)
        {
            NEWPURTEPURTF();
        }
        private void button17_Click(object sender, EventArgs e)
        {
            ADDTOERPTKMOCUE();
        }
        private void button18_Click(object sender, EventArgs e)
        {
            ADDTKQCQCPURTH();
        }

        private void button19_Click(object sender, EventArgs e)
        {
            NEWPURTLPURTMPURTN();
        }
        private void button20_Click(object sender, EventArgs e)
        {
            //PURA0.進貨-原物料品質驗收單
            NEWPURTGPURTH();
        }
        private void button21_Click(object sender, EventArgs e)
        {
            NEWBOMTABOMTBBOMTC();
        }

        private void button22_Click(object sender, EventArgs e)
        {
            ADDTKQCUOFQCPURTGPURTH();
        }
        private void button23_Click(object sender, EventArgs e)
        {
            //MOCI02.製令單 
            ADDUOFMOCTAMOCTB();
        }
        private void button24_Click(object sender, EventArgs e)
        {
            //ACRI02.結帳單
            ADDUOFACRTAACRTB();
        }
        private void button25_Click(object sender, EventArgs e)
        {
            //ACRI03.收款單 
            ADDUOFACRTCACRTD();
        }
        private void button26_Click(object sender, EventArgs e)
        {
            //ACPI02.應付憑單
            ADDUOFACPTAACPTB();
        }

        private void button27_Click(object sender, EventArgs e)
        {
            //ACPI03.付款單
            ADDUOFACPTCACPTB();
        }
        private void button28_Click(object sender, EventArgs e)
        {
            //ACTI10.會計傳票 
            ADDUOFACTTAACTTB();
        }
        private void button29_Click(object sender, EventArgs e)
        {
            //ASTI02.資產資料建立作業
            ADDUOFASTMBASTMC();
        }
          private void button30_Click(object sender, EventArgs e)
        {
            //ASTI06.資產改良建立作業
            ADDUOFASTMBASTMCASTTCASTTD();
        }

        private void button31_Click(object sender, EventArgs e)
        {
            //ASTI07.資產重估建立作業
            ADDUOFASTMBASTMCASTTCASTTD_ACTI07();
        }

        private void button32_Click(object sender, EventArgs e)
        {
            //ASTI08.資產報廢建立作業
            ADDUOFASTMBASTMCASTTCASTTD_ACTI08();
        }

        private void button33_Click(object sender, EventArgs e)
        {
            //ASTI09.資產出售建立作業
            ADDUOFASTMBASTMCASTTCASTTD_ACTI09();
        }

        private void button34_Click(object sender, EventArgs e)
        {
            //ASTI10.資產調整建立作業
            ADDUOFASTMBASTMCASTTCASTTD_ACTI10();
        }

        private void button35_Click(object sender, EventArgs e)
        {
            //ASTI11.資產折舊建立作業
            ADDUOFASTMBASTMCASTTCASTTD_ACTI11();
        }

        private void button36_Click(object sender, EventArgs e)
        {
            //ASTI12.資產移轉建立作業
            ADDUOFASTMBASTMCASTTEASTTE();
        }

        private void button37_Click(object sender, EventArgs e)
        {
            //MOCI12.製令變更單
            ADDUOFMOCTOMOCTP();
        }
        private void button38_Click(object sender, EventArgs e)
        {
            //A11A客供入料單同進貨單跑進貨驗收流程
            ADDUOFQCINVTAINVTB();

        }
        private void button39_Click(object sender, EventArgs e)
        {
            ADDCOPMACOPMBCOPMC();
        }
        private void button40_Click(object sender, EventArgs e)
        {
            //匯入UOF的門市營業日誌
            ADDTKMKdboTBSTOREDAILY();
        }

        private void button41_Click(object sender, EventArgs e)
        {
            ADD_TO_UOF_QC1001();
        }
        private void button42_Click(object sender, EventArgs e)
        {
            //暫停不轉入總務的外掛
            //改轉入UOF表單 1005.雜項採購單中 
            //NEWBUYITEM();
        }
        private void button43_Click(object sender, EventArgs e)
        {
            //把UOF的1003.雜項請購單，在核成後，轉到UOF的 	1005.雜項採購單
            //將請購單，分品項都各自建立1張採購單給總務
            //ADD_UOF_FORM_GRAFFIRS_1005();

            //把UOF的1003.雜項請購單，在核成後，轉到UOF的 	1005.雜項採購單
            //請購單的廠商是未指定=空白
            //ADD_UOF_FORM_GRAFFIRS_1005_GG004_NULL();
            //會依請購單的廠商有指定，合併採購單
            ADD_UOF_FORM_GRAFFIRS_1005_GG004_NOT_NULL();

        }

        private void button44_Click(object sender, EventArgs e)
        {
            //把UOF的1005.雜項採購單 ，在核成後，轉到 [TKGAFFAIRS].[dbo].[BUYITEMREPORTS] 當報表
            ADD_TKGAFFAIRS_BUYITEMREPORTS();
        }

        private void button45_Click(object sender, EventArgs e)
        {
            NEW_PURTGPURIJ();
        }
        private void button46_Click(object sender, EventArgs e)
        {
            NEW_COPTGCOPTH();
        }
        private void button47_Click(object sender, EventArgs e)
        {
            NEW_COPTICOPTJ();
        }
        private void button48_Click(object sender, EventArgs e)
        {
            NEW_INVTAINVTB();
        }

        private void button49_Click(object sender, EventArgs e)
        {
            NEW_INVTAINVTB_TRANS();
        }
        private void button50_Click(object sender, EventArgs e)
        {
            NEWTBUOFQC1001();
        }


        private void button51_Click(object sender, EventArgs e)
        {
            NEW_INVTJINVTK();
        }

        private void button52_Click(object sender, EventArgs e)
        {
            NEW_MOCTH_MOCTI();
        }
        private void button53_Click(object sender, EventArgs e)
        {
            NEW_MOCTK_MOCTL();
        }
        private void button54_Click(object sender, EventArgs e)
        {
            NEW_MOCTF_MOCTG();
        }
        private void button55_Click(object sender, EventArgs e)
        {
            NEW_TKRESEARCH_TK_UOF_RESEARCH_1002();
        }
        private void button56_Click(object sender, EventArgs e)
        {
            NEW_TKRESEARCH_TK_UOF_DESIGN_1002();
        }

        private void button57_Click(object sender, EventArgs e)
        {
            NEW_MOCTC_MOCTE();
        }
        private void button58_Click(object sender, EventArgs e)
        {
            NEW_BOMMC_BOMMD();
        }
        private void button59_Click(object sender, EventArgs e)
        {
            NEW_BOMMJ_BOMMK();
        }
        private void button60_Click(object sender, EventArgs e)
        {
            NEW_BOMMI();
        }
        private void button61_Click(object sender, EventArgs e)
        {
            NEW_MOCTC_MOCTE_B();
        }
        private void button62_Click(object sender, EventArgs e)
        {
            ADD_TBPROMOTIONNFEE();
        }
        private void button63_Click(object sender, EventArgs e)
        {
            COPTC_TC010_TC011_UPDATE();
        }
        private void button64_Click(object sender, EventArgs e)
        {
            UPDATE_TK_BOMMI();
        }
        private void button65_Click(object sender, EventArgs e)
        {
            UPDATE_TK_COPTGTG113();
        }

        private void button66_Click(object sender, EventArgs e)
        {
            NEWUOFQC1006();
        }
        private void button67_Click(object sender, EventArgs e)
        {
            //先產生[TB_WKF_EXTERNAL_TASK]的資料
            //UOF一次拋轉表單5分鐘只能100筆，所以要分批拋轉
            //更新STATUS='2',DOC_NBR=NULL,TASK_ID=NULL
            //UOF要自動核單，到下一關

            //要重起UOF的才服務-Ede.Uof.Utlity.Task.Engine

            //不要有逾時[UOF].dbo.TB_WKF_TASK_NODE
            //UPDATE[UOF].dbo.TB_WKF_TASK_NODE
            ADD_UOF_COPMA_100A();
        }
        private void button68_Click(object sender, EventArgs e)
        {
            ADD_UOF_COPMA_1001();
        }
        private void button69_Click(object sender, EventArgs e)
        {
            NEWPURTEPURTF_ERP();
        }
        private void button70_Click(object sender, EventArgs e)
        {
            NEW_POSET();
        }
        private void button71_Click(object sender, EventArgs e)
        {
            //門市日誌-早班
            NEW_TBSTOREDAILY_MORNING();
            ///門市日誌-午班
            NEW_TBSTOREDAILY_AFTERMOON();
        }

        private void button72_Click(object sender, EventArgs e)
        {
            ADD_TKPUR_PURVERSIONSNUMS();
        }
        private void button73_Click(object sender, EventArgs e)
        {
            ADD_TKPUR_PURMODELSNUMS();
        }
        private void button74_Click(object sender, EventArgs e)
        {
            ADD_TK_ZINVMBBAKING();
        }
        private void button75_Click(object sender, EventArgs e)
        {
            ADD_TK_MOC_REPORTMOCBOMPROCESS_REPORTMOCBOMORIPROCESS();
        }
        #endregion


    }
}
